{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "quantity",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "Claimed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "quantity",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "DepositPI",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "Pause",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "Unpause",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "AMOUNT_NATIVE_TOKEN",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "AMOUNT_TOKEN",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "balance",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_userAddress",
						"type": "address"
					}
				],
				"name": "claim",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					}
				],
				"name": "getUserInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "totalQuantity",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lastQuantity",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lastSend",
								"type": "uint256"
							}
						],
						"internalType": "struct TokenFaucet.UserInfo",
						"name": "user",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "coinAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "to",
						"type": "address"
					}
				],
				"name": "handleForfeitedBalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "newAddr",
						"type": "address[]"
					},
					{
						"internalType": "address[]",
						"name": "removedAddr",
						"type": "address[]"
					}
				],
				"name": "modifyTokenWhiteList",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "newAddr",
						"type": "address[]"
					},
					{
						"internalType": "address[]",
						"name": "removedAddr",
						"type": "address[]"
					}
				],
				"name": "modifyWhiteList",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenQuantity",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_nativeQuantity",
						"type": "uint256"
					}
				],
				"name": "setLimit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "tokens",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpause",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userInfos",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalQuantity",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lastQuantity",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lastSend",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "whiteList",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"claim(address,address)": {
					"details": "Claim Token"
				},
				"handleForfeitedBalance(address,uint256,address)": {
					"details": "Withdraw bnb from this contract (Callable by owner only)"
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"pause()": {
					"details": "called by the owner to pause, triggers stopped state"
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"unpause()": {
					"details": "called by the owner to unpause, returns to normal state"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"TokenFaucet.sol": "TokenFaucet"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Context.sol": {
			"keccak256": "0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0",
			"license": "MIT",
			"urls": [
				"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f",
				"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"
			]
		},
		"IERC20.sol": {
			"keccak256": "0x8435e8230e900d716b4261cebc91985b70e406e6fd433e9751b46a2f0553401a",
			"license": "MIT",
			"urls": [
				"bzz-raw://0a82e9a70916b84548d3dcad593027da45cbcda310e5b07d3aa56cfa4f97628c",
				"dweb:/ipfs/Qmatc1Bx5fqGNoa9tnDFedThGaLQm69pB8Z7B85uxpacJv"
			]
		},
		"Ownable.sol": {
			"keccak256": "0xd5a0e0965aca034e9819f91ab430a58057fddacd69ac88c68225135dcdda2069",
			"license": "MIT",
			"urls": [
				"bzz-raw://3681181d3be8f722e2eeafdbd75a5fe7f6cfdbc89233e5eb25178e29e4085cd6",
				"dweb:/ipfs/Qmayb5rzCwJvZYJZarJ4gWEmYcyDTNdqqddoN88uS1AnjM"
			]
		},
		"Pausable.sol": {
			"keccak256": "0xa820963c4599a63e7eea294b322ea6d2aa6f1e68b4e772d75403732684f5b1e2",
			"license": "MIT",
			"urls": [
				"bzz-raw://7498ff9916a3a322d01f29bf5c44fb124efbe9e9bc2979bafcfeddee6fb29070",
				"dweb:/ipfs/QmYcV3vqbHdaQ8McCU1YFgPWT53CheWk7aau3vYxWjzxBL"
			]
		},
		"ReentrancyGuard.sol": {
			"keccak256": "0xb0313324f9311ec6f1b35bf7ec5431dbd6fc70959c0599e3b34937f4b4707c9c",
			"license": "MIT",
			"urls": [
				"bzz-raw://f364fbf221ef5125db8ac9d83598bcea0b7c7fa5f7e460f53c45f8b3279923ed",
				"dweb:/ipfs/QmT9G3jeN2eFkW1pojZYHhmk2pFtrH3w1wVg1UkL4eYF2g"
			]
		},
		"SafeMath.sol": {
			"keccak256": "0x186349419a02f096ad33a3a314500216b1d683dfff84bb58eb34a9c44adb2082",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a46c1daab5cd0e5bc4276769c07fe3674f2427866535e3139db6bcce62690e9",
				"dweb:/ipfs/QmevHusaMw5EqrmuVMpcgpif3TDatN9XUVdueYuPyVNsap"
			]
		},
		"TokenFaucet.sol": {
			"keccak256": "0xfc945626ea7463ab11986c68af39eeee978921b65e962df732727e3abd12428e",
			"license": "MIT",
			"urls": [
				"bzz-raw://f46a05ed3bcedddadcc4ecd3be925bc480f4ce2b75271069d12b7c1705484e2a",
				"dweb:/ipfs/QmUcd6f2LzmcUtRihoWzFZWfuJK9LZYgvciGKvYBTqbFnr"
			]
		}
	},
	"version": 1
}