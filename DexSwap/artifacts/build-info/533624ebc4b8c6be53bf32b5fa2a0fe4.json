{
	"id": "533624ebc4b8c6be53bf32b5fa2a0fe4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"PancakeERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\nimport \"./interfaces/IPancakeERC20.sol\";\nimport \"./libraries/SafeMath.sol\";\n\ncontract PancakeERC20 is IPancakeERC20 {\n    using SafeMath for uint256;\n\n    string public constant name = \"PiSwap LPs\";\n    string public constant symbol = \"PiSwap-LP\";\n    uint8 public constant decimals = 18;\n    uint256 public totalSupply;\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n    mapping(address => uint256) public nonces;\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    constructor() public {\n        uint256 chainId;\n        assembly {\n            chainId := chainid\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                keccak256(bytes(name)),\n                keccak256(bytes(\"1\")),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    function _mint(address to, uint256 value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function _burn(address from, uint256 value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(\n        address owner,\n        address spender,\n        uint256 value\n    ) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 value\n    ) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint256 value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint256 value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool) {\n        if (allowance[from][msg.sender] != uint256(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external {\n        require(deadline >= block.timestamp, \"Pancake: EXPIRED\");\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                DOMAIN_SEPARATOR,\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(recoveredAddress != address(0) && recoveredAddress == owner, \"Pancake: INVALID_SIGNATURE\");\n        _approve(owner, spender, value);\n    }\n}\n"
			},
			"libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0 <0.7.0;\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x, \"ds-math-add-overflow\");\n    }\n\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n    }\n\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\");\n    }\n}\n"
			},
			"interfaces/IPancakeERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakeERC20 {\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external pure returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    function nonces(address owner) external view returns (uint256);\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"PancakeERC20.sol": {
				"PancakeERC20": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"PancakeERC20.sol\":139:3668  contract PancakeERC20 is IPancakeERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"PancakeERC20.sol\":972:1419  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"PancakeERC20.sol\":972:1419  constructor() public {... */\n  pop\n    /* \"PancakeERC20.sol\":1003:1018  uint256 chainId */\n  0x00\n    /* \"PancakeERC20.sol\":1062:1069  chainid */\n  chainid\n    /* \"PancakeERC20.sol\":1051:1069  chainId := chainid */\n  swap1\n  pop\n    /* \"PancakeERC20.sol\":1158:1253  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  mload(0x40)\n  dup1\n  dup1\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  0x52\n  swap2\n  codecopy\n  0x52\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"PancakeERC20.sol\":1287:1291  name */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x506953776170204c507300000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"PancakeERC20.sol\":1271:1293  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"PancakeERC20.sol\":1321:1331  bytes(\"1\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"PancakeERC20.sol\":1311:1332  keccak256(bytes(\"1\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"PancakeERC20.sol\":1350:1357  chainId */\n  dup4\n    /* \"PancakeERC20.sol\":1383:1387  this */\n  address\n    /* \"PancakeERC20.sol\":1130:1402  abi.encode(... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"PancakeERC20.sol\":1130:1402  abi.encode(... */\n  swap1\n  0x40\n  mstore\n    /* \"PancakeERC20.sol\":1107:1412  keccak256(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"PancakeERC20.sol\":1088:1104  DOMAIN_SEPARATOR */\n  0x03\n    /* \"PancakeERC20.sol\":1088:1412  DOMAIN_SEPARATOR = keccak256(... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"PancakeERC20.sol\":972:1419  constructor() public {... */\n  pop\n    /* \"PancakeERC20.sol\":139:3668  contract PancakeERC20 is IPancakeERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"PancakeERC20.sol\":139:3668  contract PancakeERC20 is IPancakeERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"PancakeERC20.sol\":139:3668  contract PancakeERC20 is IPancakeERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3644e515\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"PancakeERC20.sol\":217:259  string public constant name = \"PiSwap LPs\" */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"PancakeERC20.sol\":217:259  string public constant name = \"PiSwap LPs\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":2305:2452  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"PancakeERC20.sol\":2305:2452  function approve(address spender, uint256 value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":355:381  uint256 public totalSupply */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":2603:2934  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"PancakeERC20.sol\":2603:2934  function transferFrom(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":649:757  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":314:349  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":508:539  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":387:431  mapping(address => uint256) public balanceOf */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"PancakeERC20.sol\":387:431  mapping(address => uint256) public balanceOf */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":763:804  mapping(address => uint256) public nonces */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"PancakeERC20.sol\":763:804  mapping(address => uint256) public nonces */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":265:308  string public constant symbol = \"PiSwap-LP\" */\n    tag_12:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_46:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_46)\n    tag_48:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"PancakeERC20.sol\":265:308  string public constant symbol = \"PiSwap-LP\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_49\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_49:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":2458:2597  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_13:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"PancakeERC20.sol\":2458:2597  function transfer(address to, uint256 value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":2940:3666  function permit(... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n        /* \"PancakeERC20.sol\":2940:3666  function permit(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"PancakeERC20.sol\":437:501  mapping(address => mapping(address => uint256)) public allowance */\n    tag_15:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"PancakeERC20.sol\":437:501  mapping(address => mapping(address => uint256)) public allowance */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":217:259  string public constant name = \"PiSwap LPs\" */\n    tag_19:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x506953776170204c507300000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":2305:2452  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_26:\n        /* \"PancakeERC20.sol\":2372:2376  bool */\n      0x00\n        /* \"PancakeERC20.sol\":2388:2424  _approve(msg.sender, spender, value) */\n      tag_60\n        /* \"PancakeERC20.sol\":2397:2407  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2409:2416  spender */\n      dup5\n        /* \"PancakeERC20.sol\":2418:2423  value */\n      dup5\n        /* \"PancakeERC20.sol\":2388:2396  _approve */\n      tag_61\n        /* \"PancakeERC20.sol\":2388:2424  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_60:\n        /* \"PancakeERC20.sol\":2441:2445  true */\n      0x01\n        /* \"PancakeERC20.sol\":2434:2445  return true */\n      swap1\n      pop\n        /* \"PancakeERC20.sol\":2305:2452  function approve(address spender, uint256 value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":355:381  uint256 public totalSupply */\n    tag_28:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":2603:2934  function transferFrom(... */\n    tag_31:\n        /* \"PancakeERC20.sol\":2714:2718  bool */\n      0x00\n        /* \"PancakeERC20.sol\":2773:2775  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"PancakeERC20.sol\":2734:2743  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":2734:2749  allowance[from] */\n      0x00\n        /* \"PancakeERC20.sol\":2744:2748  from */\n      dup7\n        /* \"PancakeERC20.sol\":2734:2749  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2734:2761  allowance[from][msg.sender] */\n      0x00\n        /* \"PancakeERC20.sol\":2750:2760  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2734:2761  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2734:2776  allowance[from][msg.sender] != uint256(-1) */\n      eq\n        /* \"PancakeERC20.sol\":2730:2871  if (allowance[from][msg.sender] != uint256(-1)) {... */\n      tag_63\n      jumpi\n        /* \"PancakeERC20.sol\":2822:2860  allowance[from][msg.sender].sub(value) */\n      tag_64\n        /* \"PancakeERC20.sol\":2854:2859  value */\n      dup3\n        /* \"PancakeERC20.sol\":2822:2831  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":2822:2837  allowance[from] */\n      0x00\n        /* \"PancakeERC20.sol\":2832:2836  from */\n      dup8\n        /* \"PancakeERC20.sol\":2822:2837  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2822:2849  allowance[from][msg.sender] */\n      0x00\n        /* \"PancakeERC20.sol\":2838:2848  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2822:2849  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2822:2853  allowance[from][msg.sender].sub */\n      tag_65\n      swap1\n        /* \"PancakeERC20.sol\":2822:2860  allowance[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"PancakeERC20.sol\":2792:2801  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":2792:2807  allowance[from] */\n      0x00\n        /* \"PancakeERC20.sol\":2802:2806  from */\n      dup7\n        /* \"PancakeERC20.sol\":2792:2807  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2792:2819  allowance[from][msg.sender] */\n      0x00\n        /* \"PancakeERC20.sol\":2808:2818  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2792:2819  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2792:2860  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakeERC20.sol\":2730:2871  if (allowance[from][msg.sender] != uint256(-1)) {... */\n    tag_63:\n        /* \"PancakeERC20.sol\":2880:2906  _transfer(from, to, value) */\n      tag_66\n        /* \"PancakeERC20.sol\":2890:2894  from */\n      dup5\n        /* \"PancakeERC20.sol\":2896:2898  to */\n      dup5\n        /* \"PancakeERC20.sol\":2900:2905  value */\n      dup5\n        /* \"PancakeERC20.sol\":2880:2889  _transfer */\n      tag_67\n        /* \"PancakeERC20.sol\":2880:2906  _transfer(from, to, value) */\n      jump\t// in\n    tag_66:\n        /* \"PancakeERC20.sol\":2923:2927  true */\n      0x01\n        /* \"PancakeERC20.sol\":2916:2927  return true */\n      swap1\n      pop\n        /* \"PancakeERC20.sol\":2603:2934  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":649:757  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_33:\n        /* \"PancakeERC20.sol\":691:757  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"PancakeERC20.sol\":649:757  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":314:349  uint8 public constant decimals = 18 */\n    tag_35:\n        /* \"PancakeERC20.sol\":347:349  18 */\n      0x12\n        /* \"PancakeERC20.sol\":314:349  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":508:539  bytes32 public DOMAIN_SEPARATOR */\n    tag_37:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":387:431  mapping(address => uint256) public balanceOf */\n    tag_40:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":763:804  mapping(address => uint256) public nonces */\n    tag_43:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":265:308  string public constant symbol = \"PiSwap-LP\" */\n    tag_45:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      0x5069537761702d4c500000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":2458:2597  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_52:\n        /* \"PancakeERC20.sol\":2521:2525  bool */\n      0x00\n        /* \"PancakeERC20.sol\":2537:2569  _transfer(msg.sender, to, value) */\n      tag_69\n        /* \"PancakeERC20.sol\":2547:2557  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2559:2561  to */\n      dup5\n        /* \"PancakeERC20.sol\":2563:2568  value */\n      dup5\n        /* \"PancakeERC20.sol\":2537:2546  _transfer */\n      tag_67\n        /* \"PancakeERC20.sol\":2537:2569  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_69:\n        /* \"PancakeERC20.sol\":2586:2590  true */\n      0x01\n        /* \"PancakeERC20.sol\":2579:2590  return true */\n      swap1\n      pop\n        /* \"PancakeERC20.sol\":2458:2597  function transfer(address to, uint256 value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":2940:3666  function permit(... */\n    tag_55:\n        /* \"PancakeERC20.sol\":3153:3168  block.timestamp */\n      timestamp\n        /* \"PancakeERC20.sol\":3141:3149  deadline */\n      dup5\n        /* \"PancakeERC20.sol\":3141:3168  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"PancakeERC20.sol\":3133:3189  require(deadline >= block.timestamp, \"Pancake: EXPIRED\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204558504952454400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"PancakeERC20.sol\":3199:3213  bytes32 digest */\n      0x00\n        /* \"PancakeERC20.sol\":3301:3317  DOMAIN_SEPARATOR */\n      sload(0x03)\n        /* \"PancakeERC20.sol\":691:757  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"PancakeERC20.sol\":3356:3371  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"PancakeERC20.sol\":3373:3378  owner */\n      dup10\n        /* \"PancakeERC20.sol\":3380:3387  spender */\n      dup10\n        /* \"PancakeERC20.sol\":3389:3394  value */\n      dup10\n        /* \"PancakeERC20.sol\":3396:3402  nonces */\n      0x04\n        /* \"PancakeERC20.sol\":3396:3409  nonces[owner] */\n      0x00\n        /* \"PancakeERC20.sol\":3403:3408  owner */\n      dup15\n        /* \"PancakeERC20.sol\":3396:3409  nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"PancakeERC20.sol\":3396:3411  nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"PancakeERC20.sol\":3413:3421  deadline */\n      dup11\n        /* \"PancakeERC20.sol\":3345:3422  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"PancakeERC20.sol\":3345:3422  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      swap1\n      0x40\n      mstore\n        /* \"PancakeERC20.sol\":3335:3423  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"PancakeERC20.sol\":3239:3437  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"PancakeERC20.sol\":3239:3437  abi.encodePacked(... */\n      swap1\n      0x40\n      mstore\n        /* \"PancakeERC20.sol\":3216:3447  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"PancakeERC20.sol\":3199:3447  bytes32 digest = keccak256(... */\n      swap1\n      pop\n        /* \"PancakeERC20.sol\":3457:3481  address recoveredAddress */\n      0x00\n        /* \"PancakeERC20.sol\":3484:3510  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"PancakeERC20.sol\":3494:3500  digest */\n      dup3\n        /* \"PancakeERC20.sol\":3502:3503  v */\n      dup7\n        /* \"PancakeERC20.sol\":3505:3506  r */\n      dup7\n        /* \"PancakeERC20.sol\":3508:3509  s */\n      dup7\n        /* \"PancakeERC20.sol\":3484:3510  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n        /* \"PancakeERC20.sol\":3484:3510  ecrecover(digest, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"PancakeERC20.sol\":3457:3510  address recoveredAddress = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"PancakeERC20.sol\":3556:3557  0 */\n      0x00\n        /* \"PancakeERC20.sol\":3528:3558  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakeERC20.sol\":3528:3544  recoveredAddress */\n      dup2\n        /* \"PancakeERC20.sol\":3528:3558  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PancakeERC20.sol\":3528:3587  recoveredAddress != address(0) && recoveredAddress == owner */\n      dup1\n      iszero\n      tag_73\n      jumpi\n      pop\n        /* \"PancakeERC20.sol\":3582:3587  owner */\n      dup9\n        /* \"PancakeERC20.sol\":3562:3587  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakeERC20.sol\":3562:3578  recoveredAddress */\n      dup2\n        /* \"PancakeERC20.sol\":3562:3587  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PancakeERC20.sol\":3528:3587  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_73:\n        /* \"PancakeERC20.sol\":3520:3618  require(recoveredAddress != address(0) && recoveredAddress == owner, \"Pancake: INVALID_SIGNATURE\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a20494e56414c49445f5349474e4154555245000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"PancakeERC20.sol\":3628:3659  _approve(owner, spender, value) */\n      tag_75\n        /* \"PancakeERC20.sol\":3637:3642  owner */\n      dup10\n        /* \"PancakeERC20.sol\":3644:3651  spender */\n      dup10\n        /* \"PancakeERC20.sol\":3653:3658  value */\n      dup10\n        /* \"PancakeERC20.sol\":3628:3636  _approve */\n      tag_61\n        /* \"PancakeERC20.sol\":3628:3659  _approve(owner, spender, value) */\n      jump\t// in\n    tag_75:\n        /* \"PancakeERC20.sol\":2940:3666  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":437:501  mapping(address => mapping(address => uint256)) public allowance */\n    tag_58:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":1845:2044  function _approve(... */\n    tag_61:\n        /* \"PancakeERC20.sol\":1986:1991  value */\n      dup1\n        /* \"PancakeERC20.sol\":1958:1967  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":1958:1974  allowance[owner] */\n      0x00\n        /* \"PancakeERC20.sol\":1968:1973  owner */\n      dup6\n        /* \"PancakeERC20.sol\":1958:1974  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":1958:1983  allowance[owner][spender] */\n      0x00\n        /* \"PancakeERC20.sol\":1975:1982  spender */\n      dup5\n        /* \"PancakeERC20.sol\":1958:1983  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":1958:1991  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakeERC20.sol\":2022:2029  spender */\n      dup2\n        /* \"PancakeERC20.sol\":2006:2037  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakeERC20.sol\":2015:2020  owner */\n      dup4\n        /* \"PancakeERC20.sol\":2006:2037  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"PancakeERC20.sol\":2031:2036  value */\n      dup4\n        /* \"PancakeERC20.sol\":2006:2037  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PancakeERC20.sol\":1845:2044  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_65:\n        /* \"libraries/SafeMath.sol\":397:406  uint256 z */\n      0x00\n        /* \"libraries/SafeMath.sol\":441:442  x */\n      dup3\n        /* \"libraries/SafeMath.sol\":435:436  y */\n      dup3\n        /* \"libraries/SafeMath.sol\":431:432  x */\n      dup5\n        /* \"libraries/SafeMath.sol\":431:436  x - y */\n      sub\n        /* \"libraries/SafeMath.sol\":427:436  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"libraries/SafeMath.sol\":426:442  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"libraries/SafeMath.sol\":418:468  require((z = x - y) <= x, \"ds-math-sub-underflow\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d7375622d756e646572666c6f770000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"libraries/SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":2050:2299  function _transfer(... */\n    tag_67:\n        /* \"PancakeERC20.sol\":2176:2202  balanceOf[from].sub(value) */\n      tag_80\n        /* \"PancakeERC20.sol\":2196:2201  value */\n      dup2\n        /* \"PancakeERC20.sol\":2176:2185  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2176:2191  balanceOf[from] */\n      0x00\n        /* \"PancakeERC20.sol\":2186:2190  from */\n      dup7\n        /* \"PancakeERC20.sol\":2176:2191  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2176:2195  balanceOf[from].sub */\n      tag_65\n      swap1\n        /* \"PancakeERC20.sol\":2176:2202  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_80:\n        /* \"PancakeERC20.sol\":2158:2167  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2158:2173  balanceOf[from] */\n      0x00\n        /* \"PancakeERC20.sol\":2168:2172  from */\n      dup6\n        /* \"PancakeERC20.sol\":2158:2173  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2158:2202  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakeERC20.sol\":2228:2252  balanceOf[to].add(value) */\n      tag_81\n        /* \"PancakeERC20.sol\":2246:2251  value */\n      dup2\n        /* \"PancakeERC20.sol\":2228:2237  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2228:2241  balanceOf[to] */\n      0x00\n        /* \"PancakeERC20.sol\":2238:2240  to */\n      dup6\n        /* \"PancakeERC20.sol\":2228:2241  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2228:2245  balanceOf[to].add */\n      tag_82\n      swap1\n        /* \"PancakeERC20.sol\":2228:2252  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"PancakeERC20.sol\":2212:2221  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2212:2225  balanceOf[to] */\n      0x00\n        /* \"PancakeERC20.sol\":2222:2224  to */\n      dup5\n        /* \"PancakeERC20.sol\":2212:2225  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2212:2252  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakeERC20.sol\":2282:2284  to */\n      dup2\n        /* \"PancakeERC20.sol\":2267:2292  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakeERC20.sol\":2276:2280  from */\n      dup4\n        /* \"PancakeERC20.sol\":2267:2292  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"PancakeERC20.sol\":2286:2291  value */\n      dup4\n        /* \"PancakeERC20.sol\":2267:2292  Transfer(from, to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PancakeERC20.sol\":2050:2299  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_82:\n        /* \"libraries/SafeMath.sol\":256:265  uint256 z */\n      0x00\n        /* \"libraries/SafeMath.sol\":300:301  x */\n      dup3\n        /* \"libraries/SafeMath.sol\":294:295  y */\n      dup3\n        /* \"libraries/SafeMath.sol\":290:291  x */\n      dup5\n        /* \"libraries/SafeMath.sol\":290:295  x + y */\n      add\n        /* \"libraries/SafeMath.sol\":286:295  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"libraries/SafeMath.sol\":285:301  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"libraries/SafeMath.sol\":277:326  require((z = x + y) >= x, \"ds-math-add-overflow\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"libraries/SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a7231582001d36cfae0559ee2ee539e9b341f497f3b9b60d51e1433f733110fc1d3f91f0264736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506000469050604051808061109060529139605201905060405180910390206040518060400160405280600a81526020017f506953776170204c507300000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001955050505050506040516020818303038152906040528051906020012060038190555050610f618061012f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a4565b604051808215151515815260200191505060405180910390f35b6101c56105bb565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b61026961078c565b6040518082815260200191505060405180910390f35b6102876107b3565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6107b8565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107be565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d6565b6040518082815260200191505060405180910390f35b6103796107ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610827565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061083e565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b82565b6040518082815260200191505060405180910390f35b6040518060400160405280600a81526020017f506953776170204c50730000000000000000000000000000000000000000000081525081565b60006105b1338484610ba7565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610776576106f582600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610781848484610d15565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600981526020017f5069537761702d4c50000000000000000000000000000000000000000000000081525081565b6000610834338484610d15565b6001905092915050565b428410156108b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f50616e63616b653a20455850495245440000000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610a86573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610afa57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610b6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f50616e63616b653a20494e56414c49445f5349474e415455524500000000000081525060200191505060405180910390fd5b610b77898989610ba7565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115610d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b610d6781600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dfc81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610f26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a7231582001d36cfae0559ee2ee539e9b341f497f3b9b60d51e1433f733110fc1d3f91f0264736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 CHAINID SWAP1 POP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x1090 PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506953776170204C507300000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0xF61 DUP1 PUSH2 0x12F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x319 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506953776170204C507300000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B1 CALLER DUP5 DUP5 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x776 JUMPI PUSH2 0x6F5 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x781 DUP5 DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5069537761702D4C500000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 CALLER DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204558504952454400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB77 DUP10 DUP10 DUP10 PUSH2 0xBA7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0xD0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD67 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDFC DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEA9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 ADD 0xD3 PUSH13 0xFAE0559EE2EE539E9B341F497F EXTCODESIZE SWAP12 PUSH1 0xD5 0x1E EQ CALLER 0xF7 CALLER GT 0xF 0xC1 0xD3 0xF9 0x1F MUL PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "139:3529:0:-;;;972:447;8:9:-1;5:2;;;30:1;27;20:12;5:2;972:447:0;1003:15;1062:7;1051:18;;1158:95;;;;;;;;;;;;;;;;;;;1287:4;;;;;;;;;;;;;;;;;1271:22;;;;;;1321:10;;;;;;;;;;;;;;;;;1311:21;;;;;;1350:7;1383:4;1130:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1130:272:0;;;1107:305;;;;;;1088:16;:324;;;;972:447;139:3529;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a4565b604051808215151515815260200191505060405180910390f35b6101c56105bb565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b61026961078c565b6040518082815260200191505060405180910390f35b6102876107b3565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6107b8565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107be565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d6565b6040518082815260200191505060405180910390f35b6103796107ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610827565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061083e565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b82565b6040518082815260200191505060405180910390f35b6040518060400160405280600a81526020017f506953776170204c50730000000000000000000000000000000000000000000081525081565b60006105b1338484610ba7565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610776576106f582600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610781848484610d15565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600981526020017f5069537761702d4c50000000000000000000000000000000000000000000000081525081565b6000610834338484610d15565b6001905092915050565b428410156108b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f50616e63616b653a20455850495245440000000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610a86573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610afa57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610b6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f50616e63616b653a20494e56414c49445f5349474e415455524500000000000081525060200191505060405180910390fd5b610b77898989610ba7565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115610d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b610d6781600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dfc81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610f26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a7231582001d36cfae0559ee2ee539e9b341f497f3b9b60d51e1433f733110fc1d3f91f0264736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x319 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506953776170204C507300000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B1 CALLER DUP5 DUP5 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x776 JUMPI PUSH2 0x6F5 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x781 DUP5 DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5069537761702D4C500000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 CALLER DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204558504952454400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB77 DUP10 DUP10 DUP10 PUSH2 0xBA7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0xD0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD67 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDFC DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEA9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 ADD 0xD3 PUSH13 0xFAE0559EE2EE539E9B341F497F EXTCODESIZE SWAP12 PUSH1 0xD5 0x1E EQ CALLER 0xF7 CALLER GT 0xF 0xC1 0xD3 0xF9 0x1F MUL PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "139:3529:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;139:3529:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;217:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2305:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2305:147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;355:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2603:331;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2603:331:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;649:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;314:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;508:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;387:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;387:44:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;763:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;763:41:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;265:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;265:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2458:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2458:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2940:726;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2940:726:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;437:64;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;437:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;217:42;;;;;;;;;;;;;;;;;;;:::o;2305:147::-;2372:4;2388:36;2397:10;2409:7;2418:5;2388:8;:36::i;:::-;2441:4;2434:11;;2305:147;;;;:::o;355:26::-;;;;:::o;2603:331::-;2714:4;2773:2;2734:9;:15;2744:4;2734:15;;;;;;;;;;;;;;;:27;2750:10;2734:27;;;;;;;;;;;;;;;;:42;2730:141;;2822:38;2854:5;2822:9;:15;2832:4;2822:15;;;;;;;;;;;;;;;:27;2838:10;2822:27;;;;;;;;;;;;;;;;:31;;:38;;;;:::i;:::-;2792:9;:15;2802:4;2792:15;;;;;;;;;;;;;;;:27;2808:10;2792:27;;;;;;;;;;;;;;;:68;;;;2730:141;2880:26;2890:4;2896:2;2900:5;2880:9;:26::i;:::-;2923:4;2916:11;;2603:331;;;;;:::o;649:108::-;691:66;649:108;;;:::o;314:35::-;347:2;314:35;:::o;508:31::-;;;;:::o;387:44::-;;;;;;;;;;;;;;;;;:::o;763:41::-;;;;;;;;;;;;;;;;;:::o;265:43::-;;;;;;;;;;;;;;;;;;;:::o;2458:139::-;2521:4;2537:32;2547:10;2559:2;2563:5;2537:9;:32::i;:::-;2586:4;2579:11;;2458:139;;;;:::o;2940:726::-;3153:15;3141:8;:27;;3133:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3199:14;3301:16;;691:66;3356:15;;3373:5;3380:7;3389:5;3396:6;:13;3403:5;3396:13;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;3413:8;3345:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3345:77:0;;;3335:88;;;;;;3239:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3239:198:0;;;3216:231;;;;;;3199:248;;3457:24;3484:26;3494:6;3502:1;3505;3508;3484:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3484:26:0;;;;;;;;3457:53;;3556:1;3528:30;;:16;:30;;;;:59;;;;;3582:5;3562:25;;:16;:25;;;3528:59;3520:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3628:31;3637:5;3644:7;3653:5;3628:8;:31::i;:::-;2940:726;;;;;;;;;:::o;437:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1845:199::-;1986:5;1958:9;:16;1968:5;1958:16;;;;;;;;;;;;;;;:25;1975:7;1958:25;;;;;;;;;;;;;;;:33;;;;2022:7;2006:31;;2015:5;2006:31;;;2031:5;2006:31;;;;;;;;;;;;;;;;;;1845:199;;;:::o;339:136:2:-;397:9;441:1;435;431;:5;427:9;;;426:16;;418:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:136;;;;:::o;2050:249:0:-;2176:26;2196:5;2176:9;:15;2186:4;2176:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;2158:9;:15;2168:4;2158:15;;;;;;;;;;;;;;;:44;;;;2228:24;2246:5;2228:9;:13;2238:2;2228:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;2212:9;:13;2222:2;2212:13;;;;;;;;;;;;;;;:40;;;;2282:2;2267:25;;2276:4;2267:25;;;2286:5;2267:25;;;;;;;;;;;;;;;;;;2050:249;;;:::o;198:135:2:-;256:9;300:1;294;290;:5;286:9;;;285:16;;277:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;198:135;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "787400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1028",
								"PERMIT_TYPEHASH()": "300",
								"allowance(address,address)": "1355",
								"approve(address,uint256)": "22431",
								"balanceOf(address)": "1214",
								"decimals()": "328",
								"name()": "infinite",
								"nonces(address)": "1236",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1050",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 3668,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 139,
									"end": 3668,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 139,
									"end": 3668,
									"name": "MSTORE"
								},
								{
									"begin": 972,
									"end": 1419,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 972,
									"end": 1419,
									"name": "POP"
								},
								{
									"begin": 1003,
									"end": 1018,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1062,
									"end": 1069,
									"name": "CHAINID"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "SWAP1"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "POP"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "MLOAD"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "DUP1"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "DUP1"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "SWAP2"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "CODECOPY"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "ADD"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "SWAP1"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "POP"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "MLOAD"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "DUP1"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "SWAP2"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "SUB"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "SWAP1"
								},
								{
									"begin": 1158,
									"end": 1253,
									"name": "KECCAK256"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "MLOAD"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "DUP1"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "ADD"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "MSTORE"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "DUP1"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "DUP2"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "MSTORE"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "ADD"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "PUSH",
									"value": "506953776170204C507300000000000000000000000000000000000000000000"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "DUP2"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "MSTORE"
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "POP"
								},
								{
									"begin": 1271,
									"end": 1293,
									"name": "DUP1"
								},
								{
									"begin": 1271,
									"end": 1293,
									"name": "MLOAD"
								},
								{
									"begin": 1271,
									"end": 1293,
									"name": "SWAP1"
								},
								{
									"begin": 1271,
									"end": 1293,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1293,
									"name": "ADD"
								},
								{
									"begin": 1271,
									"end": 1293,
									"name": "KECCAK256"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "MLOAD"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "DUP1"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "ADD"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "MSTORE"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "DUP1"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "DUP2"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "MSTORE"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "ADD"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "PUSH",
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "DUP2"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "MSTORE"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "POP"
								},
								{
									"begin": 1311,
									"end": 1332,
									"name": "DUP1"
								},
								{
									"begin": 1311,
									"end": 1332,
									"name": "MLOAD"
								},
								{
									"begin": 1311,
									"end": 1332,
									"name": "SWAP1"
								},
								{
									"begin": 1311,
									"end": 1332,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1311,
									"end": 1332,
									"name": "ADD"
								},
								{
									"begin": 1311,
									"end": 1332,
									"name": "KECCAK256"
								},
								{
									"begin": 1350,
									"end": 1357,
									"name": "DUP4"
								},
								{
									"begin": 1383,
									"end": 1387,
									"name": "ADDRESS"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "MLOAD"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "ADD"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "DUP1"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "DUP7"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "DUP2"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "MSTORE"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "ADD"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "DUP6"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "DUP2"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "MSTORE"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "ADD"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "DUP5"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "DUP2"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "MSTORE"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "ADD"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "DUP4"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "DUP2"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "MSTORE"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "ADD"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "DUP3"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "AND"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "AND"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "DUP2"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "MSTORE"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "ADD"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "SWAP6"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "POP"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "POP"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "POP"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "POP"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "POP"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "POP"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "MLOAD"
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB"
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "SWAP1"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1130,
									"end": 1402,
									"name": "MSTORE"
								},
								{
									"begin": 1107,
									"end": 1412,
									"name": "DUP1"
								},
								{
									"begin": 1107,
									"end": 1412,
									"name": "MLOAD"
								},
								{
									"begin": 1107,
									"end": 1412,
									"name": "SWAP1"
								},
								{
									"begin": 1107,
									"end": 1412,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1107,
									"end": 1412,
									"name": "ADD"
								},
								{
									"begin": 1107,
									"end": 1412,
									"name": "KECCAK256"
								},
								{
									"begin": 1088,
									"end": 1104,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1088,
									"end": 1412,
									"name": "DUP2"
								},
								{
									"begin": 1088,
									"end": 1412,
									"name": "SWAP1"
								},
								{
									"begin": 1088,
									"end": 1412,
									"name": "SSTORE"
								},
								{
									"begin": 1088,
									"end": 1412,
									"name": "POP"
								},
								{
									"begin": 972,
									"end": 1419,
									"name": "POP"
								},
								{
									"begin": 139,
									"end": 3668,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 3668,
									"name": "DUP1"
								},
								{
									"begin": 139,
									"end": 3668,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 3668,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 139,
									"end": 3668,
									"name": "CODECOPY"
								},
								{
									"begin": 139,
									"end": 3668,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 139,
									"end": 3668,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582001d36cfae0559ee2ee539e9b341f497f3b9b60d51e1433f733110fc1d3f91f0264736f6c63430005100032",
									".code": [
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "MSTORE"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "LT"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "SHR"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "GT"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "GT"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMP"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMP"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3668,
											"name": "REVERT"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "ISZERO"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "JUMPI"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "EXP"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "NOT"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "SWAP3"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "RETURN"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "JUMPDEST"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "DUP2"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "AND"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SWAP3"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SWAP3"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "JUMPDEST"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "MLOAD"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "DUP3"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "ISZERO"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "ISZERO"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "ISZERO"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "ISZERO"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "DUP2"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "MSTORE"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "MLOAD"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SUB"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "RETURN"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "MLOAD"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "DUP3"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "DUP2"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "MSTORE"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "ADD"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "SWAP2"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "POP"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "POP"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "MLOAD"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "SWAP2"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "SUB"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "SWAP1"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "RETURN"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "JUMPDEST"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "DUP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "DUP2"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "ADD"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "DUP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "DUP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "AND"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "ADD"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP3"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP2"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "DUP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "AND"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "ADD"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP3"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP2"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "DUP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "ADD"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP3"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP2"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "POP"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "POP"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "POP"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "JUMPDEST"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "MLOAD"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "DUP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "DUP3"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "ISZERO"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "ISZERO"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "ISZERO"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "ISZERO"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "DUP2"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "MSTORE"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "ADD"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP2"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "POP"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "POP"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "MLOAD"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "DUP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP2"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SUB"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP1"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "RETURN"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "JUMPDEST"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "JUMPDEST"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "MLOAD"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "DUP1"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "DUP3"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "DUP2"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "MSTORE"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "ADD"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "SWAP2"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "POP"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "POP"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "MLOAD"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "DUP1"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "SWAP2"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "SUB"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "SWAP1"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "RETURN"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "JUMPDEST"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "JUMPDEST"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "MLOAD"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "DUP1"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "DUP3"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "AND"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "AND"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "DUP2"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "MSTORE"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "ADD"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "SWAP2"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "POP"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "POP"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "MLOAD"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "DUP1"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "SWAP2"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "SUB"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "SWAP1"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "RETURN"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "JUMPDEST"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "JUMPDEST"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "MLOAD"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "DUP1"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "DUP3"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "DUP2"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "MSTORE"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "ADD"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "SWAP2"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "POP"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "POP"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "MLOAD"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "DUP1"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "SWAP2"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "SUB"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "SWAP1"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "RETURN"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "JUMPDEST"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "DUP1"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "DUP2"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "ADD"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "SWAP1"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "DUP1"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "DUP1"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "AND"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "SWAP1"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "ADD"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "SWAP1"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "SWAP3"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "SWAP2"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "SWAP1"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "POP"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "POP"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "POP"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "JUMPDEST"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "MLOAD"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "DUP1"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "DUP3"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "DUP2"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "MSTORE"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "ADD"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "SWAP2"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "POP"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "POP"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "MLOAD"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "DUP1"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "SWAP2"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "SUB"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "SWAP1"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "RETURN"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "JUMPDEST"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "DUP1"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "DUP2"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "ADD"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "DUP1"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "DUP1"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "AND"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "ADD"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "SWAP3"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "SWAP2"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "POP"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "POP"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "POP"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "JUMPDEST"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "MLOAD"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "DUP1"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "DUP3"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "DUP2"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "MSTORE"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "ADD"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "SWAP2"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "POP"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "POP"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "MLOAD"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "DUP1"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "SWAP2"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "SUB"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "RETURN"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "JUMPDEST"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "JUMPDEST"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "MLOAD"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "SUB"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "MSTORE"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP4"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "MLOAD"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "MSTORE"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "SWAP2"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "MLOAD"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP4"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "AND"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "ISZERO"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "JUMPI"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "SUB"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "MLOAD"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP4"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "SUB"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "EXP"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "SUB"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "NOT"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "AND"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "MSTORE"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "SWAP2"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "JUMPDEST"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "SWAP3"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "MLOAD"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "SWAP2"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "SUB"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "RETURN"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "JUMPDEST"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "DUP1"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "DUP2"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "ADD"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SWAP1"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "DUP1"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "DUP1"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "AND"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SWAP1"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "ADD"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SWAP1"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SWAP3"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SWAP2"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SWAP1"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "DUP1"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SWAP1"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "ADD"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SWAP1"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SWAP3"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SWAP2"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SWAP1"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "JUMPDEST"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "MLOAD"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "DUP1"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "DUP3"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "ISZERO"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "ISZERO"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "ISZERO"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "ISZERO"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "DUP2"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "MSTORE"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "ADD"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SWAP2"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "MLOAD"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "DUP1"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SWAP2"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SUB"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SWAP1"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "RETURN"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "JUMPDEST"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "DUP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "DUP2"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "ADD"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "DUP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "DUP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "AND"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "ADD"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP3"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP2"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "DUP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "AND"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "ADD"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP3"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP2"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "DUP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "ADD"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP3"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP2"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "DUP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "ADD"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP3"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP2"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "DUP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "AND"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "ADD"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP3"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP2"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "DUP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "ADD"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP3"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP2"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "DUP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "ADD"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP3"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP2"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "JUMPDEST"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "STOP"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "JUMPDEST"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "DUP1"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "DUP2"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "ADD"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SWAP1"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "DUP1"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "DUP1"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "AND"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SWAP1"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "ADD"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SWAP1"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SWAP3"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SWAP2"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SWAP1"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "DUP1"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "AND"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SWAP1"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "ADD"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SWAP1"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SWAP3"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SWAP2"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SWAP1"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "POP"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "POP"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "POP"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "JUMPDEST"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "MLOAD"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "DUP1"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "DUP3"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "DUP2"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "MSTORE"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "ADD"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SWAP2"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "POP"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "POP"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "MLOAD"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "DUP1"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SWAP2"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SUB"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SWAP1"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "RETURN"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"value": "506953776170204C507300000000000000000000000000000000000000000000"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 259,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "JUMPDEST"
										},
										{
											"begin": 2372,
											"end": 2376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2397,
											"end": 2407,
											"name": "CALLER"
										},
										{
											"begin": 2409,
											"end": 2416,
											"name": "DUP5"
										},
										{
											"begin": 2418,
											"end": 2423,
											"name": "DUP5"
										},
										{
											"begin": 2388,
											"end": 2396,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "JUMPDEST"
										},
										{
											"begin": 2441,
											"end": 2445,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2434,
											"end": 2445,
											"name": "SWAP1"
										},
										{
											"begin": 2434,
											"end": 2445,
											"name": "POP"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SWAP3"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2305,
											"end": 2452,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "SLOAD"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "DUP2"
										},
										{
											"begin": 355,
											"end": 381,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "JUMPDEST"
										},
										{
											"begin": 2714,
											"end": 2718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2775,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2734,
											"end": 2743,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2748,
											"name": "DUP7"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "AND"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "AND"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "DUP2"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "MSTORE"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "ADD"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "SWAP1"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "DUP2"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "MSTORE"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "ADD"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "KECCAK256"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2760,
											"name": "CALLER"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "AND"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "AND"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "DUP2"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "MSTORE"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "ADD"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "SWAP1"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "DUP2"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "MSTORE"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "ADD"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "KECCAK256"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "SLOAD"
										},
										{
											"begin": 2734,
											"end": 2776,
											"name": "EQ"
										},
										{
											"begin": 2730,
											"end": 2871,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2730,
											"end": 2871,
											"name": "JUMPI"
										},
										{
											"begin": 2822,
											"end": 2860,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2854,
											"end": 2859,
											"name": "DUP3"
										},
										{
											"begin": 2822,
											"end": 2831,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2836,
											"name": "DUP8"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "AND"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "AND"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "DUP2"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "MSTORE"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "ADD"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "SWAP1"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "DUP2"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "MSTORE"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "ADD"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2837,
											"name": "KECCAK256"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2838,
											"end": 2848,
											"name": "CALLER"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "AND"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "AND"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "DUP2"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "MSTORE"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "ADD"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "SWAP1"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "DUP2"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "MSTORE"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "ADD"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "KECCAK256"
										},
										{
											"begin": 2822,
											"end": 2849,
											"name": "SLOAD"
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "SWAP1"
										},
										{
											"begin": 2822,
											"end": 2860,
											"name": "SWAP2"
										},
										{
											"begin": 2822,
											"end": 2860,
											"name": "SWAP1"
										},
										{
											"begin": 2822,
											"end": 2860,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2822,
											"end": 2860,
											"name": "AND"
										},
										{
											"begin": 2822,
											"end": 2860,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2822,
											"end": 2860,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2822,
											"end": 2860,
											"name": "JUMPDEST"
										},
										{
											"begin": 2792,
											"end": 2801,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2806,
											"name": "DUP7"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "AND"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "AND"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "DUP2"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "MSTORE"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "SWAP1"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "DUP2"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "MSTORE"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "ADD"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "KECCAK256"
										},
										{
											"begin": 2792,
											"end": 2819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2818,
											"name": "CALLER"
										},
										{
											"begin": 2792,
											"end": 2819,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2792,
											"end": 2819,
											"name": "AND"
										},
										{
											"begin": 2792,
											"end": 2819,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2792,
											"end": 2819,
											"name": "AND"
										},
										{
											"begin": 2792,
											"end": 2819,
											"name": "DUP2"
										},
										{
											"begin": 2792,
											"end": 2819,
											"name": "MSTORE"
										},
										{
											"begin": 2792,
											"end": 2819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2819,
											"name": "ADD"
										},
										{
											"begin": 2792,
											"end": 2819,
											"name": "SWAP1"
										},
										{
											"begin": 2792,
											"end": 2819,
											"name": "DUP2"
										},
										{
											"begin": 2792,
											"end": 2819,
											"name": "MSTORE"
										},
										{
											"begin": 2792,
											"end": 2819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2819,
											"name": "ADD"
										},
										{
											"begin": 2792,
											"end": 2819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2819,
											"name": "KECCAK256"
										},
										{
											"begin": 2792,
											"end": 2860,
											"name": "DUP2"
										},
										{
											"begin": 2792,
											"end": 2860,
											"name": "SWAP1"
										},
										{
											"begin": 2792,
											"end": 2860,
											"name": "SSTORE"
										},
										{
											"begin": 2792,
											"end": 2860,
											"name": "POP"
										},
										{
											"begin": 2730,
											"end": 2871,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2730,
											"end": 2871,
											"name": "JUMPDEST"
										},
										{
											"begin": 2880,
											"end": 2906,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "DUP5"
										},
										{
											"begin": 2896,
											"end": 2898,
											"name": "DUP5"
										},
										{
											"begin": 2900,
											"end": 2905,
											"name": "DUP5"
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2880,
											"end": 2906,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2880,
											"end": 2906,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2880,
											"end": 2906,
											"name": "JUMPDEST"
										},
										{
											"begin": 2923,
											"end": 2927,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2916,
											"end": 2927,
											"name": "SWAP1"
										},
										{
											"begin": 2916,
											"end": 2927,
											"name": "POP"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP4"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "SWAP3"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "POP"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "POP"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "POP"
										},
										{
											"begin": 2603,
											"end": 2934,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "JUMPDEST"
										},
										{
											"begin": 691,
											"end": 757,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "SHL"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "DUP2"
										},
										{
											"begin": 649,
											"end": 757,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "JUMPDEST"
										},
										{
											"begin": 347,
											"end": 349,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "DUP2"
										},
										{
											"begin": 314,
											"end": 349,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "JUMPDEST"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "SLOAD"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "DUP2"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "JUMPDEST"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "MSTORE"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "DUP1"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "MSTORE"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "KECCAK256"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "SWAP2"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "POP"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "SWAP1"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "POP"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "SLOAD"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "DUP2"
										},
										{
											"begin": 387,
											"end": 431,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "JUMPDEST"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "MSTORE"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "DUP1"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "MSTORE"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "KECCAK256"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "SWAP2"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "POP"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "POP"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "SLOAD"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "DUP2"
										},
										{
											"begin": 763,
											"end": 804,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "JUMPDEST"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "MLOAD"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "MSTORE"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "MSTORE"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "PUSH",
											"value": "5069537761702D4C500000000000000000000000000000000000000000000000"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "MSTORE"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 308,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "JUMPDEST"
										},
										{
											"begin": 2521,
											"end": 2525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2537,
											"end": 2569,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2547,
											"end": 2557,
											"name": "CALLER"
										},
										{
											"begin": 2559,
											"end": 2561,
											"name": "DUP5"
										},
										{
											"begin": 2563,
											"end": 2568,
											"name": "DUP5"
										},
										{
											"begin": 2537,
											"end": 2546,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2537,
											"end": 2569,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2537,
											"end": 2569,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2537,
											"end": 2569,
											"name": "JUMPDEST"
										},
										{
											"begin": 2586,
											"end": 2590,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2579,
											"end": 2590,
											"name": "SWAP1"
										},
										{
											"begin": 2579,
											"end": 2590,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SWAP3"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "SWAP2"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2597,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "JUMPDEST"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3141,
											"end": 3149,
											"name": "DUP5"
										},
										{
											"begin": 3141,
											"end": 3168,
											"name": "LT"
										},
										{
											"begin": 3141,
											"end": 3168,
											"name": "ISZERO"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "JUMPI"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "MLOAD"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "DUP2"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "MSTORE"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "ADD"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "DUP1"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "DUP1"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "ADD"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "DUP3"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "DUP2"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "SUB"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "DUP3"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "MSTORE"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "DUP2"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "MSTORE"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "ADD"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "DUP1"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "PUSH",
											"value": "50616E63616B653A204558504952454400000000000000000000000000000000"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "DUP2"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "MSTORE"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "POP"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "ADD"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "SWAP2"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "POP"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "POP"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "MLOAD"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "DUP1"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "SWAP2"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "SUB"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "SWAP1"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "REVERT"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3133,
											"end": 3189,
											"name": "JUMPDEST"
										},
										{
											"begin": 3199,
											"end": 3213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "SLOAD"
										},
										{
											"begin": 691,
											"end": 757,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3356,
											"end": 3371,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3371,
											"name": "SHL"
										},
										{
											"begin": 3373,
											"end": 3378,
											"name": "DUP10"
										},
										{
											"begin": 3380,
											"end": 3387,
											"name": "DUP10"
										},
										{
											"begin": 3389,
											"end": 3394,
											"name": "DUP10"
										},
										{
											"begin": 3396,
											"end": 3402,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3408,
											"name": "DUP15"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "AND"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "AND"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "DUP2"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "MSTORE"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "ADD"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "SWAP1"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "DUP2"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "MSTORE"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "ADD"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "KECCAK256"
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "DUP2"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "SLOAD"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "SWAP3"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "SWAP2"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "SWAP2"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "SSTORE"
										},
										{
											"begin": 3413,
											"end": 3421,
											"name": "DUP11"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "MLOAD"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "ADD"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "DUP1"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "DUP8"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "DUP2"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "MSTORE"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "ADD"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "DUP7"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "AND"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "AND"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "DUP2"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "MSTORE"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "ADD"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "DUP6"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "AND"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "AND"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "DUP2"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "MSTORE"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "ADD"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "DUP5"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "DUP2"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "MSTORE"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "ADD"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "DUP4"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "DUP2"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "MSTORE"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "ADD"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "DUP3"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "DUP2"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "MSTORE"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "ADD"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "SWAP7"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "POP"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "POP"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "POP"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "POP"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "POP"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "POP"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "POP"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "SWAP1"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3345,
											"end": 3422,
											"name": "MSTORE"
										},
										{
											"begin": 3335,
											"end": 3423,
											"name": "DUP1"
										},
										{
											"begin": 3335,
											"end": 3423,
											"name": "MLOAD"
										},
										{
											"begin": 3335,
											"end": 3423,
											"name": "SWAP1"
										},
										{
											"begin": 3335,
											"end": 3423,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3335,
											"end": 3423,
											"name": "ADD"
										},
										{
											"begin": 3335,
											"end": 3423,
											"name": "KECCAK256"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "MLOAD"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "ADD"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "DUP1"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "DUP1"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "DUP2"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "POP"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "ADD"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "DUP4"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "DUP2"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "ADD"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "DUP3"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "DUP2"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "ADD"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "SWAP3"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "POP"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "POP"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "POP"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "SWAP1"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3239,
											"end": 3437,
											"name": "MSTORE"
										},
										{
											"begin": 3216,
											"end": 3447,
											"name": "DUP1"
										},
										{
											"begin": 3216,
											"end": 3447,
											"name": "MLOAD"
										},
										{
											"begin": 3216,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 3216,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3216,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 3216,
											"end": 3447,
											"name": "KECCAK256"
										},
										{
											"begin": 3199,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 3199,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 3457,
											"end": 3481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3494,
											"end": 3500,
											"name": "DUP3"
										},
										{
											"begin": 3502,
											"end": 3503,
											"name": "DUP7"
										},
										{
											"begin": 3505,
											"end": 3506,
											"name": "DUP7"
										},
										{
											"begin": 3508,
											"end": 3509,
											"name": "DUP7"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "MLOAD"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "DUP2"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "MSTORE"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "ADD"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "MSTORE"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "MLOAD"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "DUP1"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "DUP6"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "DUP2"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "MSTORE"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "ADD"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "DUP5"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "AND"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "AND"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "DUP2"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "MSTORE"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "ADD"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "DUP4"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "DUP2"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "MSTORE"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "ADD"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "DUP3"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "DUP2"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "MSTORE"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "ADD"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "SWAP5"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "POP"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "POP"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "POP"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "POP"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "POP"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "MLOAD"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "DUP2"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "SUB"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "SWAP1"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "DUP1"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "DUP5"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "SUB"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "SWAP1"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "DUP6"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "GAS"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "STATICCALL"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "POP"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "POP"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "POP"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "MLOAD"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "SUB"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "MLOAD"
										},
										{
											"begin": 3457,
											"end": 3510,
											"name": "SWAP1"
										},
										{
											"begin": 3457,
											"end": 3510,
											"name": "POP"
										},
										{
											"begin": 3556,
											"end": 3557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3558,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3528,
											"end": 3558,
											"name": "AND"
										},
										{
											"begin": 3528,
											"end": 3544,
											"name": "DUP2"
										},
										{
											"begin": 3528,
											"end": 3558,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3528,
											"end": 3558,
											"name": "AND"
										},
										{
											"begin": 3528,
											"end": 3558,
											"name": "EQ"
										},
										{
											"begin": 3528,
											"end": 3558,
											"name": "ISZERO"
										},
										{
											"begin": 3528,
											"end": 3587,
											"name": "DUP1"
										},
										{
											"begin": 3528,
											"end": 3587,
											"name": "ISZERO"
										},
										{
											"begin": 3528,
											"end": 3587,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3528,
											"end": 3587,
											"name": "JUMPI"
										},
										{
											"begin": 3528,
											"end": 3587,
											"name": "POP"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "DUP9"
										},
										{
											"begin": 3562,
											"end": 3587,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3562,
											"end": 3587,
											"name": "AND"
										},
										{
											"begin": 3562,
											"end": 3578,
											"name": "DUP2"
										},
										{
											"begin": 3562,
											"end": 3587,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3562,
											"end": 3587,
											"name": "AND"
										},
										{
											"begin": 3562,
											"end": 3587,
											"name": "EQ"
										},
										{
											"begin": 3528,
											"end": 3587,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 3528,
											"end": 3587,
											"name": "JUMPDEST"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "JUMPI"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "MLOAD"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "DUP2"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "MSTORE"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "ADD"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "DUP1"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "DUP1"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "ADD"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "DUP3"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "DUP2"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "SUB"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "DUP3"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "MSTORE"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "DUP2"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "MSTORE"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "ADD"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "DUP1"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F5349474E4154555245000000000000"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "DUP2"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "MSTORE"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "POP"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "ADD"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "SWAP2"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "POP"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "POP"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "MLOAD"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "DUP1"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "SWAP2"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "SUB"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "SWAP1"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "REVERT"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3520,
											"end": 3618,
											"name": "JUMPDEST"
										},
										{
											"begin": 3628,
											"end": 3659,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3637,
											"end": 3642,
											"name": "DUP10"
										},
										{
											"begin": 3644,
											"end": 3651,
											"name": "DUP10"
										},
										{
											"begin": 3653,
											"end": 3658,
											"name": "DUP10"
										},
										{
											"begin": 3628,
											"end": 3636,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 3628,
											"end": 3659,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3628,
											"end": 3659,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3628,
											"end": 3659,
											"name": "JUMPDEST"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "POP"
										},
										{
											"begin": 2940,
											"end": 3666,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "JUMPDEST"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "MSTORE"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "DUP2"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "MSTORE"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "KECCAK256"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "MSTORE"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "DUP1"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "MSTORE"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "KECCAK256"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SWAP2"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "POP"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SWAP2"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "POP"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "POP"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "SLOAD"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "DUP2"
										},
										{
											"begin": 437,
											"end": 501,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1845,
											"end": 2044,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1845,
											"end": 2044,
											"name": "JUMPDEST"
										},
										{
											"begin": 1986,
											"end": 1991,
											"name": "DUP1"
										},
										{
											"begin": 1958,
											"end": 1967,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 1973,
											"name": "DUP6"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "AND"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "AND"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "DUP2"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "MSTORE"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "ADD"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "SWAP1"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "DUP2"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "MSTORE"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "ADD"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "KECCAK256"
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1982,
											"name": "DUP5"
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "AND"
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "AND"
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "DUP2"
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "MSTORE"
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "ADD"
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "SWAP1"
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "DUP2"
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "MSTORE"
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "ADD"
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "KECCAK256"
										},
										{
											"begin": 1958,
											"end": 1991,
											"name": "DUP2"
										},
										{
											"begin": 1958,
											"end": 1991,
											"name": "SWAP1"
										},
										{
											"begin": 1958,
											"end": 1991,
											"name": "SSTORE"
										},
										{
											"begin": 1958,
											"end": 1991,
											"name": "POP"
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP2"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "AND"
										},
										{
											"begin": 2015,
											"end": 2020,
											"name": "DUP4"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "AND"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2031,
											"end": 2036,
											"name": "DUP4"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "MLOAD"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "DUP1"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "DUP3"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "DUP2"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "MSTORE"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "ADD"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "SWAP2"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "POP"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "POP"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "MLOAD"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "DUP1"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "SWAP2"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "SUB"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "SWAP1"
										},
										{
											"begin": 2006,
											"end": 2037,
											"name": "LOG3"
										},
										{
											"begin": 1845,
											"end": 2044,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 2044,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 2044,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 2044,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 397,
											"end": 406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 441,
											"end": 442,
											"name": "DUP3"
										},
										{
											"begin": 435,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP5"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SUB"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "SWAP2"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "POP"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "GT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPI"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F770000000000000000000000"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "REVERT"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "SWAP3"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2050,
											"end": 2299,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2050,
											"end": 2299,
											"name": "JUMPDEST"
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2196,
											"end": 2201,
											"name": "DUP2"
										},
										{
											"begin": 2176,
											"end": 2185,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2190,
											"name": "DUP7"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "AND"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "AND"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "DUP2"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "MSTORE"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "ADD"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "SWAP1"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "DUP2"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "MSTORE"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "ADD"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "KECCAK256"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "SLOAD"
										},
										{
											"begin": 2176,
											"end": 2195,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2176,
											"end": 2195,
											"name": "SWAP1"
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "SWAP2"
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "SWAP1"
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "AND"
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "JUMPDEST"
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2172,
											"name": "DUP6"
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "AND"
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "AND"
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "DUP2"
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "MSTORE"
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "ADD"
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "SWAP1"
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "DUP2"
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "MSTORE"
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "ADD"
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "KECCAK256"
										},
										{
											"begin": 2158,
											"end": 2202,
											"name": "DUP2"
										},
										{
											"begin": 2158,
											"end": 2202,
											"name": "SWAP1"
										},
										{
											"begin": 2158,
											"end": 2202,
											"name": "SSTORE"
										},
										{
											"begin": 2158,
											"end": 2202,
											"name": "POP"
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2246,
											"end": 2251,
											"name": "DUP2"
										},
										{
											"begin": 2228,
											"end": 2237,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2240,
											"name": "DUP6"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "AND"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "AND"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "DUP2"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "MSTORE"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "ADD"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "SWAP1"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "DUP2"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "MSTORE"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "ADD"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "KECCAK256"
										},
										{
											"begin": 2228,
											"end": 2241,
											"name": "SLOAD"
										},
										{
											"begin": 2228,
											"end": 2245,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2228,
											"end": 2245,
											"name": "SWAP1"
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "SWAP2"
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "AND"
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "JUMPDEST"
										},
										{
											"begin": 2212,
											"end": 2221,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2224,
											"name": "DUP5"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "AND"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "AND"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "DUP2"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "MSTORE"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "ADD"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "SWAP1"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "DUP2"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "MSTORE"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "ADD"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "KECCAK256"
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "DUP2"
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "SSTORE"
										},
										{
											"begin": 2212,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 2282,
											"end": 2284,
											"name": "DUP2"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "AND"
										},
										{
											"begin": 2276,
											"end": 2280,
											"name": "DUP4"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "AND"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2286,
											"end": 2291,
											"name": "DUP4"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "MLOAD"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "DUP1"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "DUP3"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "DUP2"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "MSTORE"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "ADD"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "SWAP2"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "POP"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "POP"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "MLOAD"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "DUP1"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "SWAP2"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "SUB"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "SWAP1"
										},
										{
											"begin": 2267,
											"end": 2292,
											"name": "LOG3"
										},
										{
											"begin": 2050,
											"end": 2299,
											"name": "POP"
										},
										{
											"begin": 2050,
											"end": 2299,
											"name": "POP"
										},
										{
											"begin": 2050,
											"end": 2299,
											"name": "POP"
										},
										{
											"begin": 2050,
											"end": 2299,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 256,
											"end": 265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 300,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 294,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 290,
											"end": 291,
											"name": "DUP5"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "LT"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "ISZERO"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "REVERT"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPDEST"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "SWAP3"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "SWAP2"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "POP"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "POP"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"PancakeERC20.sol\":\"PancakeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PancakeERC20.sol\":{\"keccak256\":\"0x38e3ab32757f5423b8dba7ed17e7a4c6add27c57ca4be4c6c7739661dfbde654\",\"urls\":[\"bzz-raw://ae78dca93f468ccca3ede86b30431a6c13583b49b11f6a0105032610657f7bac\",\"dweb:/ipfs/QmQtWVSxiF31S91GYDXebwxh5mmTW5HGxJRPJ1ofGBgURG\"]},\"interfaces/IPancakeERC20.sol\":{\"keccak256\":\"0x1c12c7596bbb8cae6c81f403722344bdbb8e6b3adad577d8e75d3b92005e06e1\",\"urls\":[\"bzz-raw://07464188002aa47af55741ea345b54a062619ce1890b37e2acc71e31e2cb6c0e\",\"dweb:/ipfs/QmcvxDZNR5kPar3NLNsVEr2BTRVcuJh9eoFtd5Tb6LQibJ\"]},\"libraries/SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "PancakeERC20.sol:PancakeERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "PancakeERC20.sol:PancakeERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "PancakeERC20.sol:PancakeERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "PancakeERC20.sol:PancakeERC20",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 38,
								"contract": "PancakeERC20.sol:PancakeERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"interfaces/IPancakeERC20.sol": {
				"IPancakeERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"interfaces/IPancakeERC20.sol\":\"IPancakeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IPancakeERC20.sol\":{\"keccak256\":\"0x1c12c7596bbb8cae6c81f403722344bdbb8e6b3adad577d8e75d3b92005e06e1\",\"urls\":[\"bzz-raw://07464188002aa47af55741ea345b54a062619ce1890b37e2acc71e31e2cb6c0e\",\"dweb:/ipfs/QmcvxDZNR5kPar3NLNsVEr2BTRVcuJh9eoFtd5Tb6LQibJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"libraries/SafeMath.sol\":175:632  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/SafeMath.sol\":175:632  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158200b2bcebfcaf028f071712b874f6a6ab11b6e1a5f027bb86812e516de0222f46c64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158200b2bcebfcaf028f071712b874f6a6ab11b6e1a5f027bb86812e516de0222f46c64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SIGNEXTEND 0x2B 0xCE 0xBF 0xCA CREATE 0x28 CREATE PUSH18 0x712B874F6A6AB11B6E1A5F027BB86812E516 0xDE MUL 0x22 DELEGATECALL PUSH13 0x64736F6C634300051000320000 ",
							"sourceMap": "175:457:2:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158200b2bcebfcaf028f071712b874f6a6ab11b6e1a5f027bb86812e516de0222f46c64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SIGNEXTEND 0x2B 0xCE 0xBF 0xCA CREATE 0x28 CREATE PUSH18 0x712B874F6A6AB11B6E1A5F027BB86812E516 0xDE MUL 0x22 DELEGATECALL PUSH13 0x64736F6C634300051000320000 ",
							"sourceMap": "175:457:2:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 632,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 632,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158200b2bcebfcaf028f071712b874f6a6ab11b6e1a5f027bb86812e516de0222f46c64736f6c63430005100032",
									".code": [
										{
											"begin": 175,
											"end": 632,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "ADDRESS"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "EQ"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"PancakeERC20.sol": {
				"ast": {
					"absolutePath": "PancakeERC20.sol",
					"exportedSymbols": {
						"PancakeERC20": [
							384
						]
					},
					"id": 385,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:0"
						},
						{
							"absolutePath": "interfaces/IPancakeERC20.sol",
							"file": "./interfaces/IPancakeERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 503,
							"src": "62:40:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 578,
							"src": "103:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "IPancakeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 502,
										"src": "164:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPancakeERC20_$502",
											"typeString": "contract IPancakeERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "164:13:0"
								}
							],
							"contractDependencies": [
								502
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 384,
							"linearizedBaseContracts": [
								384,
								502
							],
							"name": "PancakeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 577,
										"src": "190:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$577",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "184:27:0",
									"typeName": {
										"id": 7,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "203:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 11,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "217:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 9,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "217:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "506953776170204c5073",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "247:12:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2b1f98a130f226106b08f1d85c02826aff88c1eacf55fc1f7f4c0f56605ea6da",
											"typeString": "literal_string \"PiSwap LPs\""
										},
										"value": "PiSwap LPs"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "265:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 12,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "265:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "5069537761702d4c50",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "297:11:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_a6cbc63cdfbd1d9ef159481d815357b6c3f6e327810c44201d9e753bc2b6149a",
											"typeString": "literal_string \"PiSwap-LP\""
										},
										"value": "PiSwap-LP"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "314:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "314:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "347:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "355:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "355:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "387:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "395:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "387:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "406:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "437:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "445:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "437:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 27,
											"keyType": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "464:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "456:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 26,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "475:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 31,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "508:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 30,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "508:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 34,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "649:108:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 32,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "649:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "691:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 38,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "763:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 37,
										"keyType": {
											"id": 35,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "771:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "763:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 36,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "782:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 46,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "826:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "849:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "874:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "825:63:0"
									},
									"src": "811:78:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 54,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "909:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "931:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "951:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "908:57:0"
									},
									"src": "894:72:0"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "993:426:0",
										"statements": [
											{
												"assignments": [
													58
												],
												"declarations": [
													{
														"constant": false,
														"id": 58,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "1003:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 57,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1003:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 59,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1003:15:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 58,
															"isOffset": false,
															"isSlot": false,
															"src": "1051:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 60,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "1028:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 61,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1088:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 66,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1168:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 65,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "1158:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1158:95:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 70,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 11,
																						"src": "1287:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 69,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1281:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 71,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1281:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 68,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "1271:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1271:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 75,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1327:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 74,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1321:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 76,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1321:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 73,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "1311:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1311:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 78,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "1350:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 80,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 610,
																				"src": "1383:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PancakeERC20_$384",
																					"typeString": "contract PancakeERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PancakeERC20_$384",
																					"typeString": "contract PancakeERC20"
																				}
																			],
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1375:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1375:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 63,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "1130:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1130:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1130:272:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 62,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "1107:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1107:305:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1088:324:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1088:324:0"
											}
										]
									},
									"documentation": null,
									"id": 87,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "993:0:0"
									},
									"scope": 384,
									"src": "972:447:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1476:149:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 94,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1486:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 97,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1516:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 95,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1500:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 526,
															"src": "1500:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1500:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1486:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1486:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 101,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1532:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 103,
														"indexExpression": {
															"argumentTypes": null,
															"id": 102,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1542:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1532:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 108,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1566:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 104,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1548:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 106,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 105,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1558:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1548:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 526,
															"src": "1548:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1548:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1532:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1532:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1604:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1596:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1596:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1608:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 117,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1612:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 112,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "1587:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1587:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "EmitStatement",
												"src": "1582:36:0"
											}
										]
									},
									"documentation": null,
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1440:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1452:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1439:27:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1476:0:0"
									},
									"scope": 384,
									"src": "1425:200:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1684:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 128,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1694:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 130,
														"indexExpression": {
															"argumentTypes": null,
															"id": 129,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1704:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1694:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 135,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1732:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 131,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1712:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 133,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 132,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1722:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1712:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "1712:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1712:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1694:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "1694:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 139,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1748:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 142,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1778:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 140,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1762:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "1762:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1762:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1748:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "1748:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 147,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1808:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1822:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1814:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1814:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 151,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1826:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 146,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "1799:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1799:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "EmitStatement",
												"src": "1794:38:0"
											}
										]
									},
									"documentation": null,
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1646:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1660:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1645:29:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1684:0:0"
									},
									"scope": 384,
									"src": "1631:208:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1948:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 164,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1958:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 167,
															"indexExpression": {
																"argumentTypes": null,
																"id": 165,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1968:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1958:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 168,
														"indexExpression": {
															"argumentTypes": null,
															"id": 166,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1975:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1958:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 169,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1986:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1958:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1958:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 173,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "2015:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 174,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "2022:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 175,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "2031:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 172,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															46
														],
														"referencedDeclaration": 46,
														"src": "2006:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2006:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "2001:36:0"
											}
										]
									},
									"documentation": null,
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1872:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1895:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1895:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1920:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1862:77:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1948:0:0"
									},
									"scope": 384,
									"src": "1845:199:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "2148:151:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 188,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2158:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 190,
														"indexExpression": {
															"argumentTypes": null,
															"id": 189,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2168:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2158:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 195,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2196:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 191,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2176:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 193,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 192,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "2186:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2176:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "2176:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2176:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2158:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2158:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 199,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2212:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 201,
														"indexExpression": {
															"argumentTypes": null,
															"id": 200,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2222:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2212:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 206,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2246:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 202,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2228:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 204,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 203,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "2238:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2228:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 526,
															"src": "2228:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2228:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2212:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "2212:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 211,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 212,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2282:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 213,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2286:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 210,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "2267:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2267:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "2262:30:0"
											}
										]
									},
									"documentation": null,
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2078:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2100:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2120:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2068:71:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2148:0:0"
									},
									"scope": 384,
									"src": "2050:249:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "2378:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 227,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "2397:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2397:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 229,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "2409:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 230,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2418:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 226,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2388:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2388:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2388:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2441:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 225,
												"id": 234,
												"nodeType": "Return",
												"src": "2434:11:0"
											}
										]
									},
									"documentation": null,
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2322:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2339:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2339:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2321:32:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2372:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2372:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2371:6:0"
									},
									"scope": 384,
									"src": "2305:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 447,
									"visibility": "external"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "2527:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 246,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "2547:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2547:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 248,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "2559:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 249,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2563:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 245,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2537:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2537:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "2537:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2586:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 244,
												"id": 253,
												"nodeType": "Return",
												"src": "2579:11:0"
											}
										]
									},
									"documentation": null,
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2476:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2476:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2488:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2475:27:0"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2521:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2521:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2520:6:0"
									},
									"scope": 384,
									"src": "2458:139:0",
									"stateMutability": "nonpayable",
									"superFunction": 456,
									"visibility": "external"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "2720:214:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 266,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2734:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 268,
															"indexExpression": {
																"argumentTypes": null,
																"id": 267,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "2744:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2734:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 271,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 269,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "2750:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2750:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2734:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "2773:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2774:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint256"
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2734:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 295,
												"nodeType": "IfStatement",
												"src": "2730:141:0",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "2778:93:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 277,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "2792:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 281,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 278,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 257,
																			"src": "2802:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2792:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 282,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 279,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 592,
																			"src": "2808:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2808:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2792:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 290,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "2854:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 283,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "2822:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 285,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 284,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 257,
																					"src": "2832:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2822:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 288,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 286,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 592,
																					"src": "2838:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2838:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2822:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 548,
																		"src": "2822:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2822:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2792:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 293,
															"nodeType": "ExpressionStatement",
															"src": "2792:68:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 297,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2890:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 298,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "2896:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 299,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2900:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 296,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2880:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2880:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "2880:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2923:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 265,
												"id": 303,
												"nodeType": "Return",
												"src": "2916:11:0"
											}
										]
									},
									"documentation": null,
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2634:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2656:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2676:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2624:71:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2714:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2714:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2713:6:0"
									},
									"scope": 384,
									"src": "2603:331:0",
									"stateMutability": "nonpayable",
									"superFunction": 467,
									"visibility": "external"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "3123:543:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 323,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "3141:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 324,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "3153:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3153:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3141:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a2045585049524544",
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3170:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c94fedce6c17cde8c2120d29d390f27d6964b7aed2ab712d624019c41a3810c1",
																"typeString": "literal_string \"Pancake: EXPIRED\""
															},
															"value": "Pancake: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c94fedce6c17cde8c2120d29d390f27d6964b7aed2ab712d624019c41a3810c1",
																"typeString": "literal_string \"Pancake: EXPIRED\""
															}
														],
														"id": 322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595,
															596
														],
														"referencedDeclaration": 596,
														"src": "3133:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3133:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "3133:56:0"
											},
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 382,
														"src": "3199:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 330,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3199:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 353,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3273:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 336,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "3301:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 340,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 34,
																					"src": "3356:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 341,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 307,
																					"src": "3373:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 342,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 309,
																					"src": "3380:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 343,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "3389:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 347,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "3396:15:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 344,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 38,
																							"src": "3396:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 346,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 345,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 307,
																							"src": "3403:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "3396:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 348,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 313,
																					"src": "3413:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 338,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 579,
																					"src": "3345:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3345:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3345:77:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 337,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "3335:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3335:88:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 333,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "3239:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3239:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3239:198:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 332,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "3216:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3216:231:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3199:248:0"
											},
											{
												"assignments": [
													355
												],
												"declarations": [
													{
														"constant": false,
														"id": 355,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 382,
														"src": "3457:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 354,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3457:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 357,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3494:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 358,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "3502:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 359,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "3505:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 360,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "3508:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 356,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "3484:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3484:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3457:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 364,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "3528:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3556:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3548:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3548:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3528:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 369,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "3562:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 370,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "3582:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3562:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3528:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e56414c49445f5349474e4154555245",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3589:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_861fe3f25593eb07d57a38fb1b6b0f761f16eb1611a0df03954a734d69fb97bf",
																"typeString": "literal_string \"Pancake: INVALID_SIGNATURE\""
															},
															"value": "Pancake: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_861fe3f25593eb07d57a38fb1b6b0f761f16eb1611a0df03954a734d69fb97bf",
																"typeString": "literal_string \"Pancake: INVALID_SIGNATURE\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595,
															596
														],
														"referencedDeclaration": 596,
														"src": "3520:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3520:98:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "3520:98:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 377,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3637:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "3644:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 379,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "3653:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 376,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "3628:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3628:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "3628:31:0"
											}
										]
									},
									"documentation": null,
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2965:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2988:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3013:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3036:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3062:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 314,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3062:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3079:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 316,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3098:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 318,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2955:158:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3123:0:0"
									},
									"scope": 384,
									"src": "2940:726:0",
									"stateMutability": "nonpayable",
									"superFunction": 501,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "139:3529:0"
						}
					],
					"src": "36:3633:0"
				},
				"id": 0
			},
			"interfaces/IPancakeERC20.sol": {
				"ast": {
					"absolutePath": "interfaces/IPancakeERC20.sol",
					"exportedSymbols": {
						"IPancakeERC20": [
							502
						]
					},
					"id": 503,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 386,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 502,
							"linearizedBaseContracts": [
								502
							],
							"name": "IPancakeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 394,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "107:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "107:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "130:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "130:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "155:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "106:63:1"
									},
									"src": "92:78:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 402,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "190:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "212:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "232:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "189:57:1"
									},
									"src": "175:72:1"
								},
								{
									"body": null,
									"documentation": null,
									"id": 407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "266:2:1"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "292:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "292:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "291:15:1"
									},
									"scope": 502,
									"src": "253:54:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "328:2:1"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "354:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "354:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "353:15:1"
									},
									"scope": 502,
									"src": "313:56:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "392:2:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "418:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 414,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "418:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "417:7:1"
									},
									"scope": 502,
									"src": "375:50:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "477:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "476:9:1"
									},
									"scope": 502,
									"src": "431:55:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "511:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "510:15:1"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "549:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "548:9:1"
									},
									"scope": 502,
									"src": "492:66:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "583:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "598:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "582:32:1"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "638:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "637:9:1"
									},
									"scope": 502,
									"src": "564:83:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "687:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "669:32:1"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "720:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "719:6:1"
									},
									"scope": 502,
									"src": "653:73:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "750:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "762:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "749:27:1"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "795:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 453,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "795:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "794:6:1"
									},
									"scope": 502,
									"src": "732:69:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "838:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "860:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "880:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "828:71:1"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "918:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 464,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "918:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "917:6:1"
									},
									"scope": 502,
									"src": "807:117:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "955:2:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "981:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 469,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "980:9:1"
									},
									"scope": 502,
									"src": "930:60:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1020:2:1"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1046:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 474,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1045:9:1"
									},
									"scope": 502,
									"src": "996:59:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1077:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1076:15:1"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1115:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1114:9:1"
									},
									"scope": 502,
									"src": "1061:63:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1155:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1178:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1203:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1226:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1252:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 493,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1252:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1269:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 495,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1269:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1288:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 497,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1288:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1145:158:1"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1312:0:1"
									},
									"scope": 502,
									"src": "1130:183:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 503,
							"src": "62:1253:1"
						}
					],
					"src": "36:1280:1"
				},
				"id": 1
			},
			"libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							577
						]
					},
					"id": 578,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 504,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:31:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 577,
							"linearizedBaseContracts": [
								577
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "267:66:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 514,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 511,
																			"src": "286:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 515,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "290:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 516,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "294:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "290:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "286:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 519,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "285:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 520,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "300:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "285:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "303:22:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595,
															596
														],
														"referencedDeclaration": 596,
														"src": "277:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "277:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "277:49:2"
											}
										]
									},
									"documentation": null,
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "211:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "222:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "210:22:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "256:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "255:11:2"
									},
									"scope": 577,
									"src": "198:135:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "408:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 536,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "427:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 537,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 528,
																				"src": "431:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 538,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "435:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "431:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "427:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 541,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "426:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 542,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "441:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "426:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "444:23:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595,
															596
														],
														"referencedDeclaration": 596,
														"src": "418:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "418:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "418:50:2"
											}
										]
									},
									"documentation": null,
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "352:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "363:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "351:22:2"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "397:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "396:11:2"
									},
									"scope": 577,
									"src": "339:136:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "550:80:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 558,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "568:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "573:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "568:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 561,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 555,
																					"src": "579:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 564,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 562,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 550,
																						"src": "583:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 563,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 552,
																						"src": "587:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "583:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "579:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 566,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "578:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 567,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 552,
																		"src": "592:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "578:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 569,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "597:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "578:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "568:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "600:22:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595,
															596
														],
														"referencedDeclaration": 596,
														"src": "560:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "560:63:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "560:63:2"
											}
										]
									},
									"documentation": null,
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "494:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "505:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "493:22:2"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "539:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "538:11:2"
									},
									"scope": 577,
									"src": "481:149:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 578,
							"src": "175:457:2"
						}
					],
					"src": "36:597:2"
				},
				"id": 2
			}
		}
	}
}