{
	"id": "2f07afab413348adff7b5bd586d66a91",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"TokenFaucet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n//0xEaaFa39c860ff495da35bed9aD6ff3a4eCbe3c1f\npragma solidity >=0.6.0 <=0.8.0;\npragma abicoder v2;\n\nimport \"./Context.sol\";\nimport \"./Ownable.sol\";\nimport \"./SafeMath.sol\";\nimport \"./Ownable.sol\";\nimport \"./IERC20.sol\";\nimport \"./ReentrancyGuard.sol\";\nimport \"./Pausable.sol\";\n\ncontract TokenFaucet is Ownable, Pausable, ReentrancyGuard {\n    using SafeMath for uint256;\n\n    event Claimed(\n        address indexed buyer,\n        uint256 quantity,\n        uint256 timestamp\n    );\n\n    event DepositPI(\n        uint256 quantity,\n        uint256 timestamp\n    );\n\n    struct UserInfo {\n        uint256 totalQuantity;\n        uint256 lastQuantity;\n        uint256 lastSend;\n    }\n\n     modifier onlySafe() {\n        require(whiteList[msg.sender], \"require Safe Address.\");\n        _;\n    }\n\n    mapping(address => mapping(address => UserInfo)) public userInfos;\n    mapping(address => bool) public whiteList;\n    mapping(address => bool) public tokens;\n    uint256 public AMOUNT_TOKEN = 1000 ether;\n    uint256 public AMOUNT_NATIVE_TOKEN = 1 ether;\n\n    /**\n     * @dev Claim Token\n     */\n    function claim(address _tokenAddress, address _userAddress)\n        public\n        payable\n        nonReentrant\n        whenNotPaused\n        onlySafe\n    {\n        require(tokens[_tokenAddress], \"not  supported address\");\n        uint256 _quantity = AMOUNT_TOKEN;\n        if(_tokenAddress == address(0)) {\n            _quantity = AMOUNT_NATIVE_TOKEN;\n        }\n        UserInfo storage userInfo = userInfos[_tokenAddress][_userAddress];\n        userInfo.lastSend = block.timestamp;\n        userInfo.totalQuantity = userInfo.totalQuantity.add(_quantity);\n        userInfo.lastQuantity = _quantity;\n        if(_tokenAddress == address(0)) {\n            payable(_userAddress).transfer(_quantity);\n        }else {\n            IERC20(_tokenAddress).transfer(_userAddress, _quantity);\n        }\n        emit Claimed(_userAddress, _quantity, block.timestamp);\n    }\n\n    function modifyWhiteList(\n        address[] memory newAddr,\n        address[] memory removedAddr\n    ) public onlyOwner {\n        for (uint256 index; index < newAddr.length; index++) {\n            whiteList[newAddr[index]] = true;\n        }\n        for (uint256 index; index < removedAddr.length; index++) {\n            whiteList[removedAddr[index]] = false;\n        }\n    }\n\n    function modifyTokenWhiteList(\n        address[] memory newAddr,\n        address[] memory removedAddr\n    ) public onlyOwner {\n        for (uint256 index; index < newAddr.length; index++) {\n            tokens[newAddr[index]] = true;\n        }\n        for (uint256 index; index < removedAddr.length; index++) {\n            tokens[removedAddr[index]] = false;\n        }\n    }\n\n    function setLimit(uint256 _tokenQuantity, uint256 _nativeQuantity) external onlyOwner {\n        AMOUNT_TOKEN = _tokenQuantity;\n        AMOUNT_NATIVE_TOKEN = _nativeQuantity;\n    }\n\n\n    function getUserInfo(address tokenAddress, address userAddress)\n        public\n        view\n        returns (UserInfo memory user)\n    {\n        user = userInfos[tokenAddress][userAddress];\n    }\n\n    fallback() external payable {\n        emit DepositPI(msg.value, block.timestamp);\n    }\n\n    function balanceOf()\n        public\n        view\n        returns (uint256 balance)\n    {\n        balance = address(this).balance;\n    }\n\n    /**\n     * @dev Withdraw bnb from this contract (Callable by owner only)\n     */\n    function handleForfeitedBalance(\n        address coinAddress,\n        uint256 value,\n        address payable to\n    ) public onlyOwner {\n        if (coinAddress == address(0)) {\n            return to.transfer(value);\n        }\n        IERC20(coinAddress).transfer(to, value);\n    }\n}\n"
			},
			"Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\nimport \"./Ownable.sol\";\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev modifier to allow actions only when the contract IS paused\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev modifier to allow actions only when the contract IS NOT paused\n   */\n  modifier whenPaused {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() external onlyOwner whenNotPaused returns (bool) {\n    paused = true;\n    emit Pause();\n    return true;\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() external onlyOwner whenPaused returns (bool) {\n    paused = false;\n    emit Unpause();\n    return true;\n  }\n}"
			},
			"ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\nimport \"./Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\n \nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }    \n}\n"
			},
			"SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x8435e8230e900d716b4261cebc91985b70e406e6fd433e9751b46a2f0553401a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a82e9a70916b84548d3dcad593027da45cbcda310e5b07d3aa56cfa4f97628c\",\"dweb:/ipfs/Qmatc1Bx5fqGNoa9tnDFedThGaLQm69pB8Z7B85uxpacJv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"Ownable.sol\":{\"keccak256\":\"0xd5a0e0965aca034e9819f91ab430a58057fddacd69ac88c68225135dcdda2069\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3681181d3be8f722e2eeafdbd75a5fe7f6cfdbc89233e5eb25178e29e4085cd6\",\"dweb:/ipfs/Qmayb5rzCwJvZYJZarJ4gWEmYcyDTNdqqddoN88uS1AnjM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 108,
								"contract": "Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Base contract which allows children to implement an emergency stop mechanism.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state"
							}
						},
						"title": "Pausable",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Pausable.sol\":203:1000  contract Pausable is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Pausable.sol\":294:299  false */\n  0x00\n    /* \"Pausable.sol\":273:299  bool public paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"Pausable.sol\":203:1000  contract Pausable is Ownable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Ownable.sol\":878:895  address msgSender */\n  0x00\n    /* \"Ownable.sol\":898:910  _msgSender() */\n  tag_4\n    /* \"Ownable.sol\":898:908  _msgSender */\n  tag_5\n    /* \"Ownable.sol\":898:910  _msgSender() */\n  jump\t// in\ntag_4:\n    /* \"Ownable.sol\":920:926  _owner */\n  0x00\n    /* \"Ownable.sol\":920:938  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"Ownable.sol\":953:996  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"Ownable.sol\":920:938  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"Ownable.sol\":953:996  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"Ownable.sol\":920:926  _owner */\n  dup3\n  swap1\n    /* \"Ownable.sol\":953:996  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"Ownable.sol\":844:1003  constructor () internal {... */\n  pop\n    /* \"Pausable.sol\":203:1000  contract Pausable is Ownable {... */\n  jump(tag_6)\n    /* \"Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_5:\n    /* \"Context.sol\":685:695  msg.sender */\n  caller\n    /* \"Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"Pausable.sol\":203:1000  contract Pausable is Ownable {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Pausable.sol\":203:1000  contract Pausable is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3f4ba83a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Pausable.sol\":872:998  function unpause() external onlyOwner whenPaused returns (bool) {... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Pausable.sol\":273:299  bool public paused = false */\n    tag_4:\n      tag_9\n      tag_12\n      jump\t// in\n        /* \"Ownable.sol\":1711:1856  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"Pausable.sol\":666:790  function pause() external onlyOwner whenNotPaused returns (bool) {... */\n    tag_6:\n      tag_9\n      tag_16\n      jump\t// in\n        /* \"Ownable.sol\":1079:1164  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Ownable.sol\":2005:2245  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_21\n      jump\t// in\n        /* \"Pausable.sol\":872:998  function unpause() external onlyOwner whenPaused returns (bool) {... */\n    tag_10:\n        /* \"Pausable.sol\":930:934  bool */\n      0x00\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      tag_23\n        /* \"Ownable.sol\":1302:1312  _msgSender */\n      tag_24\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      jump\t// in\n    tag_23:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1291:1298  owner() */\n      tag_25\n        /* \"Ownable.sol\":1291:1296  owner */\n      tag_18\n        /* \"Ownable.sol\":1291:1298  owner() */\n      jump\t// in\n    tag_25:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1283:1351  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_26\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_26:\n        /* \"Pausable.sol\":568:574  paused */\n      sload(0x00)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Pausable.sol\":560:575  require(paused) */\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n        /* \"Pausable.sol\":951:956  false */\n      0x00\n        /* \"Pausable.sol\":942:956  paused = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      dup2\n      sstore\n        /* \"Pausable.sol\":967:976  Unpause() */\n      mload(0x40)\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      swap2\n        /* \"Pausable.sol\":951:956  false */\n      swap1\n        /* \"Pausable.sol\":967:976  Unpause() */\n      log1\n      pop\n        /* \"Pausable.sol\":989:993  true */\n      0x01\n        /* \"Pausable.sol\":872:998  function unpause() external onlyOwner whenPaused returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Pausable.sol\":273:299  bool public paused = false */\n    tag_12:\n      sload(0x00)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Ownable.sol\":1711:1856  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      tag_31\n        /* \"Ownable.sol\":1302:1312  _msgSender */\n      tag_24\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      jump\t// in\n    tag_31:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1291:1298  owner() */\n      tag_32\n        /* \"Ownable.sol\":1291:1296  owner */\n      tag_18\n        /* \"Ownable.sol\":1291:1298  owner() */\n      jump\t// in\n    tag_32:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1283:1351  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_33\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_33:\n        /* \"Ownable.sol\":1817:1818  0 */\n      0x00\n        /* \"Ownable.sol\":1801:1807  _owner */\n      dup1\n      sload\n        /* \"Ownable.sol\":1780:1820  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1801:1807  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Ownable.sol\":1780:1820  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Ownable.sol\":1817:1818  0 */\n      dup4\n      swap1\n        /* \"Ownable.sol\":1780:1820  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"Ownable.sol\":1847:1848  0 */\n      0x00\n        /* \"Ownable.sol\":1830:1849  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"Ownable.sol\":1711:1856  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Pausable.sol\":666:790  function pause() external onlyOwner whenNotPaused returns (bool) {... */\n    tag_16:\n        /* \"Pausable.sol\":725:729  bool */\n      0x00\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      tag_36\n        /* \"Ownable.sol\":1302:1312  _msgSender */\n      tag_24\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      jump\t// in\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1291:1298  owner() */\n      tag_37\n        /* \"Ownable.sol\":1291:1296  owner */\n      tag_18\n        /* \"Ownable.sol\":1291:1298  owner() */\n      jump\t// in\n    tag_37:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1283:1351  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_38\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_38:\n        /* \"Pausable.sol\":426:432  paused */\n      sload(0x00)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Pausable.sol\":425:432  !paused */\n      iszero\n        /* \"Pausable.sol\":417:433  require(!paused) */\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n        /* \"Pausable.sol\":737:743  paused */\n      0x00\n        /* \"Pausable.sol\":737:750  paused = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      dup2\n      sstore\n        /* \"Pausable.sol\":761:768  Pause() */\n      mload(0x40)\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      swap2\n        /* \"Pausable.sol\":737:743  paused */\n      swap1\n        /* \"Pausable.sol\":761:768  Pause() */\n      log1\n      pop\n        /* \"Pausable.sol\":781:785  true */\n      0x01\n        /* \"Pausable.sol\":666:790  function pause() external onlyOwner whenNotPaused returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":1079:1164  function owner() public view virtual returns (address) {... */\n    tag_18:\n        /* \"Ownable.sol\":1125:1132  address */\n      0x00\n        /* \"Ownable.sol\":1151:1157  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Ownable.sol\":1079:1164  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":2005:2245  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      tag_44\n        /* \"Ownable.sol\":1302:1312  _msgSender */\n      tag_24\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      jump\t// in\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1291:1298  owner() */\n      tag_45\n        /* \"Ownable.sol\":1291:1296  owner */\n      tag_18\n        /* \"Ownable.sol\":1291:1298  owner() */\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1283:1351  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_46\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":2093:2115  newOwner != address(0) */\n      dup2\n      and\n        /* \"Ownable.sol\":2085:2158  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"Ownable.sol\":2194:2200  _owner */\n      0x00\n      dup1\n      sload\n        /* \"Ownable.sol\":2173:2211  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"Ownable.sol\":2194:2200  _owner */\n      swap3\n      and\n      swap2\n        /* \"Ownable.sol\":2173:2211  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"Ownable.sol\":2221:2227  _owner */\n      0x00\n        /* \"Ownable.sol\":2221:2238  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Ownable.sol\":2005:2245  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_24:\n        /* \"Context.sol\":685:695  msg.sender */\n      caller\n        /* \"Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\n    auxdata: 0xa2646970667358221220d62cc53c06fe659848859391b50189c88729c893c05f9bc11b188d3a7923349264736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526000805460ff60a01b1916905534801561001d57600080fd5b506000610028610077565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061007b565b3390565b6104a38061008a6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633f4ba83a146100675780635c975abb14610083578063715018a61461008b5780638456cb59146100955780638da5cb5b1461009d578063f2fde38b146100c1575b600080fd5b61006f6100e7565b604080519115158252519081900360200190f35b61006f61019b565b6100936101ab565b005b61006f610257565b6100a5610312565b604080516001600160a01b039092168252519081900360200190f35b610093600480360360208110156100d757600080fd5b50356001600160a01b0316610321565b60006100f1610423565b6001600160a01b0316610102610312565b6001600160a01b03161461014b576040805162461bcd60e51b8152602060048201819052602482015260008051602061044e833981519152604482015290519081900360640190fd5b600054600160a01b900460ff1661016157600080fd5b6000805460ff60a01b191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a150600190565b600054600160a01b900460ff1681565b6101b3610423565b6001600160a01b03166101c4610312565b6001600160a01b03161461020d576040805162461bcd60e51b8152602060048201819052602482015260008051602061044e833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610261610423565b6001600160a01b0316610272610312565b6001600160a01b0316146102bb576040805162461bcd60e51b8152602060048201819052602482015260008051602061044e833981519152604482015290519081900360640190fd5b600054600160a01b900460ff16156102d257600080fd5b6000805460ff60a01b1916600160a01b1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a150600190565b6000546001600160a01b031690565b610329610423565b6001600160a01b031661033a610312565b6001600160a01b031614610383576040805162461bcd60e51b8152602060048201819052602482015260008051602061044e833981519152604482015290519081900360640190fd5b6001600160a01b0381166103c85760405162461bcd60e51b81526004018080602001828103825260268152602001806104286026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220d62cc53c06fe659848859391b50189c88729c893c05f9bc11b188d3a7923349264736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x28 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x7B JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x4A3 DUP1 PUSH2 0x8A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0x19B JUMP JUMPDEST PUSH2 0x93 PUSH2 0x1AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x257 JUMP JUMPDEST PUSH2 0xA5 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x321 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF1 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x102 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x14B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x44E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C4 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x20D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x44E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x261 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x272 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x44E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x329 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x33A PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x383 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x44E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x428 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A2646970667358221220D62C 0xC5 EXTCODECOPY MOD INVALID PUSH6 0x9848859391B5 ADD DUP10 0xC8 DUP8 0x29 0xC8 SWAP4 0xC0 0x5F SWAP12 0xC1 SHL XOR DUP14 GASPRICE PUSH26 0x23349264736F6C63430007060033000000000000000000000000 ",
							"sourceMap": "203:797:3:-:0;;;294:5;273:26;;-1:-1:-1;;;;273:26:3;;;203:797;;;;;;;;;-1:-1:-1;878:17:2;898:12;:10;:12::i;:::-;920:6;:18;;-1:-1:-1;;;;;;920:18:2;-1:-1:-1;;;;;920:18:2;;;;;;;953:43;;920:18;;-1:-1:-1;920:18:2;953:43;;920:6;;953:43;844:159;203:797:3;;598:104:0;685:10;598:104;:::o;203:797:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80633f4ba83a146100675780635c975abb14610083578063715018a61461008b5780638456cb59146100955780638da5cb5b1461009d578063f2fde38b146100c1575b600080fd5b61006f6100e7565b604080519115158252519081900360200190f35b61006f61019b565b6100936101ab565b005b61006f610257565b6100a5610312565b604080516001600160a01b039092168252519081900360200190f35b610093600480360360208110156100d757600080fd5b50356001600160a01b0316610321565b60006100f1610423565b6001600160a01b0316610102610312565b6001600160a01b03161461014b576040805162461bcd60e51b8152602060048201819052602482015260008051602061044e833981519152604482015290519081900360640190fd5b600054600160a01b900460ff1661016157600080fd5b6000805460ff60a01b191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a150600190565b600054600160a01b900460ff1681565b6101b3610423565b6001600160a01b03166101c4610312565b6001600160a01b03161461020d576040805162461bcd60e51b8152602060048201819052602482015260008051602061044e833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610261610423565b6001600160a01b0316610272610312565b6001600160a01b0316146102bb576040805162461bcd60e51b8152602060048201819052602482015260008051602061044e833981519152604482015290519081900360640190fd5b600054600160a01b900460ff16156102d257600080fd5b6000805460ff60a01b1916600160a01b1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a150600190565b6000546001600160a01b031690565b610329610423565b6001600160a01b031661033a610312565b6001600160a01b031614610383576040805162461bcd60e51b8152602060048201819052602482015260008051602061044e833981519152604482015290519081900360640190fd5b6001600160a01b0381166103c85760405162461bcd60e51b81526004018080602001828103825260268152602001806104286026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220d62cc53c06fe659848859391b50189c88729c893c05f9bc11b188d3a7923349264736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0x19B JUMP JUMPDEST PUSH2 0x93 PUSH2 0x1AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x257 JUMP JUMPDEST PUSH2 0xA5 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x321 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF1 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x102 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x14B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x44E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C4 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x20D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x44E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x261 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x272 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x44E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x329 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x33A PUSH2 0x312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x383 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x44E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x428 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A2646970667358221220D62C 0xC5 EXTCODECOPY MOD INVALID PUSH6 0x9848859391B5 ADD DUP10 0xC8 DUP8 0x29 0xC8 SWAP4 0xC0 0x5F SWAP12 0xC1 SHL XOR DUP14 GASPRICE PUSH26 0x23349264736F6C63430007060033000000000000000000000000 ",
							"sourceMap": "203:797:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:126;;;:::i;:::-;;;;;;;;;;;;;;;;;;273:26;;;:::i;1711:145:2:-;;;:::i;:::-;;666:124:3;;;:::i;1079:85:2:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1079:85:2;;;;;;;;;;;;;;2005:240;;;;;;;;;;;;;;;;-1:-1:-1;2005:240:2;-1:-1:-1;;;;;2005:240:2;;:::i;872:126:3:-;930:4;1302:12:2;:10;:12::i;:::-;-1:-1:-1;;;;;1291:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1291:23:2;;1283:68;;;;;-1:-1:-1;;;1283:68:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1283:68:2;;;;;;;;;;;;;;;568:6:3::1;::::0;-1:-1:-1;;;568:6:3;::::1;;;560:15;;;::::0;::::1;;951:5:::2;942:14:::0;;-1:-1:-1;;;;942:14:3::2;::::0;;967:9:::2;::::0;::::2;::::0;951:5;967:9:::2;-1:-1:-1::0;989:4:3::2;872:126:::0;:::o;273:26::-;;;-1:-1:-1;;;273:26:3;;;;;:::o;1711:145:2:-;1302:12;:10;:12::i;:::-;-1:-1:-1;;;;;1291:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1291:23:2;;1283:68;;;;;-1:-1:-1;;;1283:68:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1283:68:2;;;;;;;;;;;;;;;1817:1:::1;1801:6:::0;;1780:40:::1;::::0;-1:-1:-1;;;;;1801:6:2;;::::1;::::0;1780:40:::1;::::0;1817:1;;1780:40:::1;1847:1;1830:19:::0;;-1:-1:-1;;;;;;1830:19:2::1;::::0;;1711:145::o;666:124:3:-;725:4;1302:12:2;:10;:12::i;:::-;-1:-1:-1;;;;;1291:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1291:23:2;;1283:68;;;;;-1:-1:-1;;;1283:68:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1283:68:2;;;;;;;;;;;;;;;426:6:3::1;::::0;-1:-1:-1;;;426:6:3;::::1;;;425:7;417:16;;;::::0;::::1;;737:6:::2;:13:::0;;-1:-1:-1;;;;737:13:3::2;-1:-1:-1::0;;;737:13:3::2;::::0;;761:7:::2;::::0;::::2;::::0;737:6;761:7:::2;-1:-1:-1::0;781:4:3::2;666:124:::0;:::o;1079:85:2:-;1125:7;1151:6;-1:-1:-1;;;;;1151:6:2;1079:85;:::o;2005:240::-;1302:12;:10;:12::i;:::-;-1:-1:-1;;;;;1291:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1291:23:2;;1283:68;;;;;-1:-1:-1;;;1283:68:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1283:68:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;2093:22:2;::::1;2085:73;;;;-1:-1:-1::0;;;2085:73:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2194:6;::::0;;2173:38:::1;::::0;-1:-1:-1;;;;;2173:38:2;;::::1;::::0;2194:6;::::1;::::0;2173:38:::1;::::0;::::1;2221:6;:17:::0;;-1:-1:-1;;;;;;2221:17:2::1;-1:-1:-1::0;;;;;2221:17:2;;;::::1;::::0;;;::::1;::::0;;2005:240::o;598:104:0:-;685:10;598:104;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "237400",
								"executionCost": "43540",
								"totalCost": "280940"
							},
							"external": {
								"owner()": "1103",
								"pause()": "infinite",
								"paused()": "1027",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 1000,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 294,
									"end": 299,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 299,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 273,
									"end": 299,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 273,
									"end": 299,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 273,
									"end": 299,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 273,
									"end": 299,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 878,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 898,
									"end": 910,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 898,
									"end": 908,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 898,
									"end": 910,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 898,
									"end": 910,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 898,
									"end": 910,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 920,
									"end": 926,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 938,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 920,
									"end": 938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 920,
									"end": 938,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 953,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 953,
									"end": 996,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 920,
									"end": 938,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 953,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 953,
									"end": 996,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 920,
									"end": 926,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 920,
									"end": 926,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 953,
									"end": 996,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 844,
									"end": 1003,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 1000,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d62cc53c06fe659848859391b50189c88729c893c05f9bc11b188d3a7923349264736f6c63430007060033",
									".code": [
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "3F4BA83A"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "5C975ABB"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "8456CB59"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 203,
											"end": 1000,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 666,
											"end": 790,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 666,
											"end": 790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 666,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 666,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 666,
											"end": 790,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 930,
											"end": 934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 574,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 568,
											"end": 574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 568,
											"end": 574,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 560,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 560,
											"end": 575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 560,
											"end": 575,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 560,
											"end": 575,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 951,
											"end": 956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 956,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 942,
											"end": 956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 942,
											"end": 956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 942,
											"end": 956,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 942,
											"end": 956,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 967,
											"end": 976,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 976,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 967,
											"end": 976,
											"name": "PUSH",
											"source": 3,
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 967,
											"end": 976,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 951,
											"end": 956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 967,
											"end": 976,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 989,
											"end": 993,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 273,
											"end": 299,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1820,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1780,
											"end": 1820,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1820,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1780,
											"end": 1820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1818,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1820,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 666,
											"end": 790,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 666,
											"end": 790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 426,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 432,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 426,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 426,
											"end": 432,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 426,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 426,
											"end": 432,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 425,
											"end": 432,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 417,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 433,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 417,
											"end": 433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 433,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 433,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 417,
											"end": 433,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 737,
											"end": 743,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 750,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 737,
											"end": 750,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 737,
											"end": 750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 737,
											"end": 750,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 737,
											"end": 750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 737,
											"end": 750,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 761,
											"end": 768,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 768,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 761,
											"end": 768,
											"name": "PUSH",
											"source": 3,
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 761,
											"end": 768,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 737,
											"end": 743,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 761,
											"end": 768,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 781,
											"end": 785,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 666,
											"end": 790,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 666,
											"end": 790,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2093,
											"end": 2115,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH data",
											"source": 2,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
									}
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base contract which allows children to implement an emergency stop mechanism.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"Ownable.sol\":{\"keccak256\":\"0xd5a0e0965aca034e9819f91ab430a58057fddacd69ac88c68225135dcdda2069\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3681181d3be8f722e2eeafdbd75a5fe7f6cfdbc89233e5eb25178e29e4085cd6\",\"dweb:/ipfs/Qmayb5rzCwJvZYJZarJ4gWEmYcyDTNdqqddoN88uS1AnjM\"]},\"Pausable.sol\":{\"keccak256\":\"0xa820963c4599a63e7eea294b322ea6d2aa6f1e68b4e772d75403732684f5b1e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7498ff9916a3a322d01f29bf5c44fb124efbe9e9bc2979bafcfeddee6fb29070\",\"dweb:/ipfs/QmYcV3vqbHdaQ8McCU1YFgPWT53CheWk7aau3vYxWjzxBL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 108,
								"contract": "Pausable.sol:Pausable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 223,
								"contract": "Pausable.sol:Pausable",
								"label": "paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ReentrancyGuard.sol\":{\"keccak256\":\"0xb0313324f9311ec6f1b35bf7ec5431dbd6fc70959c0599e3b34937f4b4707c9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f364fbf221ef5125db8ac9d83598bcea0b7c7fa5f7e460f53c45f8b3279923ed\",\"dweb:/ipfs/QmT9G3jeN2eFkW1pojZYHhmk2pFtrH3w1wVg1UkL4eYF2g\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 294,
								"contract": "ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205178125e7ec9011c7dba363bf65275421dd42454dd007ff3169bcff2474e08de64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205178125e7ec9011c7dba363bf65275421dd42454dd007ff3169bcff2474e08de64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH25 0x125E7EC9011C7DBA363BF65275421DD42454DD007FF3169BCF CALLCODE SELFBALANCE 0x4E ADDMOD 0xDE PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "630:6594:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205178125e7ec9011c7dba363bf65275421dd42454dd007ff3169bcff2474e08de64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH25 0x125E7EC9011C7DBA363BF65275421DD42454DD007FF3169BCF CALLCODE SELFBALANCE 0x4E ADDMOD 0xDE PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "630:6594:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205178125e7ec9011c7dba363bf65275421dd42454dd007ff3169bcff2474e08de64736f6c63430007060033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMath.sol\":{\"keccak256\":\"0x186349419a02f096ad33a3a314500216b1d683dfff84bb58eb34a9c44adb2082\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a46c1daab5cd0e5bc4276769c07fe3674f2427866535e3139db6bcce62690e9\",\"dweb:/ipfs/QmevHusaMw5EqrmuVMpcgpif3TDatN9XUVdueYuPyVNsap\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TokenFaucet.sol": {
				"TokenFaucet": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "DepositPI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "AMOUNT_NATIVE_TOKEN",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AMOUNT_TOKEN",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "totalQuantity",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lastQuantity",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lastSend",
											"type": "uint256"
										}
									],
									"internalType": "struct TokenFaucet.UserInfo",
									"name": "user",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "coinAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								}
							],
							"name": "handleForfeitedBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "newAddr",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "removedAddr",
									"type": "address[]"
								}
							],
							"name": "modifyTokenWhiteList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "newAddr",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "removedAddr",
									"type": "address[]"
								}
							],
							"name": "modifyWhiteList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenQuantity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_nativeQuantity",
									"type": "uint256"
								}
							],
							"name": "setLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokens",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfos",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalQuantity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastQuantity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastSend",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whiteList",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"claim(address,address)": {
								"details": "Claim Token"
							},
							"handleForfeitedBalance(address,uint256,address)": {
								"details": "Withdraw bnb from this contract (Callable by owner only)"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TokenFaucet.sol\":309:3736  contract TokenFaucet is Ownable, Pausable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"Pausable.sol\":294:299  false */\n  0x00\n    /* \"Pausable.sol\":273:299  bool public paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"TokenFaucet.sol\":1016:1026  1000 ether */\n  0x3635c9adc5dea00000\n    /* \"TokenFaucet.sol\":986:1026  uint256 public AMOUNT_TOKEN = 1000 ether */\n  0x05\n  sstore\n    /* \"TokenFaucet.sol\":1069:1076  1 ether */\n  0x0de0b6b3a7640000\n    /* \"TokenFaucet.sol\":1032:1076  uint256 public AMOUNT_NATIVE_TOKEN = 1 ether */\n  0x06\n  sstore\n    /* \"TokenFaucet.sol\":309:3736  contract TokenFaucet is Ownable, Pausable, ReentrancyGuard {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Ownable.sol\":878:895  address msgSender */\n  0x00\n    /* \"Ownable.sol\":898:910  _msgSender() */\n  tag_5\n    /* \"Ownable.sol\":898:908  _msgSender */\n  tag_6\n    /* \"Ownable.sol\":898:910  _msgSender() */\n  jump\t// in\ntag_5:\n    /* \"Ownable.sol\":920:926  _owner */\n  0x00\n    /* \"Ownable.sol\":920:938  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"Ownable.sol\":953:996  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"Ownable.sol\":920:938  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"Ownable.sol\":953:996  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"Ownable.sol\":920:926  _owner */\n  dup3\n  swap1\n    /* \"Ownable.sol\":953:996  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"ReentrancyGuard.sol\":1645:1646  1 */\n  0x01\n    /* \"ReentrancyGuard.sol\":1750:1772  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"TokenFaucet.sol\":309:3736  contract TokenFaucet is Ownable, Pausable, ReentrancyGuard {... */\n  jump(tag_8)\n    /* \"Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_6:\n    /* \"Context.sol\":685:695  msg.sender */\n  caller\n    /* \"Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"TokenFaucet.sol\":309:3736  contract TokenFaucet is Ownable, Pausable, ReentrancyGuard {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TokenFaucet.sol\":309:3736  contract TokenFaucet is Ownable, Pausable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc9b5279c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe4860339\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2801fe7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_22:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x722713f7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8174e972\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x3f4ba83a\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e6f5b60\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x51b32e8b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x602f86f8\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_23:\n      dup1\n      0x207add91\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x21c0b342\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2adb5f4e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x372c12b1\n      eq\n      tag_6\n      jumpi\n    tag_1:\n        /* \"TokenFaucet.sol\":3177:3214  DepositPI(msg.value, block.timestamp) */\n      0x41d0978db23c08ae0f5d1e376087f27d92b1a65d7cf5a613ec7d8a8b977e4ed0\n        /* \"TokenFaucet.sol\":3187:3196  msg.value */\n      callvalue\n        /* \"TokenFaucet.sol\":3198:3213  block.timestamp */\n      timestamp\n        /* \"TokenFaucet.sol\":3177:3214  DepositPI(msg.value, block.timestamp) */\n      mload(0x40)\n      tag_26\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"TokenFaucet.sol\":309:3736  contract TokenFaucet is Ownable, Pausable, ReentrancyGuard {... */\n      stop\n        /* \"TokenFaucet.sol\":2747:2926  function setLimit(uint256 _tokenQuantity, uint256 _nativeQuantity) external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"TokenFaucet.sol\":1123:1982  function claim(address _tokenAddress, address _userAddress)... */\n    tag_4:\n      tag_29\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n        /* \"TokenFaucet.sol\":1988:2362  function modifyWhiteList(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_29\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"TokenFaucet.sol\":895:936  mapping(address => bool) public whiteList */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Pausable.sol\":872:998  function unpause() external onlyOwner whenPaused returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_43\n      tag_51\n      jump\t// in\n        /* \"TokenFaucet.sol\":3453:3734  function handleForfeitedBalance(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_29\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"TokenFaucet.sol\":2368:2741  function modifyTokenWhiteList(... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_29\n      tag_60\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"Pausable.sol\":273:299  bool public paused = false */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_43\n      tag_64\n      jump\t// in\n        /* \"TokenFaucet.sol\":1032:1076  uint256 public AMOUNT_NATIVE_TOKEN = 1 ether */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n        /* \"Ownable.sol\":1711:1856  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_29\n      tag_73\n      jump\t// in\n        /* \"TokenFaucet.sol\":3227:3362  function balanceOf()... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_67\n      tag_76\n      jump\t// in\n        /* \"TokenFaucet.sol\":986:1026  uint256 public AMOUNT_TOKEN = 1000 ether */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_67\n      tag_80\n      jump\t// in\n        /* \"Pausable.sol\":666:790  function pause() external onlyOwner whenNotPaused returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_43\n      tag_84\n      jump\t// in\n        /* \"Ownable.sol\":1079:1164  function owner() public view virtual returns (address) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n        /* \"TokenFaucet.sol\":824:889  mapping(address => mapping(address => UserInfo)) public userInfos */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_92\n      tag_93\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_47\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n        /* \"TokenFaucet.sol\":942:980  mapping(address => bool) public tokens */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_43\n      tag_99\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"TokenFaucet.sol\":2933:3128  function getUserInfo(address tokenAddress, address userAddress)... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      tag_104\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n        /* \"Ownable.sol\":2005:2245  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_29\n      tag_110\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"TokenFaucet.sol\":2747:2926  function setLimit(uint256 _tokenQuantity, uint256 _nativeQuantity) external onlyOwner {... */\n    tag_32:\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      tag_113\n        /* \"Ownable.sol\":1302:1312  _msgSender */\n      tag_114\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      jump\t// in\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1291:1298  owner() */\n      tag_115\n        /* \"Ownable.sol\":1291:1296  owner */\n      tag_88\n        /* \"Ownable.sol\":1291:1298  owner() */\n      jump\t// in\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1283:1351  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_116\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_116:\n        /* \"TokenFaucet.sol\":2843:2855  AMOUNT_TOKEN */\n      0x05\n        /* \"TokenFaucet.sol\":2843:2872  AMOUNT_TOKEN = _tokenQuantity */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"TokenFaucet.sol\":2882:2901  AMOUNT_NATIVE_TOKEN */\n      0x06\n        /* \"TokenFaucet.sol\":2882:2919  AMOUNT_NATIVE_TOKEN = _nativeQuantity */\n      sstore\n        /* \"TokenFaucet.sol\":2747:2926  function setLimit(uint256 _tokenQuantity, uint256 _nativeQuantity) external onlyOwner {... */\n      jump\t// out\n        /* \"TokenFaucet.sol\":1123:1982  function claim(address _tokenAddress, address _userAddress)... */\n    tag_36:\n        /* \"ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"ReentrancyGuard.sol\":2269:2276  _status */\n      sload(0x01)\n        /* \"ReentrancyGuard.sol\":2269:2288  _status != _ENTERED */\n      eq\n      iszero\n        /* \"ReentrancyGuard.sol\":2261:2324  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_119\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_119:\n        /* \"ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"ReentrancyGuard.sol\":2399:2406  _status */\n      0x01\n        /* \"ReentrancyGuard.sol\":2399:2417  _status = _ENTERED */\n      sstore\n        /* \"Pausable.sol\":426:432  paused */\n      sload(0x00)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Pausable.sol\":425:432  !paused */\n      iszero\n        /* \"Pausable.sol\":417:433  require(!paused) */\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n        /* \"TokenFaucet.sol\":763:773  msg.sender */\n      caller\n        /* \"TokenFaucet.sol\":753:774  whiteList[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"TokenFaucet.sol\":753:762  whiteList */\n      0x03\n        /* \"TokenFaucet.sol\":753:774  whiteList[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"TokenFaucet.sol\":745:800  require(whiteList[msg.sender], \"require Safe Address.\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenFaucet.sol\":1296:1317  tokens[_tokenAddress] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"TokenFaucet.sol\":1296:1302  tokens */\n      0x04\n        /* \"TokenFaucet.sol\":1296:1317  tokens[_tokenAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"TokenFaucet.sol\":1288:1344  require(tokens[_tokenAddress], \"not  supported address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_129\n      jump\t// in\n    tag_127:\n        /* \"TokenFaucet.sol\":1374:1386  AMOUNT_TOKEN */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenFaucet.sol\":1399:1426  _tokenAddress == address(0) */\n      dup4\n      and\n        /* \"TokenFaucet.sol\":1396:1484  if(_tokenAddress == address(0)) {... */\n      tag_130\n      jumpi\n      pop\n        /* \"TokenFaucet.sol\":1454:1473  AMOUNT_NATIVE_TOKEN */\n      sload(0x06)\n        /* \"TokenFaucet.sol\":1396:1484  if(_tokenAddress == address(0)) {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenFaucet.sol\":1521:1545  userInfos[_tokenAddress] */\n      dup1\n      dup5\n      and\n        /* \"TokenFaucet.sol\":1493:1518  UserInfo storage userInfo */\n      0x00\n        /* \"TokenFaucet.sol\":1521:1545  userInfos[_tokenAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"TokenFaucet.sol\":1521:1530  userInfos */\n      0x02\n        /* \"TokenFaucet.sol\":1521:1545  userInfos[_tokenAddress] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"TokenFaucet.sol\":1521:1559  userInfos[_tokenAddress][_userAddress] */\n      swap5\n      dup8\n      and\n      dup5\n      mstore\n      swap4\n      swap1\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"TokenFaucet.sol\":1589:1604  block.timestamp */\n      timestamp\n        /* \"TokenFaucet.sol\":1569:1586  userInfo.lastSend */\n      swap2\n      dup2\n      add\n        /* \"TokenFaucet.sol\":1569:1604  userInfo.lastSend = block.timestamp */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"TokenFaucet.sol\":1639:1661  userInfo.totalQuantity */\n      dup1\n      sload\n        /* \"TokenFaucet.sol\":1639:1676  userInfo.totalQuantity.add(_quantity) */\n      tag_131\n      swap1\n        /* \"TokenFaucet.sol\":1666:1675  _quantity */\n      dup4\n        /* \"TokenFaucet.sol\":1639:1665  userInfo.totalQuantity.add */\n      tag_132\n        /* \"TokenFaucet.sol\":1639:1676  userInfo.totalQuantity.add(_quantity) */\n      jump\t// in\n    tag_131:\n        /* \"TokenFaucet.sol\":1614:1676  userInfo.totalQuantity = userInfo.totalQuantity.add(_quantity) */\n      dup2\n      sstore\n        /* \"TokenFaucet.sol\":1686:1707  userInfo.lastQuantity */\n      0x01\n      dup2\n      add\n        /* \"TokenFaucet.sol\":1686:1719  userInfo.lastQuantity = _quantity */\n      dup3\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenFaucet.sol\":1732:1759  _tokenAddress == address(0) */\n      dup5\n      and\n        /* \"TokenFaucet.sol\":1729:1912  if(_tokenAddress == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"TokenFaucet.sol\":1775:1816  payable(_userAddress).transfer(_quantity) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenFaucet.sol\":1775:1805  payable(_userAddress).transfer */\n      dup5\n      and\n      swap1\n        /* \"TokenFaucet.sol\":1775:1816  payable(_userAddress).transfer(_quantity) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"TokenFaucet.sol\":1806:1815  _quantity */\n      dup5\n      swap1\n        /* \"TokenFaucet.sol\":1775:1816  payable(_userAddress).transfer(_quantity) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"TokenFaucet.sol\":1806:1815  _quantity */\n      dup6\n        /* \"TokenFaucet.sol\":1775:1805  payable(_userAddress).transfer */\n      dup9\n        /* \"TokenFaucet.sol\":1775:1816  payable(_userAddress).transfer(_quantity) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n        /* \"TokenFaucet.sol\":1729:1912  if(_tokenAddress == address(0)) {... */\n      jump(tag_136)\n    tag_133:\n        /* \"TokenFaucet.sol\":1846:1901  IERC20(_tokenAddress).transfer(_userAddress, _quantity) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenFaucet.sol\":1846:1876  IERC20(_tokenAddress).transfer */\n      dup6\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"TokenFaucet.sol\":1846:1901  IERC20(_tokenAddress).transfer(_userAddress, _quantity) */\n      tag_137\n      swap1\n        /* \"TokenFaucet.sol\":1877:1889  _userAddress */\n      dup7\n      swap1\n        /* \"TokenFaucet.sol\":1891:1900  _quantity */\n      dup7\n      swap1\n        /* \"TokenFaucet.sol\":1846:1901  IERC20(_tokenAddress).transfer(_userAddress, _quantity) */\n      0x04\n      add\n      tag_174\n      jump\t// in\n    tag_137:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      pop\n        /* \"TokenFaucet.sol\":1729:1912  if(_tokenAddress == address(0)) {... */\n    tag_136:\n        /* \"TokenFaucet.sol\":1934:1946  _userAddress */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenFaucet.sol\":1926:1975  Claimed(_userAddress, _quantity, block.timestamp) */\n      and\n      0x987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a\n        /* \"TokenFaucet.sol\":1948:1957  _quantity */\n      dup4\n        /* \"TokenFaucet.sol\":1959:1974  block.timestamp */\n      timestamp\n        /* \"TokenFaucet.sol\":1926:1975  Claimed(_userAddress, _quantity, block.timestamp) */\n      mload(0x40)\n      tag_144\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"ReentrancyGuard.sol\":1645:1646  1 */\n      0x01\n        /* \"ReentrancyGuard.sol\":2572:2594  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n        /* \"TokenFaucet.sol\":1123:1982  function claim(address _tokenAddress, address _userAddress)... */\n      jump\t// out\n        /* \"TokenFaucet.sol\":1988:2362  function modifyWhiteList(... */\n    tag_41:\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      tag_146\n        /* \"Ownable.sol\":1302:1312  _msgSender */\n      tag_114\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      jump\t// in\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1291:1298  owner() */\n      tag_147\n        /* \"Ownable.sol\":1291:1296  owner */\n      tag_88\n        /* \"Ownable.sol\":1291:1298  owner() */\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1283:1351  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_148\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_148:\n        /* \"TokenFaucet.sol\":2123:2136  uint256 index */\n      0x00\n        /* \"TokenFaucet.sol\":2118:2228  for (uint256 index; index < newAddr.length; index++) {... */\n    tag_150:\n        /* \"TokenFaucet.sol\":2146:2153  newAddr */\n      dup3\n        /* \"TokenFaucet.sol\":2146:2160  newAddr.length */\n      mload\n        /* \"TokenFaucet.sol\":2138:2143  index */\n      dup2\n        /* \"TokenFaucet.sol\":2138:2160  index < newAddr.length */\n      lt\n        /* \"TokenFaucet.sol\":2118:2228  for (uint256 index; index < newAddr.length; index++) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"TokenFaucet.sol\":2213:2217  true */\n      0x01\n        /* \"TokenFaucet.sol\":2185:2194  whiteList */\n      0x03\n        /* \"TokenFaucet.sol\":2185:2210  whiteList[newAddr[index]] */\n      0x00\n        /* \"TokenFaucet.sol\":2195:2202  newAddr */\n      dup6\n        /* \"TokenFaucet.sol\":2203:2208  index */\n      dup5\n        /* \"TokenFaucet.sol\":2195:2209  newAddr[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_153\n      jumpi\n      invalid\n    tag_153:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenFaucet.sol\":2185:2210  whiteList[newAddr[index]] */\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"TokenFaucet.sol\":2185:2217  whiteList[newAddr[index]] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x01\n        /* \"TokenFaucet.sol\":2162:2169  index++ */\n      add\n        /* \"TokenFaucet.sol\":2118:2228  for (uint256 index; index < newAddr.length; index++) {... */\n      jump(tag_150)\n    tag_151:\n      pop\n        /* \"TokenFaucet.sol\":2242:2255  uint256 index */\n      0x00\n        /* \"TokenFaucet.sol\":2237:2356  for (uint256 index; index < removedAddr.length; index++) {... */\n    tag_154:\n        /* \"TokenFaucet.sol\":2265:2276  removedAddr */\n      dup2\n        /* \"TokenFaucet.sol\":2265:2283  removedAddr.length */\n      mload\n        /* \"TokenFaucet.sol\":2257:2262  index */\n      dup2\n        /* \"TokenFaucet.sol\":2257:2283  index < removedAddr.length */\n      lt\n        /* \"TokenFaucet.sol\":2237:2356  for (uint256 index; index < removedAddr.length; index++) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"TokenFaucet.sol\":2340:2345  false */\n      0x00\n        /* \"TokenFaucet.sol\":2308:2317  whiteList */\n      0x03\n        /* \"TokenFaucet.sol\":2308:2337  whiteList[removedAddr[index]] */\n      0x00\n        /* \"TokenFaucet.sol\":2318:2329  removedAddr */\n      dup5\n        /* \"TokenFaucet.sol\":2330:2335  index */\n      dup5\n        /* \"TokenFaucet.sol\":2318:2336  removedAddr[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_157\n      jumpi\n      invalid\n    tag_157:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenFaucet.sol\":2308:2337  whiteList[removedAddr[index]] */\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"TokenFaucet.sol\":2308:2345  whiteList[removedAddr[index]] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x01\n        /* \"TokenFaucet.sol\":2285:2292  index++ */\n      add\n        /* \"TokenFaucet.sol\":2237:2356  for (uint256 index; index < removedAddr.length; index++) {... */\n      jump(tag_154)\n    tag_155:\n      pop\n        /* \"TokenFaucet.sol\":1988:2362  function modifyWhiteList(... */\n      pop\n      pop\n      jump\t// out\n        /* \"TokenFaucet.sol\":895:936  mapping(address => bool) public whiteList */\n    tag_46:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Pausable.sol\":872:998  function unpause() external onlyOwner whenPaused returns (bool) {... */\n    tag_51:\n        /* \"Pausable.sol\":930:934  bool */\n      0x00\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      tag_159\n        /* \"Ownable.sol\":1302:1312  _msgSender */\n      tag_114\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      jump\t// in\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1291:1298  owner() */\n      tag_160\n        /* \"Ownable.sol\":1291:1296  owner */\n      tag_88\n        /* \"Ownable.sol\":1291:1298  owner() */\n      jump\t// in\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1283:1351  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_161\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_161:\n        /* \"Pausable.sol\":568:574  paused */\n      sload(0x00)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Pausable.sol\":560:575  require(paused) */\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n        /* \"Pausable.sol\":951:956  false */\n      0x00\n        /* \"Pausable.sol\":942:956  paused = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      dup2\n      sstore\n        /* \"Pausable.sol\":967:976  Unpause() */\n      mload(0x40)\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      swap2\n        /* \"Pausable.sol\":951:956  false */\n      swap1\n        /* \"Pausable.sol\":967:976  Unpause() */\n      log1\n      pop\n        /* \"Pausable.sol\":989:993  true */\n      0x01\n        /* \"Pausable.sol\":872:998  function unpause() external onlyOwner whenPaused returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"TokenFaucet.sol\":3453:3734  function handleForfeitedBalance(... */\n    tag_57:\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      tag_166\n        /* \"Ownable.sol\":1302:1312  _msgSender */\n      tag_114\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      jump\t// in\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1291:1298  owner() */\n      tag_167\n        /* \"Ownable.sol\":1291:1296  owner */\n      tag_88\n        /* \"Ownable.sol\":1291:1298  owner() */\n      jump\t// in\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1283:1351  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_168\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenFaucet.sol\":3602:3627  coinAddress == address(0) */\n      dup4\n      and\n        /* \"TokenFaucet.sol\":3598:3679  if (coinAddress == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"TokenFaucet.sol\":3650:3668  to.transfer(value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenFaucet.sol\":3650:3661  to.transfer */\n      dup3\n      and\n      swap1\n        /* \"TokenFaucet.sol\":3650:3668  to.transfer(value) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"TokenFaucet.sol\":3662:3667  value */\n      dup5\n      swap1\n        /* \"TokenFaucet.sol\":3650:3668  to.transfer(value) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"TokenFaucet.sol\":3662:3667  value */\n      dup6\n        /* \"TokenFaucet.sol\":3650:3661  to.transfer */\n      dup9\n        /* \"TokenFaucet.sol\":3650:3668  to.transfer(value) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_172:\n      pop\n        /* \"TokenFaucet.sol\":3643:3668  return to.transfer(value) */\n      jump(tag_155)\n        /* \"TokenFaucet.sol\":3598:3679  if (coinAddress == address(0)) {... */\n    tag_170:\n        /* \"TokenFaucet.sol\":3688:3727  IERC20(coinAddress).transfer(to, value) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenFaucet.sol\":3688:3716  IERC20(coinAddress).transfer */\n      dup5\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"TokenFaucet.sol\":3688:3727  IERC20(coinAddress).transfer(to, value) */\n      tag_173\n      swap1\n        /* \"TokenFaucet.sol\":3717:3719  to */\n      dup5\n      swap1\n        /* \"TokenFaucet.sol\":3721:3726  value */\n      dup7\n      swap1\n        /* \"TokenFaucet.sol\":3688:3727  IERC20(coinAddress).transfer(to, value) */\n      0x04\n      add\n      tag_174\n      jump\t// in\n    tag_173:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_178\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_178:\n      pop\n        /* \"TokenFaucet.sol\":3453:3734  function handleForfeitedBalance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TokenFaucet.sol\":2368:2741  function modifyTokenWhiteList(... */\n    tag_61:\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      tag_180\n        /* \"Ownable.sol\":1302:1312  _msgSender */\n      tag_114\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      jump\t// in\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1291:1298  owner() */\n      tag_181\n        /* \"Ownable.sol\":1291:1296  owner */\n      tag_88\n        /* \"Ownable.sol\":1291:1298  owner() */\n      jump\t// in\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1283:1351  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_182\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_182:\n        /* \"TokenFaucet.sol\":2508:2521  uint256 index */\n      0x00\n        /* \"TokenFaucet.sol\":2503:2610  for (uint256 index; index < newAddr.length; index++) {... */\n    tag_184:\n        /* \"TokenFaucet.sol\":2531:2538  newAddr */\n      dup3\n        /* \"TokenFaucet.sol\":2531:2545  newAddr.length */\n      mload\n        /* \"TokenFaucet.sol\":2523:2528  index */\n      dup2\n        /* \"TokenFaucet.sol\":2523:2545  index < newAddr.length */\n      lt\n        /* \"TokenFaucet.sol\":2503:2610  for (uint256 index; index < newAddr.length; index++) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"TokenFaucet.sol\":2595:2599  true */\n      0x01\n        /* \"TokenFaucet.sol\":2570:2576  tokens */\n      0x04\n        /* \"TokenFaucet.sol\":2570:2592  tokens[newAddr[index]] */\n      0x00\n        /* \"TokenFaucet.sol\":2577:2584  newAddr */\n      dup6\n        /* \"TokenFaucet.sol\":2585:2590  index */\n      dup5\n        /* \"TokenFaucet.sol\":2577:2591  newAddr[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_187\n      jumpi\n      invalid\n    tag_187:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenFaucet.sol\":2570:2592  tokens[newAddr[index]] */\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"TokenFaucet.sol\":2570:2599  tokens[newAddr[index]] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x01\n        /* \"TokenFaucet.sol\":2547:2554  index++ */\n      add\n        /* \"TokenFaucet.sol\":2503:2610  for (uint256 index; index < newAddr.length; index++) {... */\n      jump(tag_184)\n    tag_185:\n      pop\n        /* \"TokenFaucet.sol\":2624:2637  uint256 index */\n      0x00\n        /* \"TokenFaucet.sol\":2619:2735  for (uint256 index; index < removedAddr.length; index++) {... */\n    tag_188:\n        /* \"TokenFaucet.sol\":2647:2658  removedAddr */\n      dup2\n        /* \"TokenFaucet.sol\":2647:2665  removedAddr.length */\n      mload\n        /* \"TokenFaucet.sol\":2639:2644  index */\n      dup2\n        /* \"TokenFaucet.sol\":2639:2665  index < removedAddr.length */\n      lt\n        /* \"TokenFaucet.sol\":2619:2735  for (uint256 index; index < removedAddr.length; index++) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"TokenFaucet.sol\":2719:2724  false */\n      0x00\n        /* \"TokenFaucet.sol\":2690:2696  tokens */\n      0x04\n        /* \"TokenFaucet.sol\":2690:2716  tokens[removedAddr[index]] */\n      0x00\n        /* \"TokenFaucet.sol\":2697:2708  removedAddr */\n      dup5\n        /* \"TokenFaucet.sol\":2709:2714  index */\n      dup5\n        /* \"TokenFaucet.sol\":2697:2715  removedAddr[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_191\n      jumpi\n      invalid\n    tag_191:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenFaucet.sol\":2690:2716  tokens[removedAddr[index]] */\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"TokenFaucet.sol\":2690:2724  tokens[removedAddr[index]] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x01\n        /* \"TokenFaucet.sol\":2667:2674  index++ */\n      add\n        /* \"TokenFaucet.sol\":2619:2735  for (uint256 index; index < removedAddr.length; index++) {... */\n      jump(tag_188)\n        /* \"Pausable.sol\":273:299  bool public paused = false */\n    tag_64:\n      sload(0x00)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"TokenFaucet.sol\":1032:1076  uint256 public AMOUNT_NATIVE_TOKEN = 1 ether */\n    tag_68:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"Ownable.sol\":1711:1856  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      tag_193\n        /* \"Ownable.sol\":1302:1312  _msgSender */\n      tag_114\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      jump\t// in\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1291:1298  owner() */\n      tag_194\n        /* \"Ownable.sol\":1291:1296  owner */\n      tag_88\n        /* \"Ownable.sol\":1291:1298  owner() */\n      jump\t// in\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1283:1351  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_195\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_195:\n        /* \"Ownable.sol\":1817:1818  0 */\n      0x00\n        /* \"Ownable.sol\":1801:1807  _owner */\n      dup1\n      sload\n        /* \"Ownable.sol\":1780:1820  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1801:1807  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Ownable.sol\":1780:1820  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Ownable.sol\":1817:1818  0 */\n      dup4\n      swap1\n        /* \"Ownable.sol\":1780:1820  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"Ownable.sol\":1847:1848  0 */\n      0x00\n        /* \"Ownable.sol\":1830:1849  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"Ownable.sol\":1711:1856  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"TokenFaucet.sol\":3227:3362  function balanceOf()... */\n    tag_76:\n        /* \"TokenFaucet.sol\":3334:3355  address(this).balance */\n      selfbalance\n      swap1\n        /* \"TokenFaucet.sol\":3227:3362  function balanceOf()... */\n      jump\t// out\n        /* \"TokenFaucet.sol\":986:1026  uint256 public AMOUNT_TOKEN = 1000 ether */\n    tag_80:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"Pausable.sol\":666:790  function pause() external onlyOwner whenNotPaused returns (bool) {... */\n    tag_84:\n        /* \"Pausable.sol\":725:729  bool */\n      0x00\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      tag_199\n        /* \"Ownable.sol\":1302:1312  _msgSender */\n      tag_114\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      jump\t// in\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1291:1298  owner() */\n      tag_200\n        /* \"Ownable.sol\":1291:1296  owner */\n      tag_88\n        /* \"Ownable.sol\":1291:1298  owner() */\n      jump\t// in\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1283:1351  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_201\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_201:\n        /* \"Pausable.sol\":426:432  paused */\n      sload(0x00)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Pausable.sol\":425:432  !paused */\n      iszero\n        /* \"Pausable.sol\":417:433  require(!paused) */\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n        /* \"Pausable.sol\":737:743  paused */\n      0x00\n        /* \"Pausable.sol\":737:750  paused = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      dup2\n      sstore\n        /* \"Pausable.sol\":761:768  Pause() */\n      mload(0x40)\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      swap2\n        /* \"Pausable.sol\":737:743  paused */\n      swap1\n        /* \"Pausable.sol\":761:768  Pause() */\n      log1\n      pop\n        /* \"Pausable.sol\":781:785  true */\n      0x01\n        /* \"Pausable.sol\":666:790  function pause() external onlyOwner whenNotPaused returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":1079:1164  function owner() public view virtual returns (address) {... */\n    tag_88:\n        /* \"Ownable.sol\":1125:1132  address */\n      0x00\n        /* \"Ownable.sol\":1151:1157  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Ownable.sol\":1079:1164  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"TokenFaucet.sol\":824:889  mapping(address => mapping(address => UserInfo)) public userInfos */\n    tag_94:\n      0x02\n      0x20\n      dup2\n      dup2\n      mstore\n      0x00\n      swap4\n      dup5\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap2\n      dup4\n      mstore\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      swap2\n      swap1\n      swap3\n      add\n      sload\n      dup4\n      jump\t// out\n        /* \"TokenFaucet.sol\":942:980  mapping(address => bool) public tokens */\n    tag_100:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"TokenFaucet.sol\":2933:3128  function getUserInfo(address tokenAddress, address userAddress)... */\n    tag_105:\n        /* \"TokenFaucet.sol\":3042:3062  UserInfo memory user */\n      tag_206\n      tag_207\n      jump\t// in\n    tag_206:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenFaucet.sol\":3085:3108  userInfos[tokenAddress] */\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"TokenFaucet.sol\":3085:3094  userInfos */\n      0x02\n        /* \"TokenFaucet.sol\":3085:3108  userInfos[tokenAddress] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"TokenFaucet.sol\":3085:3121  userInfos[tokenAddress][userAddress] */\n      swap5\n      swap1\n      swap6\n      and\n      dup4\n      mstore\n      swap3\n      dup4\n      mstore\n      swap1\n      dup4\n      swap1\n      keccak256\n        /* \"TokenFaucet.sol\":3078:3121  user = userInfos[tokenAddress][userAddress] */\n      dup4\n      mload\n      0x60\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      add\n      sload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"TokenFaucet.sol\":2933:3128  function getUserInfo(address tokenAddress, address userAddress)... */\n      jump\t// out\n        /* \"Ownable.sol\":2005:2245  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_111:\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      tag_210\n        /* \"Ownable.sol\":1302:1312  _msgSender */\n      tag_114\n        /* \"Ownable.sol\":1302:1314  _msgSender() */\n      jump\t// in\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1291:1298  owner() */\n      tag_211\n        /* \"Ownable.sol\":1291:1296  owner */\n      tag_88\n        /* \"Ownable.sol\":1291:1298  owner() */\n      jump\t// in\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1291:1314  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1283:1351  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_212\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_212:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":2093:2115  newOwner != address(0) */\n      dup2\n      and\n        /* \"Ownable.sol\":2085:2158  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"Ownable.sol\":2194:2200  _owner */\n      0x00\n      dup1\n      sload\n        /* \"Ownable.sol\":2173:2211  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"Ownable.sol\":2194:2200  _owner */\n      swap3\n      and\n      swap2\n        /* \"Ownable.sol\":2173:2211  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"Ownable.sol\":2221:2227  _owner */\n      0x00\n        /* \"Ownable.sol\":2221:2238  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Ownable.sol\":2005:2245  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_114:\n        /* \"Context.sol\":685:695  msg.sender */\n      caller\n        /* \"Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_132:\n        /* \"SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"SafeMath.sol\":2779:2784  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMath.sol\":2802:2808  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_217\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_217:\n        /* \"SafeMath.sol\":2857:2858  c */\n      swap4\n        /* \"SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_207:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:152   */\n    tag_219:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":113:146   */\n      tag_221\n        /* \"#utility.yul\":84:104   */\n      dup2\n        /* \"#utility.yul\":113:146   */\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":65:152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":157:1073   */\n    tag_223:\n      0x00\n        /* \"#utility.yul\":270:273   */\n      dup3\n        /* \"#utility.yul\":263:267   */\n      0x1f\n        /* \"#utility.yul\":255:261   */\n      dup4\n        /* \"#utility.yul\":251:268   */\n      add\n        /* \"#utility.yul\":247:274   */\n      slt\n        /* \"#utility.yul\":237:239   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":292:297   */\n      dup1\n        /* \"#utility.yul\":285:290   */\n      dup2\n        /* \"#utility.yul\":278:298   */\n      revert\n        /* \"#utility.yul\":237:239   */\n    tag_225:\n        /* \"#utility.yul\":332:338   */\n      dup2\n        /* \"#utility.yul\":319:339   */\n      calldataload\n        /* \"#utility.yul\":358:362   */\n      0x20\n        /* \"#utility.yul\":381:399   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":418:420   */\n      dup1\n        /* \"#utility.yul\":414:416   */\n      dup4\n        /* \"#utility.yul\":411:421   */\n      gt\n        /* \"#utility.yul\":408:410   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":424:433   */\n      invalid\n        /* \"#utility.yul\":408:410   */\n    tag_226:\n        /* \"#utility.yul\":462:464   */\n      dup2\n        /* \"#utility.yul\":458:460   */\n      dup4\n        /* \"#utility.yul\":454:465   */\n      mul\n        /* \"#utility.yul\":494:496   */\n      0x40\n        /* \"#utility.yul\":488:497   */\n      mload\n        /* \"#utility.yul\":545:547   */\n      dup4\n        /* \"#utility.yul\":540:542   */\n      dup3\n        /* \"#utility.yul\":532:538   */\n      dup3\n        /* \"#utility.yul\":528:543   */\n      add\n        /* \"#utility.yul\":524:548   */\n      add\n        /* \"#utility.yul\":598:604   */\n      dup2\n        /* \"#utility.yul\":586:596   */\n      dup2\n        /* \"#utility.yul\":583:605   */\n      lt\n        /* \"#utility.yul\":578:580   */\n      dup5\n        /* \"#utility.yul\":566:576   */\n      dup3\n        /* \"#utility.yul\":563:581   */\n      gt\n        /* \"#utility.yul\":560:606   */\n      or\n        /* \"#utility.yul\":557:559   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":609:618   */\n      invalid\n        /* \"#utility.yul\":557:559   */\n    tag_227:\n        /* \"#utility.yul\":636:638   */\n      0x40\n        /* \"#utility.yul\":629:651   */\n      mstore\n        /* \"#utility.yul\":686:704   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":720:735   */\n      dup4\n      dup2\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":755:770   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":789:804   */\n      dup3\n      dup9\n      add\n        /* \"#utility.yul\":785:809   */\n      dup6\n      add\n        /* \"#utility.yul\":782:815   */\n      dup10\n      lt\n        /* \"#utility.yul\":779:781   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":832:837   */\n      dup7\n        /* \"#utility.yul\":825:830   */\n      dup8\n        /* \"#utility.yul\":818:838   */\n      revert\n        /* \"#utility.yul\":779:781   */\n    tag_228:\n        /* \"#utility.yul\":858:863   */\n      dup7\n        /* \"#utility.yul\":849:863   */\n      swap3\n      pop\n        /* \"#utility.yul\":872:1043   */\n    tag_229:\n        /* \"#utility.yul\":886:888   */\n      dup6\n        /* \"#utility.yul\":883:884   */\n      dup4\n        /* \"#utility.yul\":880:889   */\n      lt\n        /* \"#utility.yul\":872:1043   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":943:968   */\n      tag_232\n        /* \"#utility.yul\":964:967   */\n      dup2\n        /* \"#utility.yul\":943:968   */\n      tag_219\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":931:969   */\n      dup5\n      mstore\n        /* \"#utility.yul\":989:1001   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":904:905   */\n      0x01\n        /* \"#utility.yul\":897:906   */\n      swap3\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":1021:1033   */\n      dup5\n      add\n        /* \"#utility.yul\":872:1043   */\n      jump(tag_229)\n    tag_231:\n      pop\n        /* \"#utility.yul\":1061:1067   */\n      swap8\n        /* \"#utility.yul\":227:1073   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1337   */\n    tag_45:\n      0x00\n        /* \"#utility.yul\":1190:1192   */\n      0x20\n        /* \"#utility.yul\":1178:1187   */\n      dup3\n        /* \"#utility.yul\":1169:1176   */\n      dup5\n        /* \"#utility.yul\":1165:1188   */\n      sub\n        /* \"#utility.yul\":1161:1193   */\n      slt\n        /* \"#utility.yul\":1158:1160   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":1211:1217   */\n      dup1\n        /* \"#utility.yul\":1203:1209   */\n      dup2\n        /* \"#utility.yul\":1196:1218   */\n      revert\n        /* \"#utility.yul\":1158:1160   */\n    tag_234:\n        /* \"#utility.yul\":1255:1264   */\n      dup2\n        /* \"#utility.yul\":1242:1265   */\n      calldataload\n        /* \"#utility.yul\":1274:1307   */\n      tag_217\n        /* \"#utility.yul\":1301:1306   */\n      dup2\n        /* \"#utility.yul\":1274:1307   */\n      tag_222\n      jump\t// in\n        /* \"#utility.yul\":1342:1744   */\n    tag_35:\n      0x00\n      dup1\n        /* \"#utility.yul\":1471:1473   */\n      0x40\n        /* \"#utility.yul\":1459:1468   */\n      dup4\n        /* \"#utility.yul\":1450:1457   */\n      dup6\n        /* \"#utility.yul\":1446:1469   */\n      sub\n        /* \"#utility.yul\":1442:1474   */\n      slt\n        /* \"#utility.yul\":1439:1441   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":1492:1498   */\n      dup1\n        /* \"#utility.yul\":1484:1490   */\n      dup2\n        /* \"#utility.yul\":1477:1499   */\n      revert\n        /* \"#utility.yul\":1439:1441   */\n    tag_237:\n        /* \"#utility.yul\":1536:1545   */\n      dup3\n        /* \"#utility.yul\":1523:1546   */\n      calldataload\n        /* \"#utility.yul\":1555:1588   */\n      tag_238\n        /* \"#utility.yul\":1582:1587   */\n      dup2\n        /* \"#utility.yul\":1555:1588   */\n      tag_222\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":1607:1612   */\n      swap2\n      pop\n        /* \"#utility.yul\":1664:1666   */\n      0x20\n        /* \"#utility.yul\":1649:1667   */\n      dup4\n      add\n        /* \"#utility.yul\":1636:1668   */\n      calldataload\n        /* \"#utility.yul\":1677:1712   */\n      tag_239\n        /* \"#utility.yul\":1636:1668   */\n      dup2\n        /* \"#utility.yul\":1677:1712   */\n      tag_222\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":1731:1738   */\n      dup1\n        /* \"#utility.yul\":1721:1738   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1429:1744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1749:2227   */\n    tag_56:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1903:1905   */\n      0x60\n        /* \"#utility.yul\":1891:1900   */\n      dup5\n        /* \"#utility.yul\":1882:1889   */\n      dup7\n        /* \"#utility.yul\":1878:1901   */\n      sub\n        /* \"#utility.yul\":1874:1906   */\n      slt\n        /* \"#utility.yul\":1871:1873   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":1924:1930   */\n      dup1\n        /* \"#utility.yul\":1916:1922   */\n      dup2\n        /* \"#utility.yul\":1909:1931   */\n      revert\n        /* \"#utility.yul\":1871:1873   */\n    tag_241:\n        /* \"#utility.yul\":1968:1977   */\n      dup4\n        /* \"#utility.yul\":1955:1978   */\n      calldataload\n        /* \"#utility.yul\":1987:2020   */\n      tag_242\n        /* \"#utility.yul\":2014:2019   */\n      dup2\n        /* \"#utility.yul\":1987:2020   */\n      tag_222\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2039:2044   */\n      swap3\n      pop\n        /* \"#utility.yul\":2091:2093   */\n      0x20\n        /* \"#utility.yul\":2076:2094   */\n      dup5\n      add\n        /* \"#utility.yul\":2063:2095   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2147:2149   */\n      0x40\n        /* \"#utility.yul\":2132:2150   */\n      dup5\n      add\n        /* \"#utility.yul\":2119:2151   */\n      calldataload\n        /* \"#utility.yul\":2160:2195   */\n      tag_243\n        /* \"#utility.yul\":2119:2151   */\n      dup2\n        /* \"#utility.yul\":2160:2195   */\n      tag_222\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2214:2221   */\n      dup1\n        /* \"#utility.yul\":2204:2221   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1861:2227   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2232:2869   */\n    tag_40:\n      0x00\n      dup1\n        /* \"#utility.yul\":2411:2413   */\n      0x40\n        /* \"#utility.yul\":2399:2408   */\n      dup4\n        /* \"#utility.yul\":2390:2397   */\n      dup6\n        /* \"#utility.yul\":2386:2409   */\n      sub\n        /* \"#utility.yul\":2382:2414   */\n      slt\n        /* \"#utility.yul\":2379:2381   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":2432:2438   */\n      dup2\n        /* \"#utility.yul\":2424:2430   */\n      dup3\n        /* \"#utility.yul\":2417:2439   */\n      revert\n        /* \"#utility.yul\":2379:2381   */\n    tag_245:\n        /* \"#utility.yul\":2477:2486   */\n      dup3\n        /* \"#utility.yul\":2464:2487   */\n      calldataload\n        /* \"#utility.yul\":2506:2524   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2547:2549   */\n      dup1\n        /* \"#utility.yul\":2539:2545   */\n      dup3\n        /* \"#utility.yul\":2536:2550   */\n      gt\n        /* \"#utility.yul\":2533:2535   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":2568:2574   */\n      dup4\n        /* \"#utility.yul\":2560:2566   */\n      dup5\n        /* \"#utility.yul\":2553:2575   */\n      revert\n        /* \"#utility.yul\":2533:2535   */\n    tag_246:\n        /* \"#utility.yul\":2596:2663   */\n      tag_247\n        /* \"#utility.yul\":2655:2662   */\n      dup7\n        /* \"#utility.yul\":2646:2652   */\n      dup4\n        /* \"#utility.yul\":2635:2644   */\n      dup8\n        /* \"#utility.yul\":2631:2653   */\n      add\n        /* \"#utility.yul\":2596:2663   */\n      tag_223\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2586:2663   */\n      swap4\n      pop\n        /* \"#utility.yul\":2716:2718   */\n      0x20\n        /* \"#utility.yul\":2705:2714   */\n      dup6\n        /* \"#utility.yul\":2701:2719   */\n      add\n        /* \"#utility.yul\":2688:2720   */\n      calldataload\n        /* \"#utility.yul\":2672:2720   */\n      swap2\n      pop\n        /* \"#utility.yul\":2745:2747   */\n      dup1\n        /* \"#utility.yul\":2735:2743   */\n      dup3\n        /* \"#utility.yul\":2732:2748   */\n      gt\n        /* \"#utility.yul\":2729:2731   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":2766:2772   */\n      dup3\n        /* \"#utility.yul\":2758:2764   */\n      dup4\n        /* \"#utility.yul\":2751:2773   */\n      revert\n        /* \"#utility.yul\":2729:2731   */\n    tag_248:\n      pop\n        /* \"#utility.yul\":2794:2863   */\n      tag_249\n        /* \"#utility.yul\":2855:2862   */\n      dup6\n        /* \"#utility.yul\":2844:2852   */\n      dup3\n        /* \"#utility.yul\":2833:2842   */\n      dup7\n        /* \"#utility.yul\":2829:2853   */\n      add\n        /* \"#utility.yul\":2794:2863   */\n      tag_223\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2784:2863   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2369:2869   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2874:3171   */\n    tag_143:\n      0x00\n        /* \"#utility.yul\":2994:2996   */\n      0x20\n        /* \"#utility.yul\":2982:2991   */\n      dup3\n        /* \"#utility.yul\":2973:2980   */\n      dup5\n        /* \"#utility.yul\":2969:2992   */\n      sub\n        /* \"#utility.yul\":2965:2997   */\n      slt\n        /* \"#utility.yul\":2962:2964   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":3015:3021   */\n      dup1\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":3000:3022   */\n      revert\n        /* \"#utility.yul\":2962:2964   */\n    tag_251:\n        /* \"#utility.yul\":3052:3061   */\n      dup2\n        /* \"#utility.yul\":3046:3062   */\n      mload\n        /* \"#utility.yul\":3105:3110   */\n      dup1\n        /* \"#utility.yul\":3098:3111   */\n      iszero\n        /* \"#utility.yul\":3091:3112   */\n      iszero\n        /* \"#utility.yul\":3084:3089   */\n      dup2\n        /* \"#utility.yul\":3081:3113   */\n      eq\n        /* \"#utility.yul\":3071:3073   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":3132:3138   */\n      dup2\n        /* \"#utility.yul\":3124:3130   */\n      dup3\n        /* \"#utility.yul\":3117:3139   */\n      revert\n        /* \"#utility.yul\":3176:3434   */\n    tag_31:\n      0x00\n      dup1\n        /* \"#utility.yul\":3305:3307   */\n      0x40\n        /* \"#utility.yul\":3293:3302   */\n      dup4\n        /* \"#utility.yul\":3284:3291   */\n      dup6\n        /* \"#utility.yul\":3280:3303   */\n      sub\n        /* \"#utility.yul\":3276:3308   */\n      slt\n        /* \"#utility.yul\":3273:3275   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":3326:3332   */\n      dup2\n        /* \"#utility.yul\":3318:3324   */\n      dup3\n        /* \"#utility.yul\":3311:3333   */\n      revert\n        /* \"#utility.yul\":3273:3275   */\n    tag_254:\n      pop\n      pop\n        /* \"#utility.yul\":3354:3377   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3424:3426   */\n      0x20\n        /* \"#utility.yul\":3409:3427   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3396:3428   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3263:3434   */\n      jump\t// out\n        /* \"#utility.yul\":3439:3642   */\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3603:3635   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3585:3636   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3573:3575   */\n      0x20\n        /* \"#utility.yul\":3558:3576   */\n      add\n      swap1\n        /* \"#utility.yul\":3540:3642   */\n      jump\t// out\n        /* \"#utility.yul\":3647:3929   */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3847:3879   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":3829:3880   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3911:3913   */\n      0x20\n        /* \"#utility.yul\":3896:3914   */\n      dup3\n      add\n        /* \"#utility.yul\":3889:3923   */\n      mstore\n        /* \"#utility.yul\":3817:3819   */\n      0x40\n        /* \"#utility.yul\":3802:3820   */\n      add\n      swap1\n        /* \"#utility.yul\":3784:3929   */\n      jump\t// out\n        /* \"#utility.yul\":4213:4400   */\n    tag_48:\n        /* \"#utility.yul\":4378:4392   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4371:4393   */\n      iszero\n        /* \"#utility.yul\":4353:4394   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4341:4343   */\n      0x20\n        /* \"#utility.yul\":4326:4344   */\n      add\n      swap1\n        /* \"#utility.yul\":4308:4400   */\n      jump\t// out\n        /* \"#utility.yul\":4405:4751   */\n    tag_129:\n        /* \"#utility.yul\":4607:4609   */\n      0x20\n        /* \"#utility.yul\":4589:4610   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4646:4648   */\n      0x16\n        /* \"#utility.yul\":4626:4644   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4619:4649   */\n      mstore\n      shl(0x50, 0x6e6f742020737570706f727465642061646472657373)\n        /* \"#utility.yul\":4680:4682   */\n      0x40\n        /* \"#utility.yul\":4665:4683   */\n      dup3\n      add\n        /* \"#utility.yul\":4658:4710   */\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x60\n        /* \"#utility.yul\":4727:4745   */\n      add\n      swap1\n        /* \"#utility.yul\":4579:4751   */\n      jump\t// out\n        /* \"#utility.yul\":4756:5101   */\n    tag_125:\n        /* \"#utility.yul\":4958:4960   */\n      0x20\n        /* \"#utility.yul\":4940:4961   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4997:4999   */\n      0x15\n        /* \"#utility.yul\":4977:4995   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4970:5000   */\n      mstore\n      shl(0x59, 0x3932b8bab4b9329029b0b3329020b2323932b9b997)\n        /* \"#utility.yul\":5031:5033   */\n      0x40\n        /* \"#utility.yul\":5016:5034   */\n      dup3\n      add\n        /* \"#utility.yul\":5009:5060   */\n      mstore\n        /* \"#utility.yul\":5092:5094   */\n      0x60\n        /* \"#utility.yul\":5077:5095   */\n      add\n      swap1\n        /* \"#utility.yul\":4930:5101   */\n      jump\t// out\n        /* \"#utility.yul\":5106:5466   */\n    tag_107:\n        /* \"#utility.yul\":5320:5333   */\n      dup2\n      mload\n        /* \"#utility.yul\":5302:5334   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5390:5394   */\n      0x20\n        /* \"#utility.yul\":5378:5395   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":5372:5396   */\n      mload\n        /* \"#utility.yul\":5350:5370   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5343:5397   */\n      mstore\n        /* \"#utility.yul\":5453:5457   */\n      0x40\n        /* \"#utility.yul\":5441:5458   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":5435:5459   */\n      mload\n        /* \"#utility.yul\":5413:5433   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":5406:5460   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5290:5292   */\n      0x60\n        /* \"#utility.yul\":5275:5293   */\n      add\n      swap1\n        /* \"#utility.yul\":5257:5466   */\n      jump\t// out\n        /* \"#utility.yul\":5471:5648   */\n    tag_70:\n        /* \"#utility.yul\":5617:5642   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5605:5607   */\n      0x20\n        /* \"#utility.yul\":5590:5608   */\n      add\n      swap1\n        /* \"#utility.yul\":5572:5648   */\n      jump\t// out\n        /* \"#utility.yul\":5653:5901   */\n    tag_27:\n        /* \"#utility.yul\":5827:5852   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":5883:5885   */\n      0x20\n        /* \"#utility.yul\":5868:5886   */\n      dup3\n      add\n        /* \"#utility.yul\":5861:5895   */\n      mstore\n        /* \"#utility.yul\":5815:5817   */\n      0x40\n        /* \"#utility.yul\":5800:5818   */\n      add\n      swap1\n        /* \"#utility.yul\":5782:5901   */\n      jump\t// out\n        /* \"#utility.yul\":5906:6225   */\n    tag_96:\n        /* \"#utility.yul\":6108:6133   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":6164:6166   */\n      0x20\n        /* \"#utility.yul\":6149:6167   */\n      dup4\n      add\n        /* \"#utility.yul\":6142:6176   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6207:6209   */\n      0x40\n        /* \"#utility.yul\":6192:6210   */\n      dup3\n      add\n        /* \"#utility.yul\":6185:6219   */\n      mstore\n        /* \"#utility.yul\":6096:6098   */\n      0x60\n        /* \"#utility.yul\":6081:6099   */\n      add\n      swap1\n        /* \"#utility.yul\":6063:6225   */\n      jump\t// out\n        /* \"#utility.yul\":6230:6363   */\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6307:6338   */\n      dup2\n      and\n        /* \"#utility.yul\":6297:6339   */\n      dup2\n      eq\n        /* \"#utility.yul\":6287:6289   */\n      tag_266\n      jumpi\n        /* \"#utility.yul\":6353:6354   */\n      0x00\n        /* \"#utility.yul\":6350:6351   */\n      dup1\n        /* \"#utility.yul\":6343:6355   */\n      revert\n        /* \"#utility.yul\":6287:6289   */\n    tag_266:\n        /* \"#utility.yul\":6277:6363   */\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\n    auxdata: 0xa2646970667358221220e28a444b17123294041616ccc89088a092bcd2ec52b73b289fd5d5c10cdef2b364736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526000805460ff60a01b19169055683635c9adc5dea00000600555670de0b6b3a764000060065534801561003657600080fd5b506000610041610094565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060018055610098565b3390565b61115b806100a76000396000f3fe6080604052600436106101095760003560e01c8063715018a6116100955780638da5cb5b116100645780638da5cb5b146102af578063c9b5279c146102d1578063e486033914610300578063f2801fe714610320578063f2fde38b1461034d57610109565b8063715018a61461025b578063722713f7146102705780638174e972146102855780638456cb591461029a57610109565b80633f4ba83a116100dc5780633f4ba83a146101cf5780634e6f5b60146101e457806351b32e8b146102045780635c975abb14610224578063602f86f81461023957610109565b8063207add911461014457806321c0b342146101665780632adb5f4e14610179578063372c12b114610199575b7f41d0978db23c08ae0f5d1e376087f27d92b1a65d7cf5a613ec7d8a8b977e4ed0344260405161013a9291906110a3565b60405180910390a1005b34801561015057600080fd5b5061016461015f366004610fc1565b61036d565b005b610164610174366004610ec7565b6103da565b34801561018557600080fd5b50610164610194366004610f40565b610631565b3480156101a557600080fd5b506101b96101b4366004610eab565b610749565b6040516101c6919061100f565b60405180910390f35b3480156101db57600080fd5b506101b961075e565b3480156101f057600080fd5b506101646101ff366004610eff565b610812565b34801561021057600080fd5b5061016461021f366004610f40565b610944565b34801561023057600080fd5b506101b9610a57565b34801561024557600080fd5b5061024e610a67565b6040516101c6919061109a565b34801561026757600080fd5b50610164610a6d565b34801561027c57600080fd5b5061024e610b19565b34801561029157600080fd5b5061024e610b1d565b3480156102a657600080fd5b506101b9610b23565b3480156102bb57600080fd5b506102c4610bde565b6040516101c69190610fe2565b3480156102dd57600080fd5b506102f16102ec366004610ec7565b610bed565b6040516101c6939291906110b1565b34801561030c57600080fd5b506101b961031b366004610eab565b610c15565b34801561032c57600080fd5b5061034061033b366004610ec7565b610c2a565b6040516101c69190611079565b34801561035957600080fd5b50610164610368366004610eab565b610c80565b610375610d82565b6001600160a01b0316610386610bde565b6001600160a01b0316146103cf576040805162461bcd60e51b81526020600482018190526024820152600080516020611106833981519152604482015290519081900360640190fd5b600591909155600655565b60026001541415610432576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600155600054600160a01b900460ff161561044e57600080fd5b3360009081526003602052604090205460ff166104865760405162461bcd60e51b815260040161047d9061104a565b60405180910390fd5b6001600160a01b03821660009081526004602052604090205460ff166104be5760405162461bcd60e51b815260040161047d9061101a565b6005546001600160a01b0383166104d457506006545b6001600160a01b03808416600090815260026020818152604080842094871684529390529190204291810191909155805461050f9083610d86565b8155600181018290556001600160a01b038416610562576040516001600160a01b0384169083156108fc029084906000818181858888f1935050505015801561055c573d6000803e3d6000fd5b506105e4565b60405163a9059cbb60e01b81526001600160a01b0385169063a9059cbb906105909086908690600401610ff6565b602060405180830381600087803b1580156105aa57600080fd5b505af11580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e29190610fa1565b505b826001600160a01b03167f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a834260405161061f9291906110a3565b60405180910390a25050600180555050565b610639610d82565b6001600160a01b031661064a610bde565b6001600160a01b031614610693576040805162461bcd60e51b81526020600482018190526024820152600080516020611106833981519152604482015290519081900360640190fd5b60005b82518110156106eb576001600360008584815181106106b157fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610696565b5060005b81518110156107445760006003600084848151811061070a57fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016106ef565b505050565b60036020526000908152604090205460ff1681565b6000610768610d82565b6001600160a01b0316610779610bde565b6001600160a01b0316146107c2576040805162461bcd60e51b81526020600482018190526024820152600080516020611106833981519152604482015290519081900360640190fd5b600054600160a01b900460ff166107d857600080fd5b6000805460ff60a01b191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a150600190565b61081a610d82565b6001600160a01b031661082b610bde565b6001600160a01b031614610874576040805162461bcd60e51b81526020600482018190526024820152600080516020611106833981519152604482015290519081900360640190fd5b6001600160a01b0383166108be576040516001600160a01b0382169083156108fc029084906000818181858888f193505050501580156108b8573d6000803e3d6000fd5b50610744565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb906108ec9084908690600401610ff6565b602060405180830381600087803b15801561090657600080fd5b505af115801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e9190610fa1565b50505050565b61094c610d82565b6001600160a01b031661095d610bde565b6001600160a01b0316146109a6576040805162461bcd60e51b81526020600482018190526024820152600080516020611106833981519152604482015290519081900360640190fd5b60005b82518110156109fe576001600460008584815181106109c457fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016109a9565b5060005b815181101561074457600060046000848481518110610a1d57fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610a02565b600054600160a01b900460ff1681565b60065481565b610a75610d82565b6001600160a01b0316610a86610bde565b6001600160a01b031614610acf576040805162461bcd60e51b81526020600482018190526024820152600080516020611106833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b4790565b60055481565b6000610b2d610d82565b6001600160a01b0316610b3e610bde565b6001600160a01b031614610b87576040805162461bcd60e51b81526020600482018190526024820152600080516020611106833981519152604482015290519081900360640190fd5b600054600160a01b900460ff1615610b9e57600080fd5b6000805460ff60a01b1916600160a01b1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a150600190565b6000546001600160a01b031690565b6002602081815260009384526040808520909152918352912080546001820154919092015483565b60046020526000908152604090205460ff1681565b610c32610de7565b506001600160a01b0391821660009081526002602081815260408084209490951683529283529083902083516060810185528154815260018201549381019390935201549181019190915290565b610c88610d82565b6001600160a01b0316610c99610bde565b6001600160a01b031614610ce2576040805162461bcd60e51b81526020600482018190526024820152600080516020611106833981519152604482015290519081900360640190fd5b6001600160a01b038116610d275760405162461bcd60e51b81526004018080602001828103825260268152602001806110e06026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600082820183811015610de0576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60405180606001604052806000815260200160008152602001600081525090565b8035610e13816110c7565b919050565b600082601f830112610e28578081fd5b8135602067ffffffffffffffff80831115610e3f57fe5b81830260405183828201018181108482111715610e5857fe5b60405284815283810192508684018288018501891015610e76578687fd5b8692505b85831015610e9f57610e8b81610e08565b845292840192600192909201918401610e7a565b50979650505050505050565b600060208284031215610ebc578081fd5b8135610de0816110c7565b60008060408385031215610ed9578081fd5b8235610ee4816110c7565b91506020830135610ef4816110c7565b809150509250929050565b600080600060608486031215610f13578081fd5b8335610f1e816110c7565b9250602084013591506040840135610f35816110c7565b809150509250925092565b60008060408385031215610f52578182fd5b823567ffffffffffffffff80821115610f69578384fd5b610f7586838701610e18565b93506020850135915080821115610f8a578283fd5b50610f9785828601610e18565b9150509250929050565b600060208284031215610fb2578081fd5b81518015158114610de0578182fd5b60008060408385031215610fd3578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6020808252601690820152756e6f742020737570706f72746564206164647265737360501b604082015260600190565b6020808252601590820152743932b8bab4b9329029b0b3329020b2323932b9b99760591b604082015260600190565b81518152602080830151908201526040918201519181019190915260600190565b90815260200190565b918252602082015260400190565b9283526020830191909152604082015260600190565b6001600160a01b03811681146110dc57600080fd5b5056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220e28a444b17123294041616ccc89088a092bcd2ec52b73b289fd5d5c10cdef2b364736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x5 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x41 PUSH2 0x94 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 DUP1 SSTORE PUSH2 0x98 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x115B DUP1 PUSH2 0xA7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xC9B5279C EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xE4860339 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xF2801FE7 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x34D JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x8174E972 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x29A JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x4E6F5B60 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x51B32E8B EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x602F86F8 EQ PUSH2 0x239 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x207ADD91 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x21C0B342 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x2ADB5F4E EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x372C12B1 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH32 0x41D0978DB23C08AE0F5D1E376087F27D92B1A65D7CF5A613EC7D8A8B977E4ED0 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x13A SWAP3 SWAP2 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xFC1 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0xF40 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x75E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xEFF JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xF40 JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0xA57 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0xA6D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH2 0xB19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH2 0xB1D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0xB23 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xFE2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x340 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x375 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x386 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3CF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1106 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x432 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4D4 JUMPI POP PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 DUP8 AND DUP5 MSTORE SWAP4 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP1 SLOAD PUSH2 0x50F SWAP1 DUP4 PUSH2 0xD86 JUMP JUMPDEST DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x55C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x590 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xFF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0xFA1 JUMP JUMPDEST POP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x61F SWAP3 SWAP2 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x639 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x64A PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x693 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1106 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x6EB JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6B1 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x696 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x744 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x70A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x6EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x768 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x779 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1106 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x81A PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82B PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x874 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1106 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8BE JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x8EC SWAP1 DUP5 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xFF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x91A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x93E SWAP2 SWAP1 PUSH2 0xFA1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x94C PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x95D PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1106 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x9FE JUMPI PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x9C4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x9A9 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x744 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA1D JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA75 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA86 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xACF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1106 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2D PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB3E PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB87 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1106 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD DUP4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xC32 PUSH2 0xDE7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP4 MSTORE SWAP3 DUP4 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x60 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xC88 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC99 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCE2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1106 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10E0 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xDE0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xE13 DUP2 PUSH2 0x10C7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE28 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0xE3F JUMPI INVALID JUMPDEST DUP2 DUP4 MUL PUSH1 0x40 MLOAD DUP4 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0xE58 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP3 POP DUP7 DUP5 ADD DUP3 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH2 0xE76 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH2 0xE9F JUMPI PUSH2 0xE8B DUP2 PUSH2 0xE08 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD PUSH2 0xE7A JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEBC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDE0 DUP2 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xEE4 DUP2 PUSH2 0x10C7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xEF4 DUP2 PUSH2 0x10C7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF13 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xF1E DUP2 PUSH2 0x10C7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xF35 DUP2 PUSH2 0x10C7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF52 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF69 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xF75 DUP7 DUP4 DUP8 ADD PUSH2 0xE18 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xF8A JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xF97 DUP6 DUP3 DUP7 ADD PUSH2 0xE18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE0 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFD3 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x6E6F742020737570706F727465642061646472657373 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x3932B8BAB4B9329029B0B3329020B2323932B9B997 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A2646970667358221220E28A DIFFICULTY 0x4B OR SLT ORIGIN SWAP5 DIV AND AND 0xCC 0xC8 SWAP1 DUP9 LOG0 SWAP3 0xBC 0xD2 0xEC MSTORE 0xB7 EXTCODESIZE 0x28 SWAP16 0xD5 0xD5 0xC1 0xC 0xDE CALLCODE 0xB3 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "309:3427:6:-:0;;;294:5:3;273:26;;-1:-1:-1;;;;273:26:3;;;1016:10:6;986:40;;1069:7;1032:44;;309:3427;;;;;;;;;-1:-1:-1;878:17:2;898:12;:10;:12::i;:::-;920:6;:18;;-1:-1:-1;;;;;;920:18:2;-1:-1:-1;;;;;920:18:2;;;;;;;953:43;;920:18;;-1:-1:-1;920:18:2;953:43;;920:6;;953:43;-1:-1:-1;1645:1:4;1750:22;;309:3427:6;;598:104:0;685:10;598:104;:::o;309:3427:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6365:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "140:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "113:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:7",
														"type": ""
													}
												],
												"src": "14:138:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "227:846:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "276:24:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "285:5:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "292:5:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "278:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "278:20:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "278:20:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "255:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "263:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "251:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "251:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "270:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "247:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "247:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "240:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "240:35:7"
															},
															"nodeType": "YulIf",
															"src": "237:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "309:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "332:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "319:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "319:20:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "313:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "348:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "358:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "352:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "371:28:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "381:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "375:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "422:13:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "424:7:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "424:9:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "424:9:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "414:2:7"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "418:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "411:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "411:10:7"
															},
															"nodeType": "YulIf",
															"src": "408:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "444:21:7",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "458:2:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "462:2:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "454:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "454:11:7"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "448:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "474:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "494:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "488:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "478:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "506:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "532:6:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "540:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "528:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "528:15:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "545:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "524:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "524:24:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "510:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "607:13:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "609:7:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "609:9:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "609:9:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "566:10:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "578:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "563:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "563:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "586:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "598:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "583:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "583:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "560:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:46:7"
															},
															"nodeType": "YulIf",
															"src": "557:2:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "636:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "640:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "629:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "629:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "629:22:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "660:17:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "671:6:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "664:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "693:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "701:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "686:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "686:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "686:18:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "713:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "724:6:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "732:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "720:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "720:15:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "713:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "744:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "759:6:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "767:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "755:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:15:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "748:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "816:24:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "825:5:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "832:5:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "818:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "818:20:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "818:20:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "793:6:7"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "801:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "789:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "789:15:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "806:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "785:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "785:24:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "811:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "782:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "782:33:7"
															},
															"nodeType": "YulIf",
															"src": "779:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "849:14:7",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "858:5:7"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "853:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "917:126:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "938:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "943:20:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "943:25:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "931:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "931:38:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "931:38:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "982:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "993:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "998:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "989:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "989:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "982:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1014:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1025:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1030:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1021:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1021:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1014:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "883:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "886:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "880:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "880:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "890:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "892:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "901:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "904:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "897:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "897:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "892:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "876:3:7",
																"statements": []
															},
															"src": "872:171:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1052:15:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1061:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1052:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "201:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "209:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "217:5:7",
														"type": ""
													}
												],
												"src": "157:916:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:189:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1194:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1203:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1211:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1196:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1196:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1196:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1169:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1178:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1165:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1165:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1190:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1161:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1161:32:7"
															},
															"nodeType": "YulIf",
															"src": "1158:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1229:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1255:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1242:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1233:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1301:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1274:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1274:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1316:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1326:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1316:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1114:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1125:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1137:6:7",
														"type": ""
													}
												],
												"src": "1078:259:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1429:315:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1475:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1484:6:7"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1492:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1477:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1477:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1477:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1459:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1471:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:32:7"
															},
															"nodeType": "YulIf",
															"src": "1439:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1510:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1536:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1523:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1523:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1514:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1582:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1555:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1555:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1597:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1607:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1621:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1653:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1664:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1649:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1649:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1636:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1636:32:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1625:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1704:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1677:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1677:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1721:17:7",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1731:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1721:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1387:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1398:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1410:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1418:6:7",
														"type": ""
													}
												],
												"src": "1342:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1861:366:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1907:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "1916:6:7"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "1924:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1909:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1909:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1909:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1882:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1891:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1878:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1878:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1903:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1874:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:32:7"
															},
															"nodeType": "YulIf",
															"src": "1871:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1942:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1968:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1955:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1946:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2014:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1987:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1987:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1987:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2029:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2039:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2029:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2053:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2080:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2091:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2076:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2076:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2063:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2053:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2104:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2136:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2147:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2132:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2132:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2119:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2119:32:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2108:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2187:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2160:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2160:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2160:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2204:17:7",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2214:7:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1811:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1822:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1834:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1842:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1850:6:7",
														"type": ""
													}
												],
												"src": "1749:478:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2369:500:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2415:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2424:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2432:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2417:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2417:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2417:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2390:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2399:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2386:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2386:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2411:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2382:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2382:32:7"
															},
															"nodeType": "YulIf",
															"src": "2379:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2450:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2477:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2464:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2464:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2454:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2496:28:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2506:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2500:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2551:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2560:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2568:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2553:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2553:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2553:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2539:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2547:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2536:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2536:14:7"
															},
															"nodeType": "YulIf",
															"src": "2533:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2586:77:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2635:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2646:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2631:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2631:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2655:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_address_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2596:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2596:67:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2586:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2672:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2705:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2716:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2701:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2701:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2688:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2688:32:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2676:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2749:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "2758:6:7"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "2766:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2751:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2751:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2751:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2735:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2745:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2732:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2732:16:7"
															},
															"nodeType": "YulIf",
															"src": "2729:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2784:79:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2833:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2844:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2829:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2829:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2855:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_address_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2794:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2794:69:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2784:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2327:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2338:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2350:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2358:6:7",
														"type": ""
													}
												],
												"src": "2232:637:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2952:219:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2998:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3007:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3015:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3000:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3000:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3000:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2973:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2982:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2969:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2969:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2994:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2965:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2965:32:7"
															},
															"nodeType": "YulIf",
															"src": "2962:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3033:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3052:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3046:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3046:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3037:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3115:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3124:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3132:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3117:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3117:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3117:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3084:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3105:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3098:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3098:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3091:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3091:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3081:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3081:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3074:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3074:40:7"
															},
															"nodeType": "YulIf",
															"src": "3071:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3150:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3160:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3150:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2918:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2929:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2941:6:7",
														"type": ""
													}
												],
												"src": "2874:297:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3263:171:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3309:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3318:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3326:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3311:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3311:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3311:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3284:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3293:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3305:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3276:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3276:32:7"
															},
															"nodeType": "YulIf",
															"src": "3273:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3344:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3367:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3354:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3354:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3386:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3413:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3424:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3409:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3409:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3396:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3386:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3221:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3232:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3244:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3252:6:7",
														"type": ""
													}
												],
												"src": "3176:258:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3540:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3550:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3562:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3573:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3558:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3550:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3592:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3607:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3623:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3628:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3619:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3619:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3632:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3615:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3615:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3603:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3603:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3585:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3585:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3585:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3509:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3520:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3531:4:7",
														"type": ""
													}
												],
												"src": "3439:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3784:145:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3794:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3806:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3817:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3794:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3836:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3851:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3867:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3872:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3863:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3863:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3876:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3859:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3859:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3847:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3847:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3829:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3829:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3829:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3900:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3911:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3896:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3916:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3889:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3889:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3889:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3756:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3764:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3775:4:7",
														"type": ""
													}
												],
												"src": "3647:282:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4063:145:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4073:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4085:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4096:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4081:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4073:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4115:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4130:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4146:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4151:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4142:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4142:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4155:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4138:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4138:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4126:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4126:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4108:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4108:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4108:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4179:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4190:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4175:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4175:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4195:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4168:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4168:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4168:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4024:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4035:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4043:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4054:4:7",
														"type": ""
													}
												],
												"src": "3934:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4308:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4318:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4330:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4341:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4326:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4318:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4360:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4385:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4378:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4378:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4371:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4371:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4353:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4353:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4277:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4288:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4299:4:7",
														"type": ""
													}
												],
												"src": "4213:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4579:172:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4596:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4607:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4589:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4589:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4589:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4630:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4641:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4626:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4626:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4646:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4619:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4619:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4619:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4669:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4680:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4665:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4665:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4685:24:7",
																		"type": "",
																		"value": "not  supported address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4658:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4658:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4658:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4719:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4727:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4719:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96437ddb1e617ed197aaf84edae68bf8cbbb61b00f20359a1b9b070e34b958a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4556:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4570:4:7",
														"type": ""
													}
												],
												"src": "4405:346:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4930:171:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4947:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4958:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4940:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4940:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4940:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4981:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4992:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4977:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4997:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4970:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4970:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4970:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5031:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5016:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5016:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5036:23:7",
																		"type": "",
																		"value": "require Safe Address."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5009:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5009:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5009:51:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5069:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5081:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5092:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5077:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5077:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5069:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b7bfaafacc8b958ee5991d7093d15af0d696976dbb47153aa280824a640c2f4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4907:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4921:4:7",
														"type": ""
													}
												],
												"src": "4756:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5257:209:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5267:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5279:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5290:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5275:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5275:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5267:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5309:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5326:6:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5320:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5320:13:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5302:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5302:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5302:32:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5354:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5365:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5350:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5350:20:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5382:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5390:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5378:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5372:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5372:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5343:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5343:54:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5343:54:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5417:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5428:4:7",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5413:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5413:20:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5445:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5453:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5441:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5441:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5435:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5435:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5406:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5406:54:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5406:54:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_UserInfo_$718_memory_ptr__to_t_struct$_UserInfo_$718_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5226:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5237:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5248:4:7",
														"type": ""
													}
												],
												"src": "5106:360:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5572:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5582:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5594:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5605:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5590:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5590:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5582:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5624:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5635:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5617:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5617:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5617:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5541:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5552:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5563:4:7",
														"type": ""
													}
												],
												"src": "5471:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5782:119:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5792:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5804:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5815:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5800:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5800:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5792:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5834:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5845:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5827:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5872:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5883:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5868:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5888:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5861:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5861:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5861:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5743:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5754:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5762:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5773:4:7",
														"type": ""
													}
												],
												"src": "5653:248:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6063:162:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6073:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6085:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6096:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6081:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6081:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6073:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6115:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6126:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6108:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6108:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6108:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6153:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6164:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6149:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6149:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6169:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6142:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6142:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6142:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6207:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6192:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6212:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6185:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6185:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6185:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6016:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6027:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6035:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6043:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6054:4:7",
														"type": ""
													}
												],
												"src": "5906:319:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6277:86:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6341:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6350:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6353:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6343:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6343:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6343:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6300:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6311:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6326:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6331:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "6322:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6322:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6335:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6318:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6318:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6307:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6307:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6297:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6297:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6290:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6290:50:7"
															},
															"nodeType": "YulIf",
															"src": "6287:2:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6266:5:7",
														"type": ""
													}
												],
												"src": "6230:133:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n    function abi_decode_t_array$_t_address_$dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := 0xffffffffffffffff\n        if gt(_1, _3) { invalid() }\n        let _4 := mul(_1, _2)\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, _4), _2)\n        if or(gt(newFreePtr, _3), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, _4), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_t_address(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address_payable(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_t_address(value_1)\n        value2 := value_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_t_array$_t_address_$dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_array$_t_address_$dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_96437ddb1e617ed197aaf84edae68bf8cbbb61b00f20359a1b9b070e34b958a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"not  supported address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b7bfaafacc8b958ee5991d7093d15af0d696976dbb47153aa280824a640c2f4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"require Safe Address.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_UserInfo_$718_memory_ptr__to_t_struct$_UserInfo_$718_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xC9B5279C EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xE4860339 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xF2801FE7 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x34D JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x8174E972 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x29A JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x4E6F5B60 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x51B32E8B EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x602F86F8 EQ PUSH2 0x239 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x207ADD91 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x21C0B342 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x2ADB5F4E EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x372C12B1 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH32 0x41D0978DB23C08AE0F5D1E376087F27D92B1A65D7CF5A613EC7D8A8B977E4ED0 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x13A SWAP3 SWAP2 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xFC1 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0xF40 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x75E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xEFF JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xF40 JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0xA57 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0xA6D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH2 0xB19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH2 0xB1D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0xB23 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xFE2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x340 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x375 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x386 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3CF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1106 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x432 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4D4 JUMPI POP PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 DUP8 AND DUP5 MSTORE SWAP4 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP1 SLOAD PUSH2 0x50F SWAP1 DUP4 PUSH2 0xD86 JUMP JUMPDEST DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x55C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x590 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xFF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0xFA1 JUMP JUMPDEST POP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x61F SWAP3 SWAP2 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x639 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x64A PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x693 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1106 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x6EB JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6B1 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x696 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x744 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x70A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x6EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x768 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x779 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1106 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x81A PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82B PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x874 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1106 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8BE JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x8EC SWAP1 DUP5 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xFF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x91A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x93E SWAP2 SWAP1 PUSH2 0xFA1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x94C PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x95D PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1106 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x9FE JUMPI PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x9C4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x9A9 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x744 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA1D JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA75 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA86 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xACF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1106 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2D PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB3E PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB87 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1106 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD DUP4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xC32 PUSH2 0xDE7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP4 MSTORE SWAP3 DUP4 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x60 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xC88 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC99 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCE2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1106 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10E0 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xDE0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xE13 DUP2 PUSH2 0x10C7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE28 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0xE3F JUMPI INVALID JUMPDEST DUP2 DUP4 MUL PUSH1 0x40 MLOAD DUP4 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0xE58 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP3 POP DUP7 DUP5 ADD DUP3 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH2 0xE76 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH2 0xE9F JUMPI PUSH2 0xE8B DUP2 PUSH2 0xE08 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD PUSH2 0xE7A JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEBC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDE0 DUP2 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xEE4 DUP2 PUSH2 0x10C7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xEF4 DUP2 PUSH2 0x10C7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF13 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xF1E DUP2 PUSH2 0x10C7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xF35 DUP2 PUSH2 0x10C7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF52 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF69 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xF75 DUP7 DUP4 DUP8 ADD PUSH2 0xE18 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xF8A JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xF97 DUP6 DUP3 DUP7 ADD PUSH2 0xE18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE0 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFD3 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x6E6F742020737570706F727465642061646472657373 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x3932B8BAB4B9329029B0B3329020B2323932B9B997 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A2646970667358221220E28A DIFFICULTY 0x4B OR SLT ORIGIN SWAP5 DIV AND AND 0xCC 0xC8 SWAP1 DUP9 LOG0 SWAP3 0xBC 0xD2 0xEC MSTORE 0xB7 EXTCODESIZE 0x28 SWAP16 0xD5 0xD5 0xC1 0xC 0xDE CALLCODE 0xB3 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "309:3427:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3177:37;3187:9;3198:15;3177:37;;;;;;;:::i;:::-;;;;;;;;309:3427;2747:179;;;;;;;;;;-1:-1:-1;2747:179:6;;;;;:::i;:::-;;:::i;:::-;;1123:859;;;;;;:::i;:::-;;:::i;1988:374::-;;;;;;;;;;-1:-1:-1;1988:374:6;;;;;:::i;:::-;;:::i;895:41::-;;;;;;;;;;-1:-1:-1;895:41:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;872:126:3;;;;;;;;;;;;;:::i;3453:281:6:-;;;;;;;;;;-1:-1:-1;3453:281:6;;;;;:::i;:::-;;:::i;2368:373::-;;;;;;;;;;-1:-1:-1;2368:373:6;;;;;:::i;:::-;;:::i;273:26:3:-;;;;;;;;;;;;;:::i;1032:44:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1711:145:2:-;;;;;;;;;;;;;:::i;3227:135:6:-;;;;;;;;;;;;;:::i;986:40::-;;;;;;;;;;;;;:::i;666:124:3:-;;;;;;;;;;;;;:::i;1079:85:2:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;824:65:6:-;;;;;;;;;;-1:-1:-1;824:65:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;942:38::-;;;;;;;;;;-1:-1:-1;942:38:6;;;;;:::i;:::-;;:::i;2933:195::-;;;;;;;;;;-1:-1:-1;2933:195:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2005:240:2:-;;;;;;;;;;-1:-1:-1;2005:240:2;;;;;:::i;:::-;;:::i;2747:179:6:-;1302:12:2;:10;:12::i;:::-;-1:-1:-1;;;;;1291:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1291:23:2;;1283:68;;;;;-1:-1:-1;;;1283:68:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1283:68:2;;;;;;;;;;;;;;;2843:12:6::1;:29:::0;;;;2882:19:::1;:37:::0;2747:179::o;1123:859::-;1688:1:4;2269:7;;:19;;2261:63;;;;;-1:-1:-1;;;2261:63:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2399:7;:18;426:6:3::1;::::0;-1:-1:-1;;;426:6:3;::::1;;;425:7;417:16;;;::::0;::::1;;763:10:6::2;753:21;::::0;;;:9:::2;:21;::::0;;;;;::::2;;745:55;;;;-1:-1:-1::0;;;745:55:6::2;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;1296:21:6;::::3;;::::0;;;:6:::3;:21;::::0;;;;;::::3;;1288:56;;;;-1:-1:-1::0;;;1288:56:6::3;;;;;;;:::i;:::-;1374:12;::::0;-1:-1:-1;;;;;1399:27:6;::::3;1396:88;;-1:-1:-1::0;1454:19:6::3;::::0;1396:88:::3;-1:-1:-1::0;;;;;1521:24:6;;::::3;1493:25;1521:24:::0;;;:9:::3;:24;::::0;;;;;;;:38;;::::3;::::0;;;;;;;;1589:15:::3;1569:17:::0;;::::3;:35:::0;;;;1639:22;;:37:::3;::::0;1666:9;1639:26:::3;:37::i;:::-;1614:62:::0;;1686:21:::3;::::0;::::3;:33:::0;;;-1:-1:-1;;;;;1732:27:6;::::3;1729:183;;1775:41;::::0;-1:-1:-1;;;;;1775:30:6;::::3;::::0;:41;::::3;;;::::0;1806:9;;1775:41:::3;::::0;;;1806:9;1775:30;:41;::::3;;;;;;;;;;;;;::::0;::::3;;;;;;1729:183;;;1846:55;::::0;-1:-1:-1;;;1846:55:6;;-1:-1:-1;;;;;1846:30:6;::::3;::::0;::::3;::::0;:55:::3;::::0;1877:12;;1891:9;;1846:55:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1729:183;1934:12;-1:-1:-1::0;;;;;1926:49:6::3;;1948:9;1959:15;1926:49;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1645:1:4;2572:22;;-1:-1:-1;;1123:859:6:o;1988:374::-;1302:12:2;:10;:12::i;:::-;-1:-1:-1;;;;;1291:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1291:23:2;;1283:68;;;;;-1:-1:-1;;;1283:68:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1283:68:2;;;;;;;;;;;;;;;2123:13:6::1;2118:110;2146:7;:14;2138:5;:22;2118:110;;;2213:4;2185:9;:25;2195:7;2203:5;2195:14;;;;;;;;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;2185:25:6::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;2185:25:6;:32;;-1:-1:-1;;2185:32:6::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;2162:7:6::1;2118:110;;;;2242:13;2237:119;2265:11;:18;2257:5;:26;2237:119;;;2340:5;2308:9;:29;2318:11;2330:5;2318:18;;;;;;;;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;2308:29:6::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;2308:29:6;:37;;-1:-1:-1;;2308:37:6::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;2285:7:6::1;2237:119;;;;1988:374:::0;;:::o;895:41::-;;;;;;;;;;;;;;;:::o;872:126:3:-;930:4;1302:12:2;:10;:12::i;:::-;-1:-1:-1;;;;;1291:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1291:23:2;;1283:68;;;;;-1:-1:-1;;;1283:68:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1283:68:2;;;;;;;;;;;;;;;568:6:3::1;::::0;-1:-1:-1;;;568:6:3;::::1;;;560:15;;;::::0;::::1;;951:5:::2;942:14:::0;;-1:-1:-1;;;;942:14:3::2;::::0;;967:9:::2;::::0;::::2;::::0;951:5;967:9:::2;-1:-1:-1::0;989:4:3::2;872:126:::0;:::o;3453:281:6:-;1302:12:2;:10;:12::i;:::-;-1:-1:-1;;;;;1291:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1291:23:2;;1283:68;;;;;-1:-1:-1;;;1283:68:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1283:68:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;3602:25:6;::::1;3598:81;;3650:18;::::0;-1:-1:-1;;;;;3650:11:6;::::1;::::0;:18;::::1;;;::::0;3662:5;;3650:18:::1;::::0;;;3662:5;3650:11;:18;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;3643:25;;3598:81;3688:39;::::0;-1:-1:-1;;;3688:39:6;;-1:-1:-1;;;;;3688:28:6;::::1;::::0;::::1;::::0;:39:::1;::::0;3717:2;;3721:5;;3688:39:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3453:281:::0;;;:::o;2368:373::-;1302:12:2;:10;:12::i;:::-;-1:-1:-1;;;;;1291:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1291:23:2;;1283:68;;;;;-1:-1:-1;;;1283:68:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1283:68:2;;;;;;;;;;;;;;;2508:13:6::1;2503:107;2531:7;:14;2523:5;:22;2503:107;;;2595:4;2570:6;:22;2577:7;2585:5;2577:14;;;;;;;;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;2570:22:6::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;2570:22:6;:29;;-1:-1:-1;;2570:29:6::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;2547:7:6::1;2503:107;;;;2624:13;2619:116;2647:11;:18;2639:5;:26;2619:116;;;2719:5;2690:6;:26;2697:11;2709:5;2697:18;;;;;;;;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;2690:26:6::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;2690:26:6;:34;;-1:-1:-1;;2690:34:6::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;2667:7:6::1;2619:116;;273:26:3::0;;;-1:-1:-1;;;273:26:3;;;;;:::o;1032:44:6:-;;;;:::o;1711:145:2:-;1302:12;:10;:12::i;:::-;-1:-1:-1;;;;;1291:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1291:23:2;;1283:68;;;;;-1:-1:-1;;;1283:68:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1283:68:2;;;;;;;;;;;;;;;1817:1:::1;1801:6:::0;;1780:40:::1;::::0;-1:-1:-1;;;;;1801:6:2;;::::1;::::0;1780:40:::1;::::0;1817:1;;1780:40:::1;1847:1;1830:19:::0;;-1:-1:-1;;;;;;1830:19:2::1;::::0;;1711:145::o;3227:135:6:-;3334:21;;3227:135::o;986:40::-;;;;:::o;666:124:3:-;725:4;1302:12:2;:10;:12::i;:::-;-1:-1:-1;;;;;1291:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1291:23:2;;1283:68;;;;;-1:-1:-1;;;1283:68:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1283:68:2;;;;;;;;;;;;;;;426:6:3::1;::::0;-1:-1:-1;;;426:6:3;::::1;;;425:7;417:16;;;::::0;::::1;;737:6:::2;:13:::0;;-1:-1:-1;;;;737:13:3::2;-1:-1:-1::0;;;737:13:3::2;::::0;;761:7:::2;::::0;::::2;::::0;737:6;761:7:::2;-1:-1:-1::0;781:4:3::2;666:124:::0;:::o;1079:85:2:-;1125:7;1151:6;-1:-1:-1;;;;;1151:6:2;1079:85;:::o;824:65:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;942:38::-;;;;;;;;;;;;;;;:::o;2933:195::-;3042:20;;:::i;:::-;-1:-1:-1;;;;;;3085:23:6;;;;;;;:9;:23;;;;;;;;:36;;;;;;;;;;;;;3078:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2933:195::o;2005:240:2:-;1302:12;:10;:12::i;:::-;-1:-1:-1;;;;;1291:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1291:23:2;;1283:68;;;;;-1:-1:-1;;;1283:68:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1283:68:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;2093:22:2;::::1;2085:73;;;;-1:-1:-1::0;;;2085:73:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2194:6;::::0;;2173:38:::1;::::0;-1:-1:-1;;;;;2173:38:2;;::::1;::::0;2194:6;::::1;::::0;2173:38:::1;::::0;::::1;2221:6;:17:::0;;-1:-1:-1;;;;;;2221:17:2::1;-1:-1:-1::0;;;;;2221:17:2;;;::::1;::::0;;;::::1;::::0;;2005:240::o;598:104:0:-;685:10;598:104;:::o;2690:175:5:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:5:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:138:7:-;84:20;;113:33;84:20;113:33;:::i;:::-;65:87;;;:::o;157:916::-;;270:3;263:4;255:6;251:17;247:27;237:2;;292:5;285;278:20;237:2;332:6;319:20;358:4;381:18;418:2;414;411:10;408:2;;;424:9;408:2;462;458;454:11;494:2;488:9;545:2;540;532:6;528:15;524:24;598:6;586:10;583:22;578:2;566:10;563:18;560:46;557:2;;;609:9;557:2;636;629:22;686:18;;;720:15;;;;-1:-1:-1;755:15:7;;;789;;;785:24;;782:33;-1:-1:-1;779:2:7;;;832:5;825;818:20;779:2;858:5;849:14;;872:171;886:2;883:1;880:9;872:171;;;943:25;964:3;943:25;:::i;:::-;931:38;;989:12;;;;904:1;897:9;;;;;1021:12;;872:171;;;-1:-1:-1;1061:6:7;227:846;-1:-1:-1;;;;;;;227:846:7:o;1078:259::-;;1190:2;1178:9;1169:7;1165:23;1161:32;1158:2;;;1211:6;1203;1196:22;1158:2;1255:9;1242:23;1274:33;1301:5;1274:33;:::i;1342:402::-;;;1471:2;1459:9;1450:7;1446:23;1442:32;1439:2;;;1492:6;1484;1477:22;1439:2;1536:9;1523:23;1555:33;1582:5;1555:33;:::i;:::-;1607:5;-1:-1:-1;1664:2:7;1649:18;;1636:32;1677:35;1636:32;1677:35;:::i;:::-;1731:7;1721:17;;;1429:315;;;;;:::o;1749:478::-;;;;1903:2;1891:9;1882:7;1878:23;1874:32;1871:2;;;1924:6;1916;1909:22;1871:2;1968:9;1955:23;1987:33;2014:5;1987:33;:::i;:::-;2039:5;-1:-1:-1;2091:2:7;2076:18;;2063:32;;-1:-1:-1;2147:2:7;2132:18;;2119:32;2160:35;2119:32;2160:35;:::i;:::-;2214:7;2204:17;;;1861:366;;;;;:::o;2232:637::-;;;2411:2;2399:9;2390:7;2386:23;2382:32;2379:2;;;2432:6;2424;2417:22;2379:2;2477:9;2464:23;2506:18;2547:2;2539:6;2536:14;2533:2;;;2568:6;2560;2553:22;2533:2;2596:67;2655:7;2646:6;2635:9;2631:22;2596:67;:::i;:::-;2586:77;;2716:2;2705:9;2701:18;2688:32;2672:48;;2745:2;2735:8;2732:16;2729:2;;;2766:6;2758;2751:22;2729:2;;2794:69;2855:7;2844:8;2833:9;2829:24;2794:69;:::i;:::-;2784:79;;;2369:500;;;;;:::o;2874:297::-;;2994:2;2982:9;2973:7;2969:23;2965:32;2962:2;;;3015:6;3007;3000:22;2962:2;3052:9;3046:16;3105:5;3098:13;3091:21;3084:5;3081:32;3071:2;;3132:6;3124;3117:22;3176:258;;;3305:2;3293:9;3284:7;3280:23;3276:32;3273:2;;;3326:6;3318;3311:22;3273:2;-1:-1:-1;;3354:23:7;;;3424:2;3409:18;;;3396:32;;-1:-1:-1;3263:171:7:o;3439:203::-;-1:-1:-1;;;;;3603:32:7;;;;3585:51;;3573:2;3558:18;;3540:102::o;3647:282::-;-1:-1:-1;;;;;3847:32:7;;;;3829:51;;3911:2;3896:18;;3889:34;3817:2;3802:18;;3784:145::o;4213:187::-;4378:14;;4371:22;4353:41;;4341:2;4326:18;;4308:92::o;4405:346::-;4607:2;4589:21;;;4646:2;4626:18;;;4619:30;-1:-1:-1;;;4680:2:7;4665:18;;4658:52;4742:2;4727:18;;4579:172::o;4756:345::-;4958:2;4940:21;;;4997:2;4977:18;;;4970:30;-1:-1:-1;;;5031:2:7;5016:18;;5009:51;5092:2;5077:18;;4930:171::o;5106:360::-;5320:13;;5302:32;;5390:4;5378:17;;;5372:24;5350:20;;;5343:54;5453:4;5441:17;;;5435:24;5413:20;;;5406:54;;;;5290:2;5275:18;;5257:209::o;5471:177::-;5617:25;;;5605:2;5590:18;;5572:76::o;5653:248::-;5827:25;;;5883:2;5868:18;;5861:34;5815:2;5800:18;;5782:119::o;5906:319::-;6108:25;;;6164:2;6149:18;;6142:34;;;;6207:2;6192:18;;6185:34;6096:2;6081:18;;6063:162::o;6230:133::-;-1:-1:-1;;;;;6307:31:7;;6297:42;;6287:2;;6353:1;6350;6343:12;6287:2;6277:86;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "888600",
								"executionCost": "104199",
								"totalCost": "992799"
							},
							"external": {
								"": "1551",
								"AMOUNT_NATIVE_TOKEN()": "1139",
								"AMOUNT_TOKEN()": "1095",
								"balanceOf()": "275",
								"claim(address,address)": "infinite",
								"getUserInfo(address,address)": "infinite",
								"handleForfeitedBalance(address,uint256,address)": "infinite",
								"modifyTokenWhiteList(address[],address[])": "infinite",
								"modifyWhiteList(address[],address[])": "infinite",
								"owner()": "1092",
								"pause()": "infinite",
								"paused()": "1146",
								"renounceOwnership()": "infinite",
								"setLimit(uint256,uint256)": "infinite",
								"tokens(address)": "1324",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"userInfos(address,address)": "infinite",
								"whiteList(address)": "1348"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 309,
									"end": 3736,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 294,
									"end": 299,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 299,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 273,
									"end": 299,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 273,
									"end": 299,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 273,
									"end": 299,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 273,
									"end": 299,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1016,
									"end": 1026,
									"name": "PUSH",
									"source": 6,
									"value": "3635C9ADC5DEA00000"
								},
								{
									"begin": 986,
									"end": 1026,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 986,
									"end": 1026,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1069,
									"end": 1076,
									"name": "PUSH",
									"source": 6,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 1032,
									"end": 1076,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1032,
									"end": 1076,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 878,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 898,
									"end": 910,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 898,
									"end": 908,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 898,
									"end": 910,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 898,
									"end": 910,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 898,
									"end": 910,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 920,
									"end": 926,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 938,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 920,
									"end": 938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 920,
									"end": 938,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 953,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 953,
									"end": 996,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 920,
									"end": 938,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 920,
									"end": 938,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 953,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 953,
									"end": 996,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 920,
									"end": 926,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 920,
									"end": 926,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 953,
									"end": 996,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1645,
									"end": 1646,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1750,
									"end": 1772,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1750,
									"end": 1772,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 3736,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e28a444b17123294041616ccc89088a092bcd2ec52b73b289fd5d5c10cdef2b364736f6c63430007060033",
									".code": [
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "C9B5279C"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "E4860339"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "F2801FE7"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "722713F7"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "8174E972"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "8456CB59"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "3F4BA83A"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "3F4BA83A"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F5B60"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "51B32E8B"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "5C975ABB"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "602F86F8"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "207ADD91"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "21C0B342"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "2ADB5F4E"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "372C12B1"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "41D0978DB23C08AE0F5D1E376087F27D92B1A65D7CF5A613EC7D8A8B977E4ED0"
										},
										{
											"begin": 3187,
											"end": 3196,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3213,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3214,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3736,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1982,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1123,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1123,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1123,
											"end": 1982,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1123,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1123,
											"end": 1982,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1123,
											"end": 1982,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1123,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1123,
											"end": 1982,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 895,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 872,
											"end": 998,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 666,
											"end": 790,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 666,
											"end": 790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 666,
											"end": 790,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 666,
											"end": 790,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 666,
											"end": 790,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 666,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 666,
											"end": 790,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 666,
											"end": 790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 790,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 666,
											"end": 790,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 666,
											"end": 790,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 666,
											"end": 790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 666,
											"end": 790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 666,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 666,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 666,
											"end": 790,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 824,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 942,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2843,
											"end": 2872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2872,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2882,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2926,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1123,
											"end": 1982,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1123,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2288,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2288,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2261,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2399,
											"end": 2406,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2399,
											"end": 2417,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 426,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 432,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 426,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 426,
											"end": 432,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 426,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 426,
											"end": 432,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 425,
											"end": 432,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 417,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 417,
											"end": 433,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 417,
											"end": 433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 433,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 433,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 417,
											"end": 433,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 417,
											"end": 433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 763,
											"end": 773,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 753,
											"end": 774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 753,
											"end": 774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 753,
											"end": 774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 753,
											"end": 762,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 753,
											"end": 774,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 753,
											"end": 774,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 753,
											"end": 774,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 753,
											"end": 774,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 753,
											"end": 774,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 753,
											"end": 774,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 745,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 745,
											"end": 800,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 745,
											"end": 800,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 800,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 745,
											"end": 800,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 745,
											"end": 800,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 745,
											"end": 800,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 745,
											"end": 800,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 745,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 745,
											"end": 800,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 745,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 745,
											"end": 800,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 745,
											"end": 800,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 745,
											"end": 800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 745,
											"end": 800,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 800,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 745,
											"end": 800,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 745,
											"end": 800,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 745,
											"end": 800,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 745,
											"end": 800,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 745,
											"end": 800,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 745,
											"end": 800,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 745,
											"end": 800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1296,
											"end": 1317,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1288,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1288,
											"end": 1344,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1288,
											"end": 1344,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1344,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1288,
											"end": 1344,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1288,
											"end": 1344,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1288,
											"end": 1344,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1288,
											"end": 1344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1288,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1288,
											"end": 1344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1288,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1288,
											"end": 1344,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1288,
											"end": 1344,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1288,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1386,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1374,
											"end": 1386,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1399,
											"end": 1426,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1399,
											"end": 1426,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1396,
											"end": 1484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1484,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1396,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1493,
											"end": 1518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1530,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1559,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1559,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1559,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1559,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1559,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1559,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1559,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1589,
											"end": 1604,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1586,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1586,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1604,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1661,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1661,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1639,
											"end": 1676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1675,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1639,
											"end": 1676,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1639,
											"end": 1676,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1639,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1614,
											"end": 1676,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1614,
											"end": 1676,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1707,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1686,
											"end": 1707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1707,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1719,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1719,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1732,
											"end": 1759,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1732,
											"end": 1759,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1729,
											"end": 1912,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1775,
											"end": 1805,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1805,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "PUSH",
											"source": 6,
											"value": "8FC"
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1815,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1815,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1805,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1729,
											"end": 1912,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1912,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1729,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1846,
											"end": 1876,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1876,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1876,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1846,
											"end": 1876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1889,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1900,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1900,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1912,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1729,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "PUSH",
											"source": 6,
											"value": "987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A"
										},
										{
											"begin": 1948,
											"end": 1957,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 1974,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1975,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2572,
											"end": 2594,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2594,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1982,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2228,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2118,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2153,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2160,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2160,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2228,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2118,
											"end": 2228,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2217,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2202,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2208,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2185,
											"end": 2210,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2210,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2210,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2210,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2210,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2217,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2217,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2185,
											"end": 2217,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2217,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2217,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2217,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2217,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2217,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2217,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2217,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2162,
											"end": 2169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2118,
											"end": 2228,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2228,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2118,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2242,
											"end": 2255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2356,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2237,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2276,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2257,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2257,
											"end": 2283,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2356,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2237,
											"end": 2356,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2340,
											"end": 2345,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2317,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2329,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2335,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2345,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2345,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2308,
											"end": 2345,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2345,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2345,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2345,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2345,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2345,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2345,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2345,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2285,
											"end": 2292,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2237,
											"end": 2356,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2356,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2237,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2362,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 895,
											"end": 936,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 895,
											"end": 936,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 930,
											"end": 934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 574,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 568,
											"end": 574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 568,
											"end": 574,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 560,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 560,
											"end": 575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 560,
											"end": 575,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 560,
											"end": 575,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 951,
											"end": 956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 956,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 942,
											"end": 956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 942,
											"end": 956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 942,
											"end": 956,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 942,
											"end": 956,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 967,
											"end": 976,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 976,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 967,
											"end": 976,
											"name": "PUSH",
											"source": 3,
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 967,
											"end": 976,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 951,
											"end": 956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 967,
											"end": 976,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 989,
											"end": 993,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3602,
											"end": 3627,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 3627,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3598,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3598,
											"end": 3679,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3650,
											"end": 3661,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3661,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "PUSH",
											"source": 6,
											"value": "8FC"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3667,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3667,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3667,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3661,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3643,
											"end": 3668,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3598,
											"end": 3679,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3598,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3688,
											"end": 3716,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3716,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3716,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 3688,
											"end": 3716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3719,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3726,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3734,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2368,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2508,
											"end": 2521,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2610,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2503,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2538,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2545,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2523,
											"end": 2545,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2610,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2503,
											"end": 2610,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2599,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2570,
											"end": 2576,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2584,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2590,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2599,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2599,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2599,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2599,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2599,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2599,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2599,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2599,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2599,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2599,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2547,
											"end": 2554,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2503,
											"end": 2610,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2610,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2503,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2735,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2619,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2665,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2644,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2665,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2735,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2619,
											"end": 2735,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2696,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2690,
											"end": 2716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2708,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2709,
											"end": 2714,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2690,
											"end": 2716,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2716,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2716,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2716,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2716,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2716,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2716,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2716,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2716,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2716,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2724,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2724,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2690,
											"end": 2724,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2724,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2724,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2724,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2724,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2667,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2619,
											"end": 2735,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 273,
											"end": 299,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 273,
											"end": 299,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1076,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1820,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1780,
											"end": 1820,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1820,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1780,
											"end": 1820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1818,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1820,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1856,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3355,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3355,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3362,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1026,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 666,
											"end": 790,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 666,
											"end": 790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 426,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 432,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 426,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 426,
											"end": 432,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 426,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 426,
											"end": 432,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 425,
											"end": 432,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 417,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 417,
											"end": 433,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 417,
											"end": 433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 433,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 433,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 417,
											"end": 433,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 417,
											"end": 433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 737,
											"end": 743,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 750,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 737,
											"end": 750,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 737,
											"end": 750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 737,
											"end": 750,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 737,
											"end": 750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 737,
											"end": 750,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 761,
											"end": 768,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 768,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 761,
											"end": 768,
											"name": "PUSH",
											"source": 3,
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 761,
											"end": 768,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 737,
											"end": 743,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 761,
											"end": 768,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 781,
											"end": 785,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 666,
											"end": 790,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 666,
											"end": 790,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1164,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 824,
											"end": 889,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 942,
											"end": 980,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 942,
											"end": 980,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3042,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3042,
											"end": 3062,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3042,
											"end": 3062,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3042,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3085,
											"end": 3108,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3108,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3108,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3085,
											"end": 3108,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3108,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3108,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3108,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3108,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3108,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3128,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 1283,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2093,
											"end": 2115,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH data",
											"source": 2,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 2085,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2245,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "207"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 152,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 14,
											"end": 152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 113,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 113,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 113,
											"end": 146,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 113,
											"end": 146,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 113,
											"end": 146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 65,
											"end": 152,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 65,
											"end": 152,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 65,
											"end": 152,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 65,
											"end": 152,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 157,
											"end": 1073,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 157,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 157,
											"end": 1073,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 263,
											"end": 267,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 255,
											"end": 261,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 251,
											"end": 268,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 247,
											"end": 274,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 237,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 237,
											"end": 239,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 292,
											"end": 297,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 285,
											"end": 290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 278,
											"end": 298,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 237,
											"end": 239,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 237,
											"end": 239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 332,
											"end": 338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 319,
											"end": 339,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 362,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 381,
											"end": 399,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 418,
											"end": 420,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 414,
											"end": 416,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 411,
											"end": 421,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 408,
											"end": 410,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 408,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 408,
											"end": 410,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 424,
											"end": 433,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 408,
											"end": 410,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 408,
											"end": 410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 462,
											"end": 464,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 458,
											"end": 460,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 454,
											"end": 465,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 494,
											"end": 496,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 497,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 545,
											"end": 547,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 540,
											"end": 542,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 528,
											"end": 543,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 524,
											"end": 548,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 604,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 586,
											"end": 596,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 583,
											"end": 605,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 578,
											"end": 580,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 566,
											"end": 576,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 563,
											"end": 581,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 560,
											"end": 606,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 557,
											"end": 559,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 557,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 557,
											"end": 559,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 609,
											"end": 618,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 557,
											"end": 559,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 557,
											"end": 559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 636,
											"end": 638,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 651,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 686,
											"end": 704,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 686,
											"end": 704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 686,
											"end": 704,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 720,
											"end": 735,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 720,
											"end": 735,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 720,
											"end": 735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 720,
											"end": 735,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 755,
											"end": 770,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 755,
											"end": 770,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 755,
											"end": 770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 789,
											"end": 804,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 789,
											"end": 804,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 789,
											"end": 804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 785,
											"end": 809,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 785,
											"end": 809,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 782,
											"end": 815,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 779,
											"end": 781,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 779,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 779,
											"end": 781,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 832,
											"end": 837,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 825,
											"end": 830,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 818,
											"end": 838,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 779,
											"end": 781,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 779,
											"end": 781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 858,
											"end": 863,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 849,
											"end": 863,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 849,
											"end": 863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 872,
											"end": 1043,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 872,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 886,
											"end": 888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 883,
											"end": 884,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 880,
											"end": 889,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 872,
											"end": 1043,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 872,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 872,
											"end": 1043,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 943,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 964,
											"end": 967,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 943,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 943,
											"end": 968,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 943,
											"end": 968,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 943,
											"end": 968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 931,
											"end": 969,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 931,
											"end": 969,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 989,
											"end": 1001,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 989,
											"end": 1001,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 989,
											"end": 1001,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 989,
											"end": 1001,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 904,
											"end": 905,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 897,
											"end": 906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 897,
											"end": 906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 897,
											"end": 906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 897,
											"end": 906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 897,
											"end": 906,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1033,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 872,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 872,
											"end": 1043,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 872,
											"end": 1043,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 872,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1061,
											"end": 1067,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 227,
											"end": 1073,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 227,
											"end": 1073,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1337,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1078,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1337,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1192,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1178,
											"end": 1187,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1176,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1188,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1193,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1160,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 1158,
											"end": 1160,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1209,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1218,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1160,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 1158,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 1264,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1265,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1301,
											"end": 1306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1274,
											"end": 1307,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1342,
											"end": 1744,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1342,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1744,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1473,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 1468,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1446,
											"end": 1469,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1474,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1441,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 1439,
											"end": 1441,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1477,
											"end": 1499,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1441,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 1439,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1546,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1555,
											"end": 1588,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1555,
											"end": 1588,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1555,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1612,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1664,
											"end": 1666,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1667,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1667,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1668,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1636,
											"end": 1668,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1677,
											"end": 1712,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1677,
											"end": 1712,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1677,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1738,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1721,
											"end": 1738,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1721,
											"end": 1738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1721,
											"end": 1738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1744,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1744,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1744,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1749,
											"end": 2227,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1749,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1749,
											"end": 2227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 2227,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1749,
											"end": 2227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1905,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1891,
											"end": 1900,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1889,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1878,
											"end": 1901,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1906,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1916,
											"end": 1922,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1909,
											"end": 1931,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 1977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1955,
											"end": 1978,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1987,
											"end": 2020,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1987,
											"end": 2020,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1987,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2044,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2091,
											"end": 2093,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2094,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2094,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2147,
											"end": 2149,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2132,
											"end": 2150,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2151,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2119,
											"end": 2151,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2160,
											"end": 2195,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2160,
											"end": 2195,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2160,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2214,
											"end": 2221,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2204,
											"end": 2221,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2204,
											"end": 2221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2204,
											"end": 2221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 2227,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 2227,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 2227,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 2227,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 2227,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 2227,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2232,
											"end": 2869,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2232,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2869,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2869,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2413,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2399,
											"end": 2408,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2397,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2382,
											"end": 2414,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2381,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2379,
											"end": 2381,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2439,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2381,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2379,
											"end": 2381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2477,
											"end": 2486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2464,
											"end": 2487,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2524,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 2545,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2550,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2533,
											"end": 2535,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2533,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2533,
											"end": 2535,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2575,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2533,
											"end": 2535,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2533,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2655,
											"end": 2662,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2646,
											"end": 2652,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2635,
											"end": 2644,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2596,
											"end": 2663,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 2663,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2596,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2663,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2716,
											"end": 2718,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2714,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2720,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2720,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2745,
											"end": 2747,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2732,
											"end": 2748,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2731,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2729,
											"end": 2731,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2772,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2773,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2731,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2729,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2852,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2833,
											"end": 2842,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2853,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 2863,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 2863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 2863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2869,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2874,
											"end": 3171,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2874,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 2996,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2982,
											"end": 2991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2973,
											"end": 2980,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2992,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2997,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2964,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2962,
											"end": 2964,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3021,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3022,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2964,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2962,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3061,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3062,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3110,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3111,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3091,
											"end": 3112,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3113,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3071,
											"end": 3073,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3138,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3139,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3434,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3176,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3434,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3307,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3291,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3303,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3308,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3273,
											"end": 3275,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3273,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3273,
											"end": 3275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3332,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3333,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3273,
											"end": 3275,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3273,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3354,
											"end": 3377,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3354,
											"end": 3377,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3354,
											"end": 3377,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3424,
											"end": 3426,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3263,
											"end": 3434,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3439,
											"end": 3642,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 3439,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3603,
											"end": 3635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3603,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3603,
											"end": 3635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3603,
											"end": 3635,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3636,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3636,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3575,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3576,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3642,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3647,
											"end": 3929,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 3647,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3847,
											"end": 3879,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3847,
											"end": 3879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3847,
											"end": 3879,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3847,
											"end": 3879,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3880,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3880,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3911,
											"end": 3913,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3914,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3889,
											"end": 3923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3819,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 3820,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3929,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4213,
											"end": 4400,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 4213,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4392,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4371,
											"end": 4393,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4394,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4394,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4326,
											"end": 4344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4405,
											"end": 4751,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 4405,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4609,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4589,
											"end": 4610,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4610,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4648,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 4626,
											"end": 4644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4626,
											"end": 4644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4626,
											"end": 4644,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4619,
											"end": 4649,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F742020737570706F727465642061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4680,
											"end": 4682,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4658,
											"end": 4710,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4727,
											"end": 4745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4751,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4756,
											"end": 5101,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 4756,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4958,
											"end": 4960,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4940,
											"end": 4961,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4940,
											"end": 4961,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4940,
											"end": 4961,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 4999,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4970,
											"end": 5000,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3932B8BAB4B9329029B0B3329020B2323932B9B997"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5031,
											"end": 5033,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5009,
											"end": 5060,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5092,
											"end": 5094,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4930,
											"end": 5101,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5106,
											"end": 5466,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 5106,
											"end": 5466,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5302,
											"end": 5334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5302,
											"end": 5334,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5390,
											"end": 5394,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5378,
											"end": 5395,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5395,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5396,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5350,
											"end": 5370,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5350,
											"end": 5370,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5350,
											"end": 5370,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5343,
											"end": 5397,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5453,
											"end": 5457,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5441,
											"end": 5458,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5458,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5458,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5435,
											"end": 5459,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5460,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5290,
											"end": 5292,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5275,
											"end": 5293,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5257,
											"end": 5466,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5471,
											"end": 5648,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 5471,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5642,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5642,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5642,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5605,
											"end": 5607,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5590,
											"end": 5608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5572,
											"end": 5648,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5653,
											"end": 5901,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 5653,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5852,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5852,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5852,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5885,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5868,
											"end": 5886,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5868,
											"end": 5886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5895,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5817,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5800,
											"end": 5818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5800,
											"end": 5818,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5901,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5906,
											"end": 6225,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 5906,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6108,
											"end": 6133,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6108,
											"end": 6133,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6108,
											"end": 6133,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6166,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6142,
											"end": 6176,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6142,
											"end": 6176,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6142,
											"end": 6176,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6142,
											"end": 6176,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6209,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6185,
											"end": 6219,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6098,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6081,
											"end": 6099,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6099,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6225,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6230,
											"end": 6363,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 6230,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6338,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6297,
											"end": 6339,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6297,
											"end": 6339,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 6287,
											"end": 6289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6350,
											"end": 6351,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6355,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6289,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 6287,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6363,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6363,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
									}
								}
							}
						},
						"methodIdentifiers": {
							"AMOUNT_NATIVE_TOKEN()": "602f86f8",
							"AMOUNT_TOKEN()": "8174e972",
							"balanceOf()": "722713f7",
							"claim(address,address)": "21c0b342",
							"getUserInfo(address,address)": "f2801fe7",
							"handleForfeitedBalance(address,uint256,address)": "4e6f5b60",
							"modifyTokenWhiteList(address[],address[])": "51b32e8b",
							"modifyWhiteList(address[],address[])": "2adb5f4e",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setLimit(uint256,uint256)": "207add91",
							"tokens(address)": "e4860339",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"userInfos(address,address)": "c9b5279c",
							"whiteList(address)": "372c12b1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DepositPI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"AMOUNT_NATIVE_TOKEN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AMOUNT_TOKEN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastSend\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenFaucet.UserInfo\",\"name\":\"user\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"coinAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"handleForfeitedBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"newAddr\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"removedAddr\",\"type\":\"address[]\"}],\"name\":\"modifyTokenWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"newAddr\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"removedAddr\",\"type\":\"address[]\"}],\"name\":\"modifyWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nativeQuantity\",\"type\":\"uint256\"}],\"name\":\"setLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastSend\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claim(address,address)\":{\"details\":\"Claim Token\"},\"handleForfeitedBalance(address,uint256,address)\":{\"details\":\"Withdraw bnb from this contract (Callable by owner only)\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenFaucet.sol\":\"TokenFaucet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"IERC20.sol\":{\"keccak256\":\"0x8435e8230e900d716b4261cebc91985b70e406e6fd433e9751b46a2f0553401a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a82e9a70916b84548d3dcad593027da45cbcda310e5b07d3aa56cfa4f97628c\",\"dweb:/ipfs/Qmatc1Bx5fqGNoa9tnDFedThGaLQm69pB8Z7B85uxpacJv\"]},\"Ownable.sol\":{\"keccak256\":\"0xd5a0e0965aca034e9819f91ab430a58057fddacd69ac88c68225135dcdda2069\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3681181d3be8f722e2eeafdbd75a5fe7f6cfdbc89233e5eb25178e29e4085cd6\",\"dweb:/ipfs/Qmayb5rzCwJvZYJZarJ4gWEmYcyDTNdqqddoN88uS1AnjM\"]},\"Pausable.sol\":{\"keccak256\":\"0xa820963c4599a63e7eea294b322ea6d2aa6f1e68b4e772d75403732684f5b1e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7498ff9916a3a322d01f29bf5c44fb124efbe9e9bc2979bafcfeddee6fb29070\",\"dweb:/ipfs/QmYcV3vqbHdaQ8McCU1YFgPWT53CheWk7aau3vYxWjzxBL\"]},\"ReentrancyGuard.sol\":{\"keccak256\":\"0xb0313324f9311ec6f1b35bf7ec5431dbd6fc70959c0599e3b34937f4b4707c9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f364fbf221ef5125db8ac9d83598bcea0b7c7fa5f7e460f53c45f8b3279923ed\",\"dweb:/ipfs/QmT9G3jeN2eFkW1pojZYHhmk2pFtrH3w1wVg1UkL4eYF2g\"]},\"SafeMath.sol\":{\"keccak256\":\"0x186349419a02f096ad33a3a314500216b1d683dfff84bb58eb34a9c44adb2082\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a46c1daab5cd0e5bc4276769c07fe3674f2427866535e3139db6bcce62690e9\",\"dweb:/ipfs/QmevHusaMw5EqrmuVMpcgpif3TDatN9XUVdueYuPyVNsap\"]},\"TokenFaucet.sol\":{\"keccak256\":\"0xfc945626ea7463ab11986c68af39eeee978921b65e962df732727e3abd12428e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f46a05ed3bcedddadcc4ecd3be925bc480f4ce2b75271069d12b7c1705484e2a\",\"dweb:/ipfs/QmUcd6f2LzmcUtRihoWzFZWfuJK9LZYgvciGKvYBTqbFnr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 108,
								"contract": "TokenFaucet.sol:TokenFaucet",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 223,
								"contract": "TokenFaucet.sol:TokenFaucet",
								"label": "paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 294,
								"contract": "TokenFaucet.sol:TokenFaucet",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 736,
								"contract": "TokenFaucet.sol:TokenFaucet",
								"label": "userInfos",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)718_storage))"
							},
							{
								"astId": 740,
								"contract": "TokenFaucet.sol:TokenFaucet",
								"label": "whiteList",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 744,
								"contract": "TokenFaucet.sol:TokenFaucet",
								"label": "tokens",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 747,
								"contract": "TokenFaucet.sol:TokenFaucet",
								"label": "AMOUNT_TOKEN",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 750,
								"contract": "TokenFaucet.sol:TokenFaucet",
								"label": "AMOUNT_NATIVE_TOKEN",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)718_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => struct TokenFaucet.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)718_storage)"
							},
							"t_mapping(t_address,t_struct(UserInfo)718_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct TokenFaucet.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)718_storage"
							},
							"t_struct(UserInfo)718_storage": {
								"encoding": "inplace",
								"label": "struct TokenFaucet.UserInfo",
								"members": [
									{
										"astId": 713,
										"contract": "TokenFaucet.sol:TokenFaucet",
										"label": "totalQuantity",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 715,
										"contract": "TokenFaucet.sol:TokenFaucet",
										"label": "lastQuantity",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 717,
										"contract": "TokenFaucet.sol:TokenFaucet",
										"label": "lastSend",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "TokenFaucet.sol:14:1: Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\ncontract TokenFaucet is Ownable, Pausable, ReentrancyGuard {\n^ (Relevant source part starts here and spans across multiple lines).\nTokenFaucet.sol:110:5: The payable fallback function is defined here.\n    fallback() external payable {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 3221,
						"file": "TokenFaucet.sol",
						"message": "The payable fallback function is defined here.",
						"start": 3134
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 3736,
					"file": "TokenFaucet.sol",
					"start": 309
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Ownable.sol:26:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1003,
					"file": "Ownable.sol",
					"start": 844
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "668:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "685:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "685:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "678:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "651:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:17:0"
									},
									"scope": 22,
									"src": "598:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "773:165:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "783:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "783:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "923:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "916:15:0"
											}
										]
									},
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "759:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:14:0"
									},
									"scope": 22,
									"src": "708:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "566:374:0"
						}
					],
					"src": "33:908:0"
				},
				"id": 0
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							100
						]
					},
					"id": 101,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 25,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:1"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "277:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "276:9:1"
									},
									"scope": 100,
									"src": "231:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "388:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:17:1"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "428:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:9:1"
									},
									"scope": 100,
									"src": "369:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "675:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:35:1"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:6:1"
									},
									"scope": 100,
									"src": "657:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1028:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1043:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:32:1"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1083:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:9:1"
									},
									"scope": 100,
									"src": "1009:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1762:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1779:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:33:1"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1813:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:6:1"
									},
									"scope": 100,
									"src": "1745:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2148:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2164:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2183:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2147:51:1"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2217:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2216:6:1"
									},
									"scope": 100,
									"src": "2126:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 90,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2407:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2429:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2449:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:57:1"
									},
									"src": "2392:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 99,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2638:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2661:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2686:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:63:1"
									},
									"src": "2623:78:1"
								}
							],
							"scope": 101,
							"src": "137:2566:1"
						}
					],
					"src": "33:2670:1"
				},
				"id": 1
			},
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Context": [
							22
						],
						"Ownable": [
							210
						]
					},
					"id": 211,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 102,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 103,
							"nodeType": "ImportDirective",
							"scope": 211,
							"sourceUnit": 23,
							"src": "65:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 105,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "615:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 106,
									"nodeType": "InheritanceSpecifier",
									"src": "615:7:2"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": {
								"id": 104,
								"nodeType": "StructuredDocumentation",
								"src": "89:494:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 210,
							"linearizedBaseContracts": [
								210,
								22
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 108,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 210,
									"src": "629:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 107,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "629:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 114,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "685:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "716:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "684:57:2"
									},
									"src": "658:84:2"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "868:135:2",
										"statements": [
											{
												"assignments": [
													119
												],
												"declarations": [
													{
														"constant": false,
														"id": 119,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 135,
														"src": "878:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 118,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 122,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 120,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "898:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "898:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:32:2"
											},
											{
												"expression": {
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 123,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "920:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 124,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "929:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "920:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "920:18:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "982:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "974:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 128,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "974:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "974:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 132,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "986:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 127,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "953:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "953:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "EmitStatement",
												"src": "948:48:2"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "748:91:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 136,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "856:2:2"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "868:0:2"
									},
									"scope": 210,
									"src": "844:159:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "1134:30:2",
										"statements": [
											{
												"expression": {
													"id": 142,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 108,
													"src": "1151:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 141,
												"id": 143,
												"nodeType": "Return",
												"src": "1144:13:2"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "1009:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1093:2:2"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1125:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:9:2"
									},
									"scope": 210,
									"src": "1079:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "1273:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 149,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "1291:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1291:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 151,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "1302:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1302:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1291:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1316:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1283:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1283:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1283:68:2"
											},
											{
												"id": 157,
												"nodeType": "PlaceholderStatement",
												"src": "1361:1:2"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "1170:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 159,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1270:2:2"
									},
									"src": "1252:117:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "1765:91:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 166,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1801:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1817:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1809:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 167,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1809:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1809:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 165,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1780:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1780:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "EmitStatement",
												"src": "1775:45:2"
											},
											{
												"expression": {
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 173,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "1830:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1847:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1839:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 174,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1839:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1839:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1830:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "1830:19:2"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "1375:331:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 163,
											"modifierName": {
												"id": 162,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 159,
												"src": "1755:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1755:9:2"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:2:2"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:0:2"
									},
									"scope": 210,
									"src": "1711:145:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "2075:170:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 190,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "2093:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2113:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2105:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 191,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2105:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2105:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2093:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2117:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2085:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2085:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2085:73:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 200,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2194:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 201,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "2202:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 199,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2173:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2173:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "EmitStatement",
												"src": "2168:43:2"
											},
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 204,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2221:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 205,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "2230:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2221:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "2221:17:2"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "1862:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 187,
											"modifierName": {
												"id": 186,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 159,
												"src": "2065:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2065:9:2"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2032:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:18:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2075:0:2"
									},
									"scope": 210,
									"src": "2005:240:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 211,
							"src": "586:1665:2"
						}
					],
					"src": "33:2219:2"
				},
				"id": 2
			},
			"Pausable.sol": {
				"ast": {
					"absolutePath": "Pausable.sol",
					"exportedSymbols": {
						"Context": [
							22
						],
						"Ownable": [
							210
						],
						"Pausable": [
							283
						]
					},
					"id": 284,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 212,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 213,
							"nodeType": "ImportDirective",
							"scope": 284,
							"sourceUnit": 211,
							"src": "65:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 215,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 210,
										"src": "224:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$210",
											"typeString": "contract Ownable"
										}
									},
									"id": 216,
									"nodeType": "InheritanceSpecifier",
									"src": "224:7:3"
								}
							],
							"contractDependencies": [
								22,
								210
							],
							"contractKind": "contract",
							"documentation": {
								"id": 214,
								"nodeType": "StructuredDocumentation",
								"src": "90:112:3",
								"text": " @title Pausable\n @dev Base contract which allows children to implement an emergency stop mechanism."
							},
							"fullyImplemented": true,
							"id": 283,
							"linearizedBaseContracts": [
								283,
								210,
								22
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 218,
									"name": "Pause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "247:2:3"
									},
									"src": "236:14:3"
								},
								{
									"anonymous": false,
									"id": 220,
									"name": "Unpause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "266:2:3"
									},
									"src": "253:16:3"
								},
								{
									"constant": false,
									"functionSelector": "5c975abb",
									"id": 223,
									"mutability": "mutable",
									"name": "paused",
									"nodeType": "VariableDeclaration",
									"scope": 283,
									"src": "273:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 221,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "273:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 222,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "294:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "411:34:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "425:7:3",
															"subExpression": {
																"id": 227,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "426:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "417:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "417:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "417:16:3"
											},
											{
												"id": 231,
												"nodeType": "PlaceholderStatement",
												"src": "439:1:3"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "305:78:3",
										"text": " @dev modifier to allow actions only when the contract IS paused"
									},
									"id": 233,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:2:3"
									},
									"src": "386:59:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "554:33:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 237,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "568:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "560:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "560:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "560:15:3"
											},
											{
												"id": 240,
												"nodeType": "PlaceholderStatement",
												"src": "581:1:3"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "449:82:3",
										"text": " @dev modifier to allow actions only when the contract IS NOT paused"
									},
									"id": 242,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:0:3"
									},
									"src": "534:53:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "731:59:3",
										"statements": [
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 252,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "737:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "746:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "737:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "737:13:3"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 256,
														"name": "Pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "761:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "761:7:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "EmitStatement",
												"src": "756:12:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "781:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 251,
												"id": 260,
												"nodeType": "Return",
												"src": "774:11:3"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "591:72:3",
										"text": " @dev called by the owner to pause, triggers stopped state"
									},
									"functionSelector": "8456cb59",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 246,
											"modifierName": {
												"id": 245,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 159,
												"src": "692:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "692:9:3"
										},
										{
											"id": 248,
											"modifierName": {
												"id": 247,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 233,
												"src": "702:13:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "702:13:3"
										}
									],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "680:2:3"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "725:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "725:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:6:3"
									},
									"scope": 283,
									"src": "666:124:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "936:62:3",
										"statements": [
											{
												"expression": {
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 272,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "942:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "951:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "942:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "942:14:3"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 276,
														"name": "Unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "967:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "967:9:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 278,
												"nodeType": "EmitStatement",
												"src": "962:14:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "989:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 271,
												"id": 280,
												"nodeType": "Return",
												"src": "982:11:3"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "794:75:3",
										"text": " @dev called by the owner to unpause, returns to normal state"
									},
									"functionSelector": "3f4ba83a",
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 266,
											"modifierName": {
												"id": 265,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 159,
												"src": "900:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "900:9:3"
										},
										{
											"id": 268,
											"modifierName": {
												"id": 267,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 242,
												"src": "910:10:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "910:10:3"
										}
									],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:2:3"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "930:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "930:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:6:3"
									},
									"scope": 283,
									"src": "872:126:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 284,
							"src": "203:797:3"
						}
					],
					"src": "33:967:3"
				},
				"id": 3
			},
			"ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							323
						]
					},
					"id": 324,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 285,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 286,
								"nodeType": "StructuredDocumentation",
								"src": "66:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 323,
							"linearizedBaseContracts": [
								323
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 289,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 323,
									"src": "1605:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 287,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1605:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 288,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1645:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 292,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 323,
									"src": "1652:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 290,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1652:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 291,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1688:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 294,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"scope": 323,
									"src": "1696:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 293,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1696:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "1740:39:4",
										"statements": [
											{
												"expression": {
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 297,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "1750:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 298,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "1760:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1750:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "1750:22:4"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:2:4"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1740:0:4"
									},
									"scope": 323,
									"src": "1726:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "2180:421:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 306,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "2269:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 307,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "2280:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2269:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2290:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2261:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "2261:63:4"
											},
											{
												"expression": {
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 312,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "2399:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 313,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "2409:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2399:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "2399:18:4"
											},
											{
												"id": 316,
												"nodeType": "PlaceholderStatement",
												"src": "2428:1:4"
											},
											{
												"expression": {
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 317,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "2572:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 318,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "2582:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2572:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "2572:22:4"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "1785:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 322,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2177:2:4"
									},
									"src": "2156:445:4",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 324,
							"src": "817:1786:4"
						}
					],
					"src": "33:2570:4"
				},
				"id": 4
			},
			"SafeMath.sol": {
				"ast": {
					"absolutePath": "SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							678
						]
					},
					"id": 679,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 325,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 326,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 678,
							"linearizedBaseContracts": [
								678
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "865:98:5",
										"statements": [
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 356,
														"src": "875:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 340,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "887:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 341,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "891:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "906:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 345,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "910:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "902:28:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 349,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 337,
													"id": 350,
													"nodeType": "Return",
													"src": "913:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 353,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "954:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 354,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 337,
												"id": 355,
												"nodeType": "Return",
												"src": "940:16:5"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "805:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "816:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:22:5"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "850:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 333,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "856:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:15:5"
									},
									"scope": 678,
									"src": "789:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "1185:75:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 369,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "1199:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 370,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "1203:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 376,
												"nodeType": "IfStatement",
												"src": "1195:28:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 374,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 368,
													"id": 375,
													"nodeType": "Return",
													"src": "1206:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 378,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "1247:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 379,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "1251:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 381,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 368,
												"id": 382,
												"nodeType": "Return",
												"src": "1233:20:5"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:5",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1125:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1136:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:22:5"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1170:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1176:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:15:5"
									},
									"scope": 678,
									"src": "1109:151:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1484:359:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 396,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1716:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 403,
												"nodeType": "IfStatement",
												"src": "1712:28:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 401,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 395,
													"id": 402,
													"nodeType": "Return",
													"src": "1724:16:5"
												}
											},
											{
												"assignments": [
													405
												],
												"declarations": [
													{
														"constant": false,
														"id": 405,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 424,
														"src": "1750:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 404,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 409,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 406,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1762:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 407,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1766:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 410,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1781:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 411,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "1785:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 413,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1790:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 419,
												"nodeType": "IfStatement",
												"src": "1777:33:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 417,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 395,
													"id": 418,
													"nodeType": "Return",
													"src": "1793:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 421,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1834:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 422,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 395,
												"id": 423,
												"nodeType": "Return",
												"src": "1820:16:5"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1424:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1435:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:22:5"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1469:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1475:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:15:5"
									},
									"scope": 678,
									"src": "1408:435:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "2068:76:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "2082:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 444,
												"nodeType": "IfStatement",
												"src": "2078:29:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 442,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 436,
													"id": 443,
													"nodeType": "Return",
													"src": "2090:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 446,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "2131:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 447,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "2135:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 449,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 436,
												"id": 450,
												"nodeType": "Return",
												"src": "2117:20:5"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2019:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:22:5"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2053:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2059:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:15:5"
									},
									"scope": 678,
									"src": "1992:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "2379:76:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "2393:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 471,
												"nodeType": "IfStatement",
												"src": "2389:29:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 469,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 463,
													"id": 470,
													"nodeType": "Return",
													"src": "2401:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 473,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "2442:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 474,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "2446:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 476,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 463,
												"id": 477,
												"nodeType": "Return",
												"src": "2428:20:5"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "2319:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "2330:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:22:5"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "2364:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "2370:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:15:5"
									},
									"scope": 678,
									"src": "2303:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "2757:108:5",
										"statements": [
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 504,
														"src": "2767:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 489,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 494,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 491,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "2779:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 492,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "2783:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 496,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "2802:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 497,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "2807:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2794:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:5"
											},
											{
												"expression": {
													"id": 502,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 490,
													"src": "2857:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 488,
												"id": 503,
												"nodeType": "Return",
												"src": "2850:8:5"
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "2703:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "2714:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:22:5"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "2748:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2747:9:5"
									},
									"scope": 678,
									"src": "2690:175:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "3203:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 516,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "3221:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 517,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "3226:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3213:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 522,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "3279:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 523,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "3283:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 514,
												"id": 525,
												"nodeType": "Return",
												"src": "3272:12:5"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3149:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3160:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:22:5"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3194:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:9:5"
									},
									"scope": 678,
									"src": "3136:155:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "3605:148:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 537,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "3619:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 542,
												"nodeType": "IfStatement",
												"src": "3615:20:5",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 536,
													"id": 541,
													"nodeType": "Return",
													"src": "3627:8:5"
												}
											},
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "3645:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 545,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "3657:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 546,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "3661:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 550,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "3680:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 551,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "3684:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 553,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "3689:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3672:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:5"
											},
											{
												"expression": {
													"id": 558,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 544,
													"src": "3745:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 536,
												"id": 559,
												"nodeType": "Return",
												"src": "3738:8:5"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "3551:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "3562:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:22:5"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "3596:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:9:5"
									},
									"scope": 678,
									"src": "3538:215:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "4284:83:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 572,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "4302:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4294:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "4355:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 579,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "4359:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 570,
												"id": 581,
												"nodeType": "Return",
												"src": "4348:12:5"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4230:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4241:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:22:5"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4275:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4274:9:5"
									},
									"scope": 678,
									"src": "4217:150:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "4887:81:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 594,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "4905:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4897:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "4956:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 601,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "4960:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 592,
												"id": 603,
												"nodeType": "Return",
												"src": "4949:12:5"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "4833:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "4844:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4832:22:5"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "4878:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4877:9:5"
									},
									"scope": 678,
									"src": "4820:148:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "5527:68:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 618,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "5545:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 619,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "5550:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 621,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5553:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5537:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 624,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "5583:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 625,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "5587:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 616,
												"id": 627,
												"nodeType": "Return",
												"src": "5576:12:5"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "5445:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "5456:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "5467:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 611,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5444:50:5"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "5518:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5517:9:5"
									},
									"scope": 678,
									"src": "5432:163:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "6347:67:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 642,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "6365:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 645,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "6372:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6357:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 648,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "6402:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 649,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "6406:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 640,
												"id": 651,
												"nodeType": "Return",
												"src": "6395:12:5"
											}
										]
									},
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6265:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6276:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6287:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 635,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6264:50:5"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6338:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:9:5"
									},
									"scope": 678,
									"src": "6252:162:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "7155:67:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 666,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "7173:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 669,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "7180:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 665,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7165:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 672,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "7210:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 673,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "7214:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 664,
												"id": 675,
												"nodeType": "Return",
												"src": "7203:12:5"
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "7073:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "7084:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "7095:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 659,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7072:50:5"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "7146:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7145:9:5"
									},
									"scope": 678,
									"src": "7060:162:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 679,
							"src": "630:6594:5"
						}
					],
					"src": "33:7191:5"
				},
				"id": 5
			},
			"TokenFaucet.sol": {
				"ast": {
					"absolutePath": "TokenFaucet.sol",
					"exportedSymbols": {
						"Context": [
							22
						],
						"IERC20": [
							100
						],
						"Ownable": [
							210
						],
						"Pausable": [
							283
						],
						"ReentrancyGuard": [
							323
						],
						"SafeMath": [
							678
						],
						"TokenFaucet": [
							1051
						]
					},
					"id": 1052,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 680,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "77:32:6"
						},
						{
							"id": 681,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "110:19:6"
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 682,
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 23,
							"src": "131:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 683,
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 211,
							"src": "155:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 684,
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 679,
							"src": "179:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 685,
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 211,
							"src": "204:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 686,
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 101,
							"src": "228:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ReentrancyGuard.sol",
							"file": "./ReentrancyGuard.sol",
							"id": 687,
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 324,
							"src": "251:31:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Pausable.sol",
							"file": "./Pausable.sol",
							"id": 688,
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 284,
							"src": "283:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 689,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 210,
										"src": "333:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$210",
											"typeString": "contract Ownable"
										}
									},
									"id": 690,
									"nodeType": "InheritanceSpecifier",
									"src": "333:7:6"
								},
								{
									"baseName": {
										"id": 691,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 283,
										"src": "342:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$283",
											"typeString": "contract Pausable"
										}
									},
									"id": 692,
									"nodeType": "InheritanceSpecifier",
									"src": "342:8:6"
								},
								{
									"baseName": {
										"id": 693,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 323,
										"src": "352:15:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$323",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 694,
									"nodeType": "InheritanceSpecifier",
									"src": "352:15:6"
								}
							],
							"contractDependencies": [
								22,
								210,
								283,
								323
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1051,
							"linearizedBaseContracts": [
								1051,
								323,
								283,
								210,
								22
							],
							"name": "TokenFaucet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 697,
									"libraryName": {
										"id": 695,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 678,
										"src": "380:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$678",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "374:27:6",
									"typeName": {
										"id": 696,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "393:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"id": 705,
									"name": "Claimed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "430:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"indexed": false,
												"mutability": "mutable",
												"name": "quantity",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "461:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "487:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:90:6"
									},
									"src": "407:104:6"
								},
								{
									"anonymous": false,
									"id": 711,
									"name": "DepositPI",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"indexed": false,
												"mutability": "mutable",
												"name": "quantity",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "542:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "568:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:59:6"
									},
									"src": "517:75:6"
								},
								{
									"canonicalName": "TokenFaucet.UserInfo",
									"id": 718,
									"members": [
										{
											"constant": false,
											"id": 713,
											"mutability": "mutable",
											"name": "totalQuantity",
											"nodeType": "VariableDeclaration",
											"scope": 718,
											"src": "624:21:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 712,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "624:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 715,
											"mutability": "mutable",
											"name": "lastQuantity",
											"nodeType": "VariableDeclaration",
											"scope": 718,
											"src": "655:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 714,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "655:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 717,
											"mutability": "mutable",
											"name": "lastSend",
											"nodeType": "VariableDeclaration",
											"scope": 718,
											"src": "685:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 716,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "685:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 1051,
									"src": "598:110:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "735:83:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 721,
																"name": "whiteList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "753:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 724,
															"indexExpression": {
																"expression": {
																	"id": 722,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "763:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "763:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "753:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "72657175697265205361666520416464726573732e",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "776:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b7bfaafacc8b958ee5991d7093d15af0d696976dbb47153aa280824a640c2f4b",
																"typeString": "literal_string \"require Safe Address.\""
															},
															"value": "require Safe Address."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b7bfaafacc8b958ee5991d7093d15af0d696976dbb47153aa280824a640c2f4b",
																"typeString": "literal_string \"require Safe Address.\""
															}
														],
														"id": 720,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "745:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "745:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "745:55:6"
											},
											{
												"id": 728,
												"nodeType": "PlaceholderStatement",
												"src": "810:1:6"
											}
										]
									},
									"id": 730,
									"name": "onlySafe",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "732:2:6"
									},
									"src": "715:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "c9b5279c",
									"id": 736,
									"mutability": "mutable",
									"name": "userInfos",
									"nodeType": "VariableDeclaration",
									"scope": 1051,
									"src": "824:65:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UserInfo_$718_storage_$_$",
										"typeString": "mapping(address => mapping(address => struct TokenFaucet.UserInfo))"
									},
									"typeName": {
										"id": 735,
										"keyType": {
											"id": 731,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "832:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "824:48:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UserInfo_$718_storage_$_$",
											"typeString": "mapping(address => mapping(address => struct TokenFaucet.UserInfo))"
										},
										"valueType": {
											"id": 734,
											"keyType": {
												"id": 732,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "851:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "843:28:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$718_storage_$",
												"typeString": "mapping(address => struct TokenFaucet.UserInfo)"
											},
											"valueType": {
												"id": 733,
												"name": "UserInfo",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 718,
												"src": "862:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$718_storage_ptr",
													"typeString": "struct TokenFaucet.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "372c12b1",
									"id": 740,
									"mutability": "mutable",
									"name": "whiteList",
									"nodeType": "VariableDeclaration",
									"scope": 1051,
									"src": "895:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 739,
										"keyType": {
											"id": 737,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "903:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "895:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 738,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "914:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e4860339",
									"id": 744,
									"mutability": "mutable",
									"name": "tokens",
									"nodeType": "VariableDeclaration",
									"scope": 1051,
									"src": "942:38:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 743,
										"keyType": {
											"id": 741,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "950:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "942:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 742,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "961:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8174e972",
									"id": 747,
									"mutability": "mutable",
									"name": "AMOUNT_TOKEN",
									"nodeType": "VariableDeclaration",
									"scope": 1051,
									"src": "986:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 745,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "986:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 746,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1016:10:6",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "602f86f8",
									"id": 750,
									"mutability": "mutable",
									"name": "AMOUNT_NATIVE_TOKEN",
									"nodeType": "VariableDeclaration",
									"scope": 1051,
									"src": "1032:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 748,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1032:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 749,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1069:7:6",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "1278:704:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 765,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "1296:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 767,
															"indexExpression": {
																"id": 766,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 753,
																"src": "1303:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1296:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742020737570706f727465642061646472657373",
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1319:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96437ddb1e617ed197aaf84edae68bf8cbbb61b00f20359a1b9b070e34b958a4",
																"typeString": "literal_string \"not  supported address\""
															},
															"value": "not  supported address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96437ddb1e617ed197aaf84edae68bf8cbbb61b00f20359a1b9b070e34b958a4",
																"typeString": "literal_string \"not  supported address\""
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1288:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1288:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "1288:56:6"
											},
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"mutability": "mutable",
														"name": "_quantity",
														"nodeType": "VariableDeclaration",
														"scope": 850,
														"src": "1354:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 771,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1354:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 774,
												"initialValue": {
													"id": 773,
													"name": "AMOUNT_TOKEN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 747,
													"src": "1374:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1354:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 775,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "1399:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1424:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1416:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 776,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1416:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1416:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1399:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 786,
												"nodeType": "IfStatement",
												"src": "1396:88:6",
												"trueBody": {
													"id": 785,
													"nodeType": "Block",
													"src": "1428:56:6",
													"statements": [
														{
															"expression": {
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 781,
																	"name": "_quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "1442:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 782,
																	"name": "AMOUNT_NATIVE_TOKEN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "1454:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1442:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 784,
															"nodeType": "ExpressionStatement",
															"src": "1442:31:6"
														}
													]
												}
											},
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "userInfo",
														"nodeType": "VariableDeclaration",
														"scope": 850,
														"src": "1493:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$718_storage_ptr",
															"typeString": "struct TokenFaucet.UserInfo"
														},
														"typeName": {
															"id": 787,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 718,
															"src": "1493:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$718_storage_ptr",
																"typeString": "struct TokenFaucet.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 794,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 789,
															"name": "userInfos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "1521:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UserInfo_$718_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct TokenFaucet.UserInfo storage ref))"
															}
														},
														"id": 791,
														"indexExpression": {
															"id": 790,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "1531:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1521:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$718_storage_$",
															"typeString": "mapping(address => struct TokenFaucet.UserInfo storage ref)"
														}
													},
													"id": 793,
													"indexExpression": {
														"id": 792,
														"name": "_userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "1546:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1521:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$718_storage",
														"typeString": "struct TokenFaucet.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1493:66:6"
											},
											{
												"expression": {
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 795,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "1569:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$718_storage_ptr",
																"typeString": "struct TokenFaucet.UserInfo storage pointer"
															}
														},
														"id": 797,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastSend",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 717,
														"src": "1569:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 798,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1589:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1589:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1569:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "1569:35:6"
											},
											{
												"expression": {
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 802,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "1614:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$718_storage_ptr",
																"typeString": "struct TokenFaucet.UserInfo storage pointer"
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalQuantity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 713,
														"src": "1614:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 808,
																"name": "_quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "1666:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 805,
																	"name": "userInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "1639:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$718_storage_ptr",
																		"typeString": "struct TokenFaucet.UserInfo storage pointer"
																	}
																},
																"id": 806,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalQuantity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 713,
																"src": "1639:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 505,
															"src": "1639:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1639:37:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1614:62:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "1614:62:6"
											},
											{
												"expression": {
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 812,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "1686:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$718_storage_ptr",
																"typeString": "struct TokenFaucet.UserInfo storage pointer"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastQuantity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 715,
														"src": "1686:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 815,
														"name": "_quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "1710:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1686:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "1686:33:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 818,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "1732:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1757:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1749:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 819,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1749:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1749:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1732:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 841,
													"nodeType": "Block",
													"src": "1832:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 837,
																		"name": "_userAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "1877:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 838,
																		"name": "_quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "1891:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 834,
																				"name": "_tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "1853:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 833,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 100,
																			"src": "1846:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1846:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$100",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 49,
																	"src": "1846:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1846:55:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 840,
															"nodeType": "ExpressionStatement",
															"src": "1846:55:6"
														}
													]
												},
												"id": 842,
												"nodeType": "IfStatement",
												"src": "1729:183:6",
												"trueBody": {
													"id": 832,
													"nodeType": "Block",
													"src": "1761:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 829,
																		"name": "_quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "1806:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 826,
																				"name": "_userAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "1783:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1775:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 824,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1775:8:6",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1775:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1775:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1775:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 831,
															"nodeType": "ExpressionStatement",
															"src": "1775:41:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 844,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "1934:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "1948:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 846,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1959:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1959:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "Claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "1926:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1926:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "EmitStatement",
												"src": "1921:54:6"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "1083:35:6",
										"text": " @dev Claim Token"
									},
									"functionSelector": "21c0b342",
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 758,
											"modifierName": {
												"id": 757,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 322,
												"src": "1222:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1222:12:6"
										},
										{
											"id": 760,
											"modifierName": {
												"id": 759,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 233,
												"src": "1243:13:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1243:13:6"
										},
										{
											"id": 762,
											"modifierName": {
												"id": 761,
												"name": "onlySafe",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 730,
												"src": "1265:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1265:8:6"
										}
									],
									"name": "claim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "1138:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "_userAddress",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "1161:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:45:6"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1278:0:6"
									},
									"scope": 1051,
									"src": "1123:859:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "2108:254:6",
										"statements": [
											{
												"body": {
													"id": 880,
													"nodeType": "Block",
													"src": "2171:57:6",
													"statements": [
														{
															"expression": {
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 872,
																		"name": "whiteList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "2185:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 876,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 873,
																			"name": "newAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 854,
																			"src": "2195:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 875,
																		"indexExpression": {
																			"id": 874,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 863,
																			"src": "2203:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2195:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2185:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2213:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2185:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 879,
															"nodeType": "ExpressionStatement",
															"src": "2185:32:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 865,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "2138:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 866,
															"name": "newAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "2146:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2146:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2138:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 881,
												"initializationExpression": {
													"assignments": [
														863
													],
													"declarations": [
														{
															"constant": false,
															"id": 863,
															"mutability": "mutable",
															"name": "index",
															"nodeType": "VariableDeclaration",
															"scope": 881,
															"src": "2123:13:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 862,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2123:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 864,
													"nodeType": "VariableDeclarationStatement",
													"src": "2123:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2162:7:6",
														"subExpression": {
															"id": 869,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "2162:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 871,
													"nodeType": "ExpressionStatement",
													"src": "2162:7:6"
												},
												"nodeType": "ForStatement",
												"src": "2118:110:6"
											},
											{
												"body": {
													"id": 900,
													"nodeType": "Block",
													"src": "2294:62:6",
													"statements": [
														{
															"expression": {
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 892,
																		"name": "whiteList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "2308:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 896,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 893,
																			"name": "removedAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "2318:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 895,
																		"indexExpression": {
																			"id": 894,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "2330:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2318:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2308:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2340:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2308:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 899,
															"nodeType": "ExpressionStatement",
															"src": "2308:37:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 885,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "2257:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 886,
															"name": "removedAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "2265:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2265:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2257:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 901,
												"initializationExpression": {
													"assignments": [
														883
													],
													"declarations": [
														{
															"constant": false,
															"id": 883,
															"mutability": "mutable",
															"name": "index",
															"nodeType": "VariableDeclaration",
															"scope": 901,
															"src": "2242:13:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 882,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2242:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 884,
													"nodeType": "VariableDeclarationStatement",
													"src": "2242:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2285:7:6",
														"subExpression": {
															"id": 889,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "2285:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 891,
													"nodeType": "ExpressionStatement",
													"src": "2285:7:6"
												},
												"nodeType": "ForStatement",
												"src": "2237:119:6"
											}
										]
									},
									"functionSelector": "2adb5f4e",
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 860,
											"modifierName": {
												"id": 859,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 159,
												"src": "2098:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2098:9:6"
										}
									],
									"name": "modifyWhiteList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "newAddr",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "2022:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 852,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2022:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 853,
													"nodeType": "ArrayTypeName",
													"src": "2022:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "removedAddr",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "2056:28:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 855,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2056:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 856,
													"nodeType": "ArrayTypeName",
													"src": "2056:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2012:78:6"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2108:0:6"
									},
									"scope": 1051,
									"src": "1988:374:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "2493:248:6",
										"statements": [
											{
												"body": {
													"id": 932,
													"nodeType": "Block",
													"src": "2556:54:6",
													"statements": [
														{
															"expression": {
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 924,
																		"name": "tokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 744,
																		"src": "2570:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 928,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 925,
																			"name": "newAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 906,
																			"src": "2577:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 927,
																		"indexExpression": {
																			"id": 926,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "2585:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2577:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2570:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2570:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 931,
															"nodeType": "ExpressionStatement",
															"src": "2570:29:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 917,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "2523:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 918,
															"name": "newAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "2531:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2531:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2523:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 933,
												"initializationExpression": {
													"assignments": [
														915
													],
													"declarations": [
														{
															"constant": false,
															"id": 915,
															"mutability": "mutable",
															"name": "index",
															"nodeType": "VariableDeclaration",
															"scope": 933,
															"src": "2508:13:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 914,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2508:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 916,
													"nodeType": "VariableDeclarationStatement",
													"src": "2508:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2547:7:6",
														"subExpression": {
															"id": 921,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "2547:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 923,
													"nodeType": "ExpressionStatement",
													"src": "2547:7:6"
												},
												"nodeType": "ForStatement",
												"src": "2503:107:6"
											},
											{
												"body": {
													"id": 952,
													"nodeType": "Block",
													"src": "2676:59:6",
													"statements": [
														{
															"expression": {
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 944,
																		"name": "tokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 744,
																		"src": "2690:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 948,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 945,
																			"name": "removedAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "2697:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 947,
																		"indexExpression": {
																			"id": 946,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 935,
																			"src": "2709:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2697:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2690:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2719:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2690:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 951,
															"nodeType": "ExpressionStatement",
															"src": "2690:34:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 937,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "2639:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 938,
															"name": "removedAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "2647:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2647:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2639:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 953,
												"initializationExpression": {
													"assignments": [
														935
													],
													"declarations": [
														{
															"constant": false,
															"id": 935,
															"mutability": "mutable",
															"name": "index",
															"nodeType": "VariableDeclaration",
															"scope": 953,
															"src": "2624:13:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 934,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2624:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 936,
													"nodeType": "VariableDeclarationStatement",
													"src": "2624:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2667:7:6",
														"subExpression": {
															"id": 941,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "2667:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 943,
													"nodeType": "ExpressionStatement",
													"src": "2667:7:6"
												},
												"nodeType": "ForStatement",
												"src": "2619:116:6"
											}
										]
									},
									"functionSelector": "51b32e8b",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 912,
											"modifierName": {
												"id": 911,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 159,
												"src": "2483:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2483:9:6"
										}
									],
									"name": "modifyTokenWhiteList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "newAddr",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "2407:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 904,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2407:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 905,
													"nodeType": "ArrayTypeName",
													"src": "2407:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "removedAddr",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "2441:28:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 907,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2441:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 908,
													"nodeType": "ArrayTypeName",
													"src": "2441:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2397:78:6"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2493:0:6"
									},
									"scope": 1051,
									"src": "2368:373:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "2833:93:6",
										"statements": [
											{
												"expression": {
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 964,
														"name": "AMOUNT_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "2843:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 965,
														"name": "_tokenQuantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "2858:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2843:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "2843:29:6"
											},
											{
												"expression": {
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 968,
														"name": "AMOUNT_NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "2882:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 969,
														"name": "_nativeQuantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "2904:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2882:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "2882:37:6"
											}
										]
									},
									"functionSelector": "207add91",
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 962,
											"modifierName": {
												"id": 961,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 159,
												"src": "2823:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2823:9:6"
										}
									],
									"name": "setLimit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "_tokenQuantity",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "2765:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "_nativeQuantity",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "2789:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2789:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2764:49:6"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2833:0:6"
									},
									"scope": 1051,
									"src": "2747:179:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "3068:60:6",
										"statements": [
											{
												"expression": {
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 982,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "3078:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$718_memory_ptr",
															"typeString": "struct TokenFaucet.UserInfo memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 983,
																"name": "userInfos",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "3085:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UserInfo_$718_storage_$_$",
																	"typeString": "mapping(address => mapping(address => struct TokenFaucet.UserInfo storage ref))"
																}
															},
															"id": 985,
															"indexExpression": {
																"id": 984,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "3095:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3085:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$718_storage_$",
																"typeString": "mapping(address => struct TokenFaucet.UserInfo storage ref)"
															}
														},
														"id": 987,
														"indexExpression": {
															"id": 986,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "3109:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3085:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$718_storage",
															"typeString": "struct TokenFaucet.UserInfo storage ref"
														}
													},
													"src": "3078:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$718_memory_ptr",
														"typeString": "struct TokenFaucet.UserInfo memory"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "3078:43:6"
											}
										]
									},
									"functionSelector": "f2801fe7",
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserInfo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2954:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2954:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "userAddress",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2976:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2976:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2953:43:6"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3042:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$718_memory_ptr",
													"typeString": "struct TokenFaucet.UserInfo"
												},
												"typeName": {
													"id": 979,
													"name": "UserInfo",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 718,
													"src": "3042:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$718_storage_ptr",
														"typeString": "struct TokenFaucet.UserInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3041:22:6"
									},
									"scope": 1051,
									"src": "2933:195:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "3162:59:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 995,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3187:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3187:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 997,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3198:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3198:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "DepositPI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "3177:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3177:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "EmitStatement",
												"src": "3172:42:6"
											}
										]
									},
									"id": 1002,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3142:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3162:0:6"
									},
									"scope": 1051,
									"src": "3134:87:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "3314:48:6",
										"statements": [
											{
												"expression": {
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1007,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "3324:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1010,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3342:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenFaucet_$1051",
																		"typeString": "contract TokenFaucet"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenFaucet_$1051",
																		"typeString": "contract TokenFaucet"
																	}
																],
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3334:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1008,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3334:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3334:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3334:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3324:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "3324:31:6"
											}
										]
									},
									"functionSelector": "722713f7",
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3245:2:6"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "3293:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3293:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3292:17:6"
									},
									"scope": 1051,
									"src": "3227:135:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "3588:146:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1028,
														"name": "coinAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "3602:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3625:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3617:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1029,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3617:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3617:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3602:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1040,
												"nodeType": "IfStatement",
												"src": "3598:81:6",
												"trueBody": {
													"id": 1039,
													"nodeType": "Block",
													"src": "3629:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1036,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "3662:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1034,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1023,
																		"src": "3650:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "3650:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3650:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 1027,
															"id": 1038,
															"nodeType": "Return",
															"src": "3643:25:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "3717:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1046,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "3721:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1042,
																	"name": "coinAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "3695:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1041,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "3688:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3688:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$100",
																"typeString": "contract IERC20"
															}
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 49,
														"src": "3688:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3688:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "3688:39:6"
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "3368:80:6",
										"text": " @dev Withdraw bnb from this contract (Callable by owner only)"
									},
									"functionSelector": "4e6f5b60",
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1026,
											"modifierName": {
												"id": 1025,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 159,
												"src": "3578:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3578:9:6"
										}
									],
									"name": "handleForfeitedBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "coinAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "3494:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3494:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "3523:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "3546:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3546:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:86:6"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3588:0:6"
									},
									"scope": 1051,
									"src": "3453:281:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1052,
							"src": "309:3427:6"
						}
					],
					"src": "77:3660:6"
				},
				"id": 6
			}
		}
	}
}