{
	"compiler": {
		"version": "0.8.15+commit.e14f2714"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_WBNBAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_pancakeRouter",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_maxZapReverseRatio",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountTokens",
						"type": "uint256"
					}
				],
				"name": "AdminTokenRecovery",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "maxZapReverseRatio",
						"type": "uint256"
					}
				],
				"name": "NewMaxZapReverseRatio",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "tokenToZap",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "lpToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenAmountIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lpTokenAmountReceived",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "ZapIn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token0ToZap",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "token1ToZap",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "lpToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "token0AmountIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "token1AmountIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lpTokenAmountReceived",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "ZapInRebalancing",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "lpToken",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "tokenToReceive",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lpTokenAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenAmountReceived",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "ZapOut",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "MAX_INT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MINIMUM_AMOUNT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "WBNB",
				"outputs": [
					{
						"internalType": "contract IWETH",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token0ToZap",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_token1ToZap",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_token0AmountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_token1AmountIn",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					}
				],
				"name": "estimateZapInRebalancingSwap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "swapAmountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "swapAmountOut",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "sellToken0",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenToZap",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountIn",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					}
				],
				"name": "estimateZapInSwap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "swapAmountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "swapAmountOut",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "swapTokenOut",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_lpTokenAmount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_tokenToReceive",
						"type": "address"
					}
				],
				"name": "estimateZapOutSwap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "swapAmountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "swapAmountOut",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "swapTokenOut",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxZapReverseRatio",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pancakeRouter",
				"outputs": [
					{
						"internalType": "contract IPancakeRouter02",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmount",
						"type": "uint256"
					}
				],
				"name": "recoverWrongTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_maxZapInverseRatio",
						"type": "uint256"
					}
				],
				"name": "updateMaxZapInverseRatio",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountOutMin",
						"type": "uint256"
					}
				],
				"name": "zapInBNB",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token1ToZap",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_token1AmountIn",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountInMax",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountOutMin",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_isToken0Sold",
						"type": "bool"
					}
				],
				"name": "zapInBNBRebalancing",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenToZap",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountIn",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountOutMin",
						"type": "uint256"
					}
				],
				"name": "zapInToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token0ToZap",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_token1ToZap",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_token0AmountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_token1AmountIn",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountInMax",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountOutMin",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_isToken0Sold",
						"type": "bool"
					}
				],
				"name": "zapInTokenRebalancing",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_lpTokenAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountOutMin",
						"type": "uint256"
					}
				],
				"name": "zapOutBNB",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_tokenToReceive",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_lpTokenAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountOutMin",
						"type": "uint256"
					}
				],
				"name": "zapOutToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"recoverWrongTokens(address,uint256)": {
					"details": "This function is only callable by owner.",
					"params": {
						"_tokenAddress": ": the address of the token to withdraw (18 decimals)",
						"_tokenAmount": ": the number of token amount to withdraw"
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"updateMaxZapInverseRatio(uint256)": {
					"details": "This function is only callable by owner.",
					"params": {
						"_maxZapInverseRatio": ": new inverse ratio"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"recoverWrongTokens(address,uint256)": {
					"notice": "It allows the owner to recover wrong tokens sent to the contract"
				},
				"updateMaxZapInverseRatio(uint256)": {
					"notice": "It allows the owner to change the risk parameter for quantities"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"PancakeZapV1.sol": "PancakeZapV1"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
			"license": "MIT",
			"urls": [
				"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
				"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
				"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
			"keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
			"license": "MIT",
			"urls": [
				"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
				"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
			"license": "MIT",
			"urls": [
				"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
				"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
			"license": "MIT",
			"urls": [
				"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
				"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"PancakeZapV1.sol": {
			"keccak256": "0xbe283ef977f7b412f75f9e54d78bc611c1b67f56bad31bd9704a6e3f8e9cdebc",
			"license": "MIT",
			"urls": [
				"bzz-raw://f20384cd256c2ef4225c44b7060b1a6110dc0116307061bd9ba27b2bfc3a0746",
				"dweb:/ipfs/QmVAsqDkQktXeKCtQ3GwG1QcjXpPkVCqicuM1Prid9meLC"
			]
		},
		"interfaces/IPancakePair.sol": {
			"keccak256": "0xb3d3ac8e3e41ff3b87b26672225c38b36be5a52008288bd6a3b83b7d68f572d6",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://3ab097e4c47e0069f2e45cce7ccbb6d731c107fd4fff2db13663425a17e52ee5",
				"dweb:/ipfs/QmNmrZbJj5YG3QrLVUNMS4VnXNBfSRwqwZ8nAEdALMFQSR"
			]
		},
		"interfaces/IPancakeRouter01.sol": {
			"keccak256": "0x2c01a280b6aaae58c4751176de3b31dd262eea0755723772a8b30fa72af3a85d",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://df343b0f163bf4dcbdd48700dcd5364a325480d5a4dc4e8e5bae599fb8783009",
				"dweb:/ipfs/QmbhRw49jdkQXCVmqDLSpGvRjBWk677v3ZSuNR3gkLxAiD"
			]
		},
		"interfaces/IPancakeRouter02.sol": {
			"keccak256": "0xd36c365fb434ae460de510632543a9c46393dbb49240a32fce653bc053fcae85",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://70a0df16eaf1069dc4c1e4059aae389486877effd59951d254d58ebb595a00e5",
				"dweb:/ipfs/QmQwTJDidPoHp82DuFSoNd7ZXfgLWq8w91Dhu7xfV9P7SV"
			]
		},
		"interfaces/IWETH.sol": {
			"keccak256": "0xc47452d9f0f9b92785cecb145290f5fd121c7037851297fef53045dab1535ed1",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://727c3e00a3f4b866c7c77556f8c7dc58e5deb7d628c6029d389ffe2a805f1f18",
				"dweb:/ipfs/QmTVb8mWmi9LrG9NaBfAjypKgx3jCUWMh3PdhN2B5P66Tg"
			]
		},
		"libraries/Babylonian.sol": {
			"keccak256": "0x843ce1653b291352aac0c5db5d6b887c7ad43824d1386e643a7c7b8b93095edb",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://5ed1045f1fff866f85ee8566fe6072625a7603e80e0645f82dd912d185d3d15f",
				"dweb:/ipfs/QmPbmWEMY2VK2QVtuX46Ygeyu4dMFufrGZdZuiyCWwJ5gq"
			]
		}
	},
	"version": 1
}